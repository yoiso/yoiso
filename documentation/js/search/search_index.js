var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.184,1,1.346]],["body/classes/AccessToken.html",[0,0.21,1,2.011,2,0.942,3,0.289,4,0.251,5,0.214,6,4.355,7,3.229,8,0.328,9,2.164,10,3.681,11,2.81,12,1.459,13,0.596,14,0.027,15,2.334,16,1.94,17,3.001,18,0.659,19,3.83,20,3.001,21,3.339,22,3.83,23,3.229,24,3.83,25,0.377,26,1.791,27,3.001,28,3.229,29,4.209,30,0.815,31,2.538,32,0.289,33,3.229,34,0.015,35,0.02,36,0.015]],["title/classes/AccountVerification.html",[0,0.184,37,2.01]],["body/classes/AccountVerification.html",[0,0.191,2,0.858,3,0.263,4,0.229,5,0.195,8,0.299,9,2.034,11,2.683,12,1.426,13,0.569,14,0.027,15,2.194,16,1.981,17,2.821,18,0.673,20,2.821,21,3.188,23,2.941,25,0.4,26,1.631,27,2.821,28,2.941,29,3.957,30,0.742,32,0.263,33,2.941,34,0.014,35,0.019,36,0.014,37,2.821,38,4.991,39,2.941,40,3.924,41,0.926,42,4.782,43,3.488,44,3.488,45,3.488,46,4.471,47,3.488,48,0.688,49,2.581,50,3.957,51,2.581,52,3.488,53,3.488]],["title/modules/AppModule.html",[54,1.253,55,2.215]],["body/modules/AppModule.html",[0,0.137,3,0.188,4,0.163,5,0.14,13,0.267,14,0.027,18,0.296,25,0.473,32,0.188,34,0.01,35,0.015,36,0.01,41,0.492,48,0.492,49,1.846,54,1.654,55,4.109,56,1.166,57,1.166,58,1.372,59,1.372,60,1.166,61,1.372,62,1.372,63,2.103,64,2.103,65,3.284,66,3.284,67,3.284,68,3.284,69,2.035,70,1.372,71,1.372,72,2.494,73,2.225,74,2.494,75,3.701,76,4.881,77,2.494,78,0.571,79,0.492,80,0.531,81,3.701,82,2.494,83,2.738,84,2.935,85,3.701,86,2.494,87,0.706,88,3.701,89,2.494,90,1.653,91,1.846,92,1.5,93,2.494,94,1.5,95,1.005,96,2.494,97,2.494,98,1.653,99,2.494,100,3.72,101,1.081,102,1.005,103,2.494,104,2.494,105,5.462,106,2.494,107,2.494,108,2.494,109,2.494,110,2.494,111,2.494,112,2.494,113,2.494,114,2.494,115,2.103,116,2.494,117,2.103,118,1.5,119,2.494,120,2.494,121,1.5,122,2.494,123,2.494,124,1.653,125,2.494,126,1.005,127,2.494,128,2.494,129,1.262,130,4.881,131,2.494,132,2.494,133,2.103,134,3.701,135,1.846,136,2.494]],["title/classes/Client.html",[0,0.184,137,1.691]],["body/classes/Client.html",[0,0.217,2,0.971,3,0.298,4,0.259,5,0.221,8,0.338,9,2.207,11,2.852,13,0.604,14,0.027,15,2.784,16,1.968,17,3.062,18,0.668,20,3.062,21,3.389,25,0.298,26,1.846,27,3.062,30,0.84,32,0.298,34,0.016,35,0.02,36,0.016,124,3.375,137,2.577,138,3.33,139,4.171,140,3.736,141,3.768,142,5.092,143,3.375,144,3.949,145,3.949,146,3.949]],["title/classes/CreateDailyBalanceDto.html",[0,0.184,147,2.215]],["body/classes/CreateDailyBalanceDto.html",[0,0.258,2,0.858,3,0.263,4,0.229,5,0.195,8,0.299,9,2.034,13,0.654,14,0.027,15,2.85,16,1.852,18,0.629,25,0.4,32,0.263,34,0.014,35,0.019,36,0.014,101,2.566,147,3.11,148,2.87,149,4.782,150,2.941,151,2.405,152,3.515,153,4.471,154,3.957,155,3.488,156,3.488,157,3.488,158,3.488,159,4.197,160,1.631,161,4.471,162,3.488,163,2.941,164,4.471,165,2.581,166,2.581,167,1.918,168,3.957,169,3.488]],["title/classes/DailyBalance.html",[0,0.184,170,1.563]],["body/classes/DailyBalance.html",[0,0.161,2,0.719,3,0.221,4,0.192,5,0.164,8,0.451,9,1.801,11,2.445,12,1.389,13,0.679,14,0.027,15,2.46,16,2.016,17,3.163,18,0.685,20,2.498,21,1.759,25,0.313,26,2.259,27,2.498,30,0.622,31,1.939,32,0.313,34,0.012,35,0.016,36,0.012,102,2.391,141,3.074,148,3.005,152,3.203,153,4.074,166,4.111,170,1.943,171,2.164,172,3.34,173,2.925,174,2.925,175,2.754,176,2.498,177,2.925,178,2.925,179,4.155,180,2.925,181,5.556,182,2.925,183,2.925,184,2.925,185,2.925,186,2.925,187,3.503,188,3.503,189,2.467,190,2.925,191,2.925]],["title/controllers/DailyBalanceController.html",[192,1.449,193,2.215]],["body/controllers/DailyBalanceController.html",[0,0.167,1,2.42,3,0.23,4,0.2,5,0.171,8,0.261,12,1.131,13,0.327,14,0.027,16,1.494,18,0.507,25,0.426,32,0.23,34,0.012,35,0.017,36,0.012,41,0.844,48,0.844,78,0.979,79,0.844,80,0.91,87,0.863,101,1.854,102,1.99,135,2.255,147,3.877,148,2.501,151,1.143,160,1.425,172,2.572,192,1.321,193,2.835,194,1.321,195,2.57,196,2.02,197,4.942,198,3.607,199,3.048,200,4.175,201,3.656,202,3.048,203,3.048,204,3.74,205,3.048,206,3.165,207,2.02,208,2.718,209,2.57,210,3.048,211,3.048,212,2.57,213,2.57,214,3.048,215,3.048,216,1.676,217,1.676,218,2.142,219,3.607,220,2.142,221,3.048,222,3.048,223,3.048,224,3.048,225,3.048,226,3.048]],["title/modules/DailyBalanceModule.html",[54,1.253,65,2.01]],["body/modules/DailyBalanceModule.html",[0,0.212,3,0.291,4,0.253,5,0.216,14,0.027,25,0.462,32,0.291,34,0.015,35,0.02,36,0.015,54,2.089,56,1.804,57,1.804,58,2.122,59,2.122,60,1.804,61,3.066,62,2.122,65,3.771,69,2.759,70,2.122,71,2.122,73,2.32,87,1.093,94,2.32,95,1.554,101,2.416,102,1.554,148,1.953,167,2.122,170,1.804,193,3.695,194,2.175,208,3.449,209,3.254,227,3.254,228,3.254,229,3.859,230,3.859,231,3.254]],["title/injectables/DailyBalanceService.html",[208,1.838,232,1.253]],["body/injectables/DailyBalanceService.html",[0,0.161,3,0.221,4,0.192,5,0.164,8,0.251,12,1.323,13,0.315,14,0.027,18,0.625,25,0.397,30,0.624,32,0.221,34,0.012,35,0.016,36,0.012,41,0.822,48,0.955,78,1.206,79,1.04,80,1.121,87,0.831,95,1.182,101,1.272,102,2.24,129,1.484,148,2.815,151,1.1,167,1.613,170,2.263,172,3.474,198,3.511,204,1.944,208,2.29,216,2.29,217,1.613,218,1.805,220,2.098,232,1.561,233,1.613,234,2.474,235,4.163,236,4.163,237,2.474,238,3.167,239,2.934,240,3.511,241,4.163,242,2.934,243,3.511,244,1.677,245,4.163,246,2.934,247,4.163,248,2.934,249,1.944,250,2.474,251,2.474,252,2.934,253,2.474,254,2.934,255,4.163,256,2.934,257,2.934,258,2.934,259,2.171,260,1.484,261,2.934,262,2.474]],["title/controllers/MeController.html",[192,1.449,263,2.215]],["body/controllers/MeController.html",[0,0.22,1,2.287,3,0.303,4,0.263,5,0.224,8,0.344,14,0.027,16,1.401,18,0.476,25,0.452,32,0.303,34,0.016,35,0.02,36,0.016,41,1.015,48,0.792,78,0.918,79,0.792,80,0.853,87,1.136,151,1.503,160,1.876,192,1.739,194,1.739,196,2.659,207,2.659,212,3.382,213,3.382,220,1.739,263,3.409,264,3.382,265,4.337,266,4.011,267,4.011,268,3.123,269,3.382,270,4.011,271,4.011,272,3.382,273,4.011,274,4.011]],["title/modules/MeModule.html",[54,1.253,66,2.01]],["body/modules/MeModule.html",[0,0.214,3,0.295,4,0.256,5,0.218,14,0.027,25,0.463,32,0.295,34,0.015,35,0.02,36,0.015,54,2.101,56,1.825,57,1.825,58,2.147,59,2.147,60,1.825,61,3.083,62,2.147,66,3.782,69,2.78,70,2.147,71,2.147,73,2.347,87,1.105,94,2.347,95,1.572,101,1.692,102,1.572,167,2.147,170,1.825,194,2.191,231,3.291,263,3.715,268,3.46,269,3.291,275,3.291,276,3.291,277,3.903,278,3.903]],["title/injectables/MeService.html",[232,1.253,268,1.838]],["body/injectables/MeService.html",[0,0.196,1,1.916,3,0.269,4,0.233,5,0.199,8,0.305,12,1.309,13,0.382,14,0.027,18,0.564,25,0.432,30,0.758,32,0.269,34,0.014,35,0.019,36,0.014,41,0.939,48,0.703,78,1.089,79,0.939,80,1.012,87,1.009,95,1.434,101,1.544,102,1.434,129,2.408,151,1.335,167,1.958,170,2.506,216,2.617,217,1.958,218,2.063,220,1.544,232,1.784,233,1.958,237,3.003,238,3.439,240,4.012,249,2.36,250,3.003,253,3.003,265,4.012,268,2.617,279,3.003,280,1.627,281,3.561,282,4.758,283,3.561,284,1.081]],["title/injectables/Oauth2Middleware.html",[98,2.215,232,1.253]],["body/injectables/Oauth2Middleware.html",[0,0.191,1,2.281,3,0.262,4,0.228,5,0.195,8,0.298,12,0.796,13,0.502,14,0.027,18,0.412,25,0.427,30,0.739,32,0.262,34,0.014,35,0.019,36,0.014,41,0.924,48,0.686,78,0.796,79,0.686,80,0.739,87,0.984,98,3.103,126,1.4,129,2.369,200,2.572,218,2.295,232,1.755,233,1.911,280,1.608,284,1.056,285,2.931,286,3.947,287,4.681,288,4.464,289,5.664,290,5.664,291,3.476,292,3.476,293,4.681,294,3.476,295,2.572,296,2.572,297,3.476,298,2.931,299,3.476,300,3.476,301,3.476,302,2.931,303,3.476,304,3.476,305,3.476,306,3.476,307,3.476,308,4.681,309,3.476,310,3.476]],["title/modules/Oauth2Module.html",[54,1.253,67,2.01]],["body/modules/Oauth2Module.html",[0,0.206,1,1.981,3,0.283,4,0.245,5,0.21,12,0.857,14,0.027,25,0.478,31,2.482,32,0.283,34,0.015,35,0.019,36,0.015,54,2.059,56,1.751,57,1.751,58,2.06,59,2.06,60,1.751,61,3.021,62,2.06,67,3.74,69,2.705,70,2.06,71,2.06,73,2.252,87,1.061,94,2.252,95,1.508,137,2.489,194,2.132,295,2.771,296,2.771,311,3.158,312,3.158,313,3.421,314,3.745,315,3.641,316,3.745,317,3.158,318,3.158,319,3.745]],["title/injectables/Oauth2Service.html",[232,1.253,313,1.838]],["body/injectables/Oauth2Service.html",[0,0.121,1,1.653,3,0.167,4,0.145,5,0.124,8,0.19,10,1.466,12,0.939,13,0.237,14,0.027,18,0.644,25,0.422,30,0.471,31,1.466,32,0.167,34,0.009,35,0.013,36,0.009,41,0.667,42,3.874,48,1.03,50,2.85,78,1.195,79,1.03,80,1.11,87,0.626,95,0.891,121,1.33,129,2.748,137,1.119,140,1.466,151,1.538,216,1.859,217,2.256,218,2.145,219,1.865,220,2.262,232,1.267,233,1.216,238,3.521,249,1.466,260,2.641,280,1.936,284,1.503,295,1.637,296,1.637,313,1.859,318,1.865,320,1.865,321,3.38,322,3.38,323,3.38,324,3.38,325,3.38,326,2.212,327,4.103,328,4.103,329,2.212,330,3.38,331,3.38,332,3.874,333,2.212,334,2.85,335,3.38,336,2.076,337,2.212,338,2.241,339,2.212,340,3.38,341,2.212,342,3.38,343,2.212,344,3.38,345,2.212,346,2.501,347,1.865,348,2.212,349,2.212,350,2.212,351,3.38,352,2.212,353,2.212,354,3.38,355,2.212,356,2.212,357,2.212,358,2.212,359,2.212,360,2.212,361,2.212]],["title/controllers/PasswordController.html",[192,1.449,315,2.215]],["body/controllers/PasswordController.html",[0,0.144,3,0.197,4,0.172,5,0.146,8,0.224,12,0.877,13,0.411,14,0.027,16,1.339,18,0.538,25,0.377,32,0.197,34,0.01,35,0.015,36,0.01,41,0.757,48,0.896,78,1.039,79,0.896,80,0.965,87,0.741,129,2.905,137,1.94,151,0.981,160,1.223,192,1.134,194,1.134,196,1.734,201,3.357,206,1.936,207,1.734,218,2.305,220,1.662,262,2.206,272,2.206,280,1.824,284,1.743,288,5.065,298,2.206,313,2.495,315,2.541,317,2.206,336,1.324,362,2.206,363,3.833,364,3.833,365,3.833,366,3.833,367,3.805,368,2.616,369,4.537,370,2.616,371,2.616,372,2.616,373,2.728,374,2.616,375,4.537,376,2.616,377,2.616,378,2.616,379,2.616,380,2.616,381,2.616,382,2.616,383,2.616,384,3.833,385,2.616,386,2.616,387,2.616,388,2.616,389,2.616,390,2.616,391,2.616,392,2.616,393,2.616,394,2.616,395,2.616,396,2.616,397,2.616,398,2.616,399,2.616,400,2.616,401,2.616,402,2.616,403,2.616,404,2.616]],["title/classes/RegisterUserDto.html",[0,0.184,405,2.215]],["body/classes/RegisterUserDto.html",[0,0.268,2,0.908,3,0.278,4,0.242,5,0.207,8,0.316,9,2.112,13,0.585,14,0.027,15,2.897,16,1.905,18,0.647,25,0.368,32,0.278,34,0.015,35,0.019,36,0.015,79,1.077,118,3.279,151,2.432,154,3.112,159,4.293,160,1.726,161,4.108,163,3.112,164,4.108,165,2.731,168,3.112,336,2.76,405,3.229,406,4.892,407,3.112,408,3.691,409,3.691,410,3.691,411,3.691,412,3.691,413,4.872,414,3.691]],["title/classes/RequestTokenDto.html",[0,0.184,367,2.215]],["body/classes/RequestTokenDto.html",[0,0.189,2,0.846,3,0.26,4,0.226,5,0.193,8,0.295,9,2.015,13,0.632,14,0.027,15,3.024,16,2.057,18,0.699,25,0.26,32,0.26,34,0.014,35,0.018,36,0.014,139,3.897,140,3.49,151,2.506,159,4.828,160,1.609,336,2.665,338,3.49,367,3.082,415,5.12,416,2.901,417,5.266,418,3.44,419,3.44,420,3.44,421,3.44,422,3.44]],["title/classes/User.html",[0,0.184,12,0.765]],["body/classes/User.html",[0,0.129,2,0.578,3,0.177,4,0.154,5,0.132,8,0.201,9,1.534,11,2.155,12,0.81,13,0.676,14,0.027,15,2.668,16,2.11,17,3.212,18,0.717,20,2.128,21,2.56,25,0.321,26,2.498,27,2.128,30,0.5,32,0.177,34,0.009,35,0.014,36,0.009,41,0.699,46,3.59,48,0.464,49,1.739,79,0.84,80,0.753,101,1.019,102,0.946,118,2.56,121,1.413,124,3.782,135,3.151,141,3.761,167,1.292,170,2.377,172,3.333,175,3.541,176,2.128,218,1.019,251,1.981,336,2.155,346,2.619,423,1.981,424,3.59,425,3.59,426,3.59,427,3.151,428,3.59,429,4.739,430,2.35,431,2.35,432,2.35,433,5.706,434,2.35,435,2.35,436,2.35,437,2.35,438,2.35,439,4.739,440,2.985,441,2.35,442,2.35,443,2.35,444,2.346,445,2.35,446,2.35,447,2.35,448,2.35,449,3.539,450,2.35,451,2.35,452,2.35,453,2.35]],["title/controllers/UserController.html",[92,2.01,192,1.449]],["body/controllers/UserController.html",[0,0.173,3,0.237,4,0.206,5,0.176,8,0.269,12,1.15,13,0.337,14,0.027,16,1.754,18,0.596,25,0.41,32,0.237,34,0.012,35,0.017,36,0.012,41,0.862,48,0.992,78,1,79,0.862,80,0.93,87,0.89,92,2.627,133,2.65,151,1.178,160,1.469,192,1.362,194,1.362,196,2.083,201,3.717,204,3.329,206,2.325,207,2.083,216,1.728,217,1.728,218,1.362,220,2.177,243,2.65,280,1.794,284,0.954,405,4.016,454,2.65,455,5.429,456,3.684,457,3.684,458,3.142,459,3.142,460,3.142,461,2.65,462,4.369,463,3.142,464,2.762,465,2.65,466,3.142,467,3.142,468,3.142,469,3.142,470,3.142,471,3.142,472,3.142,473,3.142,474,3.142,475,3.142,476,3.142,477,3.142]],["title/modules/UserModule.html",[54,1.253,68,2.01]],["body/modules/UserModule.html",[0,0.21,3,0.289,4,0.251,5,0.214,12,1.143,14,0.027,25,0.472,32,0.289,34,0.015,35,0.02,36,0.015,37,2.302,51,2.834,54,2.082,56,1.791,57,1.791,58,2.106,59,2.106,60,1.791,61,3.054,62,2.106,68,3.763,69,2.745,70,2.106,71,2.106,73,2.302,87,1.085,92,3.339,94,2.302,95,1.542,152,2.538,194,2.164,464,3.442,465,3.229,478,3.229,479,3.229,480,3.83,481,3.83,482,3.229,483,3.83]],["title/injectables/UserService.html",[232,1.253,464,1.838]],["body/injectables/UserService.html",[0,0.127,3,0.174,4,0.152,5,0.129,8,0.198,9,1.516,12,1.262,13,0.375,14,0.027,18,0.63,25,0.416,30,0.492,32,0.174,34,0.009,35,0.014,36,0.009,37,2.102,40,2.587,41,0.69,48,0.928,51,1.711,78,1.076,79,0.928,80,1,83,1.711,84,3.192,87,0.655,90,1.533,91,1.711,95,0.931,100,4.257,115,1.95,118,1.39,121,2.102,151,1.581,152,3.116,204,1.533,216,1.923,217,2.319,218,2.037,220,2.037,232,1.311,233,1.272,238,3.315,244,1.893,249,1.533,280,1.612,284,1.062,302,1.95,338,1.533,347,1.95,456,2.949,457,2.949,461,2.949,464,1.923,482,1.95,484,1.95,485,1.828,486,4.7,487,3.497,488,2.312,489,4.217,490,5.514,491,2.312,492,3.497,493,2.312,494,3.497,495,2.312,496,3.497,497,2.312,498,2.312,499,2.312,500,2.312,501,2.312,502,2.312,503,2.312,504,2.312,505,2.312,506,2.312,507,2.312,508,2.312,509,2.312,510,2.312,511,2.312,512,2.312,513,2.312,514,2.312,515,2.312,516,2.312,517,2.312,518,2.312,519,2.312,520,2.312,521,2.312,522,2.312,523,2.312,524,2.312,525,2.312,526,3.497,527,2.312,528,2.312,529,2.312,530,2.312]],["title/classes/changeDefaultValueOnIsVerified1560422912373.html",[0,0.184,531,2.473]],["body/classes/changeDefaultValueOnIsVerified1560422912373.html",[0,0.193,2,0.864,3,0.265,4,0.23,5,0.197,8,0.301,12,1.079,13,0.506,14,0.026,18,0.559,25,0.265,30,0.747,32,0.265,34,0.014,35,0.019,36,0.014,41,0.931,48,0.931,78,1.079,79,0.931,80,1.003,126,1.899,176,2.111,244,2.291,280,1.855,284,1.432,427,4.208,485,2.648,531,3.488,532,4.487,533,2.961,534,2.488,535,2.204,536,2.204,537,2.204,538,3.004,539,3.512,540,2.204,541,3.512,542,2.834,543,2.204,544,4.714,545,3.488,546,2.592,547,2.599]],["title/coverage.html",[548,3.373]],["body/coverage.html",[0,0.354,1,1.524,5,0.144,6,2.799,7,2.167,12,0.588,13,0.276,14,0.027,34,0.01,35,0.015,36,0.01,37,1.545,38,2.167,39,2.167,60,1.202,84,1.545,92,1.545,98,1.703,101,1.114,102,1.808,121,1.545,137,1.3,138,2.167,147,1.703,148,2.506,149,2.167,150,2.167,170,1.202,171,1.902,192,2.147,193,1.703,195,2.167,208,1.413,232,1.979,234,2.167,263,1.703,264,2.167,268,1.413,279,2.167,285,2.167,313,1.413,315,1.703,320,2.167,362,2.167,367,1.703,405,1.703,406,2.167,407,2.167,415,2.167,416,2.167,423,2.167,454,2.167,464,1.413,484,2.167,531,1.902,532,2.167,533,2.167,543,1.202,547,4.996,548,1.902,549,2.57,550,2.57,551,2.57,552,6.08,553,3.783,554,3.783,555,5.521,556,3.19,557,3.783,558,4.953,559,2.167,560,3.783,561,2.167,562,2.167,563,1.902,564,2.167,565,2.167,566,1.902,567,2.167,568,2.167,569,1.902,570,2.167,571,2.167,572,1.902,573,2.167,574,2.167,575,1.902,576,2.167,577,2.167,578,1.902,579,2.167,580,2.167,581,1.902,582,2.167,583,3.783,584,2.57,585,2.57,586,2.167,587,2.57,588,2.57]],["title/classes/createAccountVerificationTable1561015030859.html",[0,0.184,569,2.473]],["body/classes/createAccountVerificationTable1561015030859.html",[0,0.193,2,0.867,3,0.266,4,0.231,5,0.197,8,0.302,11,2.391,13,0.507,14,0.026,18,0.56,25,0.266,30,0.75,32,0.266,34,0.014,35,0.019,36,0.014,40,2.608,41,0.933,48,0.933,78,1.082,79,0.933,80,1.005,126,1.903,244,2.294,280,1.857,284,1.435,444,2.336,485,2.65,534,2.493,535,2.209,536,2.209,537,2.209,538,3.006,540,2.209,543,2.209,546,2.598,567,4.495,568,2.972,569,3.496,589,3.524,590,3.524,591,1.938,592,3.984,593,2.119,594,2.972,595,2.972,596,1.938,597,2.972,598,1.938]],["title/classes/createDailyBalanceIndex1561539612695.html",[0,0.184,581,2.473]],["body/classes/createDailyBalanceIndex1561539612695.html",[0,0.191,2,0.858,3,0.263,4,0.229,5,0.195,8,0.507,13,0.503,14,0.026,18,0.557,25,0.263,30,0.742,32,0.263,34,0.014,35,0.019,36,0.014,41,0.926,48,0.926,78,1.074,79,0.926,80,0.998,126,1.89,172,2.097,244,2.284,259,4.197,260,1.765,280,1.851,284,1.722,485,2.642,534,2.48,535,2.194,536,2.194,537,2.194,538,3,540,2.194,579,4.471,580,2.941,581,3.472,591,2.58,598,2.58,599,3.488,600,3.488,601,4.692,602,4.692]],["title/classes/createDailyBalanceRelationship1561358492040.html",[0,0.184,578,2.473]],["body/classes/createDailyBalanceRelationship1561358492040.html",[0,0.181,2,0.811,3,0.249,4,0.216,5,0.184,8,0.282,13,0.484,14,0.026,18,0.535,25,0.249,26,1.541,30,0.701,32,0.249,34,0.013,35,0.018,36,0.013,41,0.891,48,0.891,78,1.034,79,0.891,80,0.961,126,1.818,244,2.231,259,4.099,260,2.606,280,1.82,284,1.682,373,1.981,485,2.598,534,2.408,535,2.111,536,2.111,537,2.111,538,2.965,540,2.111,542,3.331,543,2.591,546,1.812,576,4.343,577,2.779,578,3.341,593,1.981,596,2.483,603,3.295,604,3.295,605,2.993,606,2.184,607,4.515,608,2.993,609,2.184,610,2.184,611,2.993,612,2.184,613,2.993]],["title/classes/createOauth1560545960045.html",[0,0.184,566,2.473]],["body/classes/createOauth1560545960045.html",[0,0.101,2,0.453,3,0.139,4,0.121,5,0.103,8,0.389,10,4.094,13,0.314,14,0.023,18,0.348,25,0.139,26,2.701,30,0.392,32,0.139,34,0.007,35,0.012,36,0.007,41,0.579,48,0.579,78,0.671,79,0.821,80,0.624,126,1.181,129,1.483,137,3.072,139,2.701,140,1.943,143,1.943,175,1.221,176,1.763,189,2.472,244,1.676,260,1.847,280,1.469,284,1.996,332,2.472,334,4.079,373,1.763,444,3.011,485,2.097,534,1.707,535,1.371,536,1.371,537,1.371,538,2.537,540,1.371,542,3.931,543,3.057,545,1.363,546,3.177,547,1.363,564,3.078,565,1.554,566,2.169,591,1.013,593,2.195,596,2.288,598,1.013,605,3.983,606,1.943,608,2.758,609,1.943,610,1.221,611,2.758,612,2.42,613,3.983,614,1.843,615,1.843,616,2.472,617,2.932,618,2.932,619,2.932,620,2.932,621,2.932,622,1.843,623,2.932,624,4.161,625,3.509,626,4.161,627,4.161,628,4.161,629,1.843,630,1.843]],["title/classes/createOauth2Middleware1561200781531.html",[0,0.184,575,2.473]],["body/classes/createOauth2Middleware1561200781531.html",[0,0.183,2,0.818,3,0.251,4,0.218,5,0.186,8,0.444,10,3.687,13,0.487,14,0.026,18,0.539,25,0.251,30,0.708,32,0.251,34,0.013,35,0.018,36,0.013,41,0.897,48,0.897,78,1.04,79,0.897,80,0.967,126,1.831,143,2.206,244,2.24,260,2.3,280,1.826,284,1.689,373,2.001,485,2.606,534,2.421,535,2.125,536,2.125,537,2.125,538,2.971,540,2.125,542,2.733,543,2.125,573,4.365,574,2.806,575,3.363,591,1.83,596,2.5,598,1.83,605,2.206,606,2.206,608,3.013,609,2.206,610,2.206,611,3.013,612,2.206,613,2.206,616,3.833,631,3.328,632,3.328,633,4.545]],["title/classes/createUserColumn1560421973676.html",[0,0.184,563,2.473]],["body/classes/createUserColumn1560421973676.html",[0,0.18,2,0.805,3,0.247,4,0.215,5,0.183,8,0.281,11,2.275,12,1.029,13,0.482,14,0.026,18,0.533,25,0.247,30,0.697,32,0.247,34,0.013,35,0.018,36,0.013,41,0.887,48,0.887,78,1.029,79,1.013,80,0.956,118,1.968,126,1.81,175,3.402,244,2.225,280,1.817,284,1.365,336,1.657,424,2.761,425,2.761,426,2.761,427,2.423,428,2.761,444,3.662,485,2.593,534,2.4,535,2.102,536,2.102,537,2.102,538,2.961,540,2.102,543,2.102,545,2.423,546,3.482,561,4.328,562,2.761,563,3.326,591,1.801,593,1.968,594,2.761,595,2.761,596,1.801,597,2.761,598,1.801,634,3.274,635,3.274,636,3.274]],["title/dependencies.html",[57,1.879,637,2.793]],["body/dependencies.html",[0,0.28,14,0.027,30,0.843,34,0.016,35,0.02,36,0.016,57,1.854,83,2.933,84,2.383,87,1.123,90,2.628,91,2.933,95,1.597,160,1.854,165,2.933,346,2.933,638,3.964,639,5.647,640,3.964,641,5.105,642,3.964,643,5.105,644,3.964,645,3.964,646,3.964,647,3.964,648,3.964,649,3.964,650,3.964,651,3.964,652,3.964,653,3.964,654,3.964,655,3.964,656,3.964,657,3.343,658,3.964,659,3.964,660,3.964,661,3.964,662,3.964,663,3.964,664,3.964,665,3.964,666,3.964,667,3.964]],["title/miscellaneous/enumerations.html",[668,1.536,669,3.389]],["body/miscellaneous/enumerations.html",[8,0.418,14,0.025,34,0.019,35,0.023,36,0.019,102,1.965,148,2.468,166,4.296,171,4.296,187,4.895,188,4.895,668,2.683,669,4.113,670,4.878,671,4.895]],["title/miscellaneous/functions.html",[668,1.536,672,3.389]],["body/miscellaneous/functions.html",[8,0.43,14,0.023,34,0.02,35,0.023,36,0.02,60,2.934,556,4.235,559,5.291,668,2.762,672,4.235,673,5.907]],["title/index.html",[8,0.239,674,2.793,675,2.793]],["body/index.html",[4,0.232,14,0.026,34,0.014,35,0.019,36,0.014,90,3.539,238,2.126,548,2.617,676,3.536,677,3.536,678,4.736,679,3.536,680,3.536,681,3.536,682,3.536,683,3.536,684,3.536,685,3.536,686,3.536,687,3.536,688,3.536,689,3.536,690,3.536,691,3.536,692,5.34,693,6.251,694,3.536,695,2.982,696,3.536,697,3.536,698,5.161,699,3.536,700,3.536,701,4.736,702,2.982,703,3.536,704,2.982,705,5.34,706,3.536,707,4.736,708,3.536,709,3.536,710,3.536,711,3.994,712,4.736,713,4.736,714,3.536,715,3.536,716,3.536,717,3.536,718,3.536,719,3.536,720,3.536,721,3.536,722,3.536,723,3.536,724,3.536,725,3.536,726,3.536,727,3.536,728,3.536,729,3.536,730,3.536,731,3.536,732,3.536,733,3.536,734,3.536,735,3.536,736,3.536]],["title/modules.html",[56,2.132]],["body/modules.html",[14,0.022,34,0.019,35,0.022,36,0.019,55,3.114,56,2.197,65,2.824,66,2.824,67,2.824,68,2.824,711,5.469,737,6.486,738,6.486,739,6.486]],["title/overview.html",[740,3.844]],["body/overview.html",[2,0.925,14,0.026,34,0.015,35,0.02,36,0.015,54,1.409,55,4.356,56,1.758,57,1.758,58,2.067,59,2.067,60,1.758,61,2.067,62,2.067,63,3.169,64,3.169,65,3.648,66,3.648,67,3.648,68,3.648,69,2.712,70,2.067,71,2.067,194,1.629,208,3.027,227,3.169,228,3.169,233,2.067,268,3.027,275,3.169,276,3.169,311,3.169,312,3.169,313,3.027,464,3.027,478,3.169,479,3.169,740,3.169,741,4.932,742,3.759,743,3.759]],["title/classes/userForAccountVerification1561019799282.html",[0,0.184,572,2.473]],["body/classes/userForAccountVerification1561019799282.html",[0,0.166,2,0.743,3,0.228,4,0.198,5,0.169,8,0.482,13,0.456,14,0.025,18,0.504,25,0.228,26,1.413,30,0.643,32,0.228,34,0.012,35,0.017,36,0.012,41,0.839,48,0.839,78,0.973,79,0.839,80,0.904,126,1.712,143,2.817,244,2.149,260,2.846,280,1.771,284,1.858,373,1.816,485,2.529,534,2.3,535,1.988,536,1.988,537,1.988,538,2.908,540,1.988,542,3.507,543,2.728,546,1.661,570,4.147,571,2.547,572,3.145,591,1.661,592,5.159,593,1.816,596,2.338,598,1.661,605,3.259,606,2.002,608,2.817,609,2.002,610,2.002,611,2.817,612,2.002,613,3.259,744,3.021,745,3.021,746,4.25,747,4.25,748,4.25]],["title/miscellaneous/variables.html",[668,1.536,749,3.389]],["body/miscellaneous/variables.html",[1,1.899,5,0.197,6,2.599,8,0.301,13,0.506,14,0.027,34,0.014,35,0.019,36,0.014,84,2.834,117,4.487,124,3.125,176,2.834,200,2.599,220,1.522,286,2.961,336,1.777,338,2.328,440,3.975,582,3.975,586,2.961,625,2.961,657,2.961,668,1.931,671,3.975,695,2.961,698,2.961,702,2.961,704,2.961,749,2.961,750,3.512,751,3.512,752,3.512,753,3.512,754,3.512,755,3.512,756,3.512,757,3.512,758,3.512,759,3.512,760,3.512,761,3.512,762,3.512,763,3.512,764,3.512,765,3.512,766,5.688,767,4.714,768,3.512,769,3.512,770,3.512,771,4.714,772,3.512,773,3.512,774,3.512,775,3.512,776,3.512,777,3.512,778,3.512,779,3.512,780,3.512,781,3.512,782,3.512,783,3.512,784,3.512,785,3.512,786,3.512,787,3.512,788,3.512,789,3.512]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":547,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["0.0.0.0",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["0.2.18",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":298,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"controllers/PasswordController.html":{}}}],["1.1.3",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":451,"title":{},"body":{"classes/User.html":{}}}],["16",{"_index":743,"title":{},"body":{"overview.html":{}}}],["2.17.1",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["23:59:59.9",{"_index":256,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["3.0.0",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":742,"title":{},"body":{"overview.html":{}}}],["401",{"_index":306,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["5",{"_index":741,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":295,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"injectables/Oauth2Service.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstoken.access_token",{"_index":357,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["accesstoken.user",{"_index":219,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/Oauth2Service.html":{}}}],["accesstokenrepo",{"_index":327,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["account",{"_index":152,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["account.user",{"_index":505,"title":{},"body":{"injectables/UserService.html":{}}}],["account.user.isverified",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["account_verification",{"_index":592,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["accountrepository",{"_index":489,"title":{},"body":{"injectables/UserService.html":{}}}],["accountverification",{"_index":37,"title":{"classes/AccountVerification.html":{}},"body":{"classes/AccountVerification.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["accrepo",{"_index":299,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["accrepo.findone({access_token",{"_index":301,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["action",{"_index":611,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["ada",{"_index":396,"title":{},"body":{"controllers/PasswordController.html":{}}}],["adapter",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":605,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["allow",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":719,"title":{},"body":{"index.html":{}}}],["amount",{"_index":153,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{}}}],["anda",{"_index":515,"title":{},"body":{"injectables/UserService.html":{}}}],["angular",{"_index":687,"title":{},"body":{"index.html":{}}}],["apimodelproperty",{"_index":159,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{}}}],["apimodelproperty()@isdefined()@isnotempty()@length(1",{"_index":154,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["apimodelproperty()@isemail",{"_index":408,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["apimodelproperty()@isenum(balancetype",{"_index":157,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["apimodelproperty()@length(6",{"_index":411,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["apiusetags",{"_index":207,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}}}],["apiusetags('dailybalances",{"_index":214,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["apiusetags('me",{"_index":270,"title":{},"body":{"controllers/MeController.html":{}}}],["apiusetags('token",{"_index":378,"title":{},"body":{"controllers/PasswordController.html":{}}}],["apiusetags('users",{"_index":468,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":696,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":304,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["applications",{"_index":684,"title":{},"body":{"index.html":{}}}],["apply(oauth2middleware",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["asdzxcfv123",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":280,"title":{},"body":{"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["author",{"_index":729,"title":{},"body":{"index.html":{}}}],["auto_increment",{"_index":594,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createUserColumn1560421973676.html":{}}}],["automatically",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":284,"title":{},"body":{"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["backers",{"_index":720,"title":{},"body":{"index.html":{}}}],["balance.controller",{"_index":230,"title":{},"body":{"modules/DailyBalanceModule.html":{}}}],["balance.controller.ts",{"_index":195,"title":{},"body":{"controllers/DailyBalanceController.html":{},"coverage.html":{}}}],["balance.controller.ts:16",{"_index":202,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["balance.controller.ts:26",{"_index":205,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["balance.dto",{"_index":211,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["balance.dto.ts",{"_index":150,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"coverage.html":{}}}],["balance.dto.ts:11",{"_index":155,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["balance.dto.ts:17",{"_index":156,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["balance.dto.ts:21",{"_index":158,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["balance.entity",{"_index":167,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"classes/User.html":{}}}],["balance.entity.ts",{"_index":171,"title":{},"body":{"classes/DailyBalance.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["balance.entity.ts:13",{"_index":180,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:16",{"_index":173,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:19",{"_index":174,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:25",{"_index":182,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:29",{"_index":178,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:33",{"_index":185,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["balance.module.ts",{"_index":229,"title":{},"body":{"modules/DailyBalanceModule.html":{}}}],["balance.service",{"_index":209,"title":{},"body":{"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{}}}],["balance.service.ts",{"_index":234,"title":{},"body":{"injectables/DailyBalanceService.html":{},"coverage.html":{}}}],["balance.service.ts:14",{"_index":242,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["balance.service.ts:20",{"_index":248,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["balance.service.ts:24",{"_index":246,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["balance.service.ts:7",{"_index":239,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["balance/daily",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["balance/dto/create",{"_index":149,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"coverage.html":{}}}],["balancetype",{"_index":166,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"miscellaneous/enumerations.html":{}}}],["bash",{"_index":692,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":346,"title":{},"body":{"injectables/Oauth2Service.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.comparesync(password",{"_index":355,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["bcrypt.hashsync(this.password",{"_index":450,"title":{},"body":{"classes/User.html":{}}}],["beforeinsert",{"_index":46,"title":{},"body":{"classes/AccountVerification.html":{},"classes/User.html":{}}}],["between",{"_index":261,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["body",{"_index":206,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":439,"title":{},"body":{"classes/User.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":394,"title":{},"body":{"controllers/PasswordController.html":{}}}],["browse",{"_index":739,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":737,"title":{},"body":{"modules.html":{}}}],["building",{"_index":679,"title":{},"body":{"index.html":{}}}],["case",{"_index":387,"title":{},"body":{"controllers/PasswordController.html":{}}}],["catch((errors",{"_index":522,"title":{},"body":{"injectables/UserService.html":{}}}],["catch(e",{"_index":391,"title":{},"body":{"controllers/PasswordController.html":{}}}],["change",{"_index":544,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["change_default_value_on_is_verified.ts",{"_index":533,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["change_default_value_on_is_verified.ts:5",{"_index":541,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["change_default_value_on_is_verified.ts:9",{"_index":539,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["changedefaultvalueonisverified1560422912373",{"_index":531,"title":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["character",{"_index":624,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["checkclient",{"_index":321,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["checkclient(clientid",{"_index":331,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["checkuser",{"_index":322,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["checkuser(username",{"_index":335,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["cli",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client",{"_index":137,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["client.entity",{"_index":318,"title":{},"body":{"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{}}}],["client_id",{"_index":139,"title":{},"body":{"classes/Client.html":{},"classes/RequestTokenDto.html":{},"classes/createOauth1560545960045.html":{}}}],["client_secret",{"_index":140,"title":{},"body":{"classes/Client.html":{},"injectables/Oauth2Service.html":{},"classes/RequestTokenDto.html":{},"classes/createOauth1560545960045.html":{}}}],["client`(`id",{"_index":630,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["clientid",{"_index":334,"title":{},"body":{"injectables/Oauth2Service.html":{},"classes/createOauth1560545960045.html":{}}}],["clientrepo",{"_index":328,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["clientsecret",{"_index":332,"title":{},"body":{"injectables/Oauth2Service.html":{},"classes/createOauth1560545960045.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dailybalancemodule",{"_index":227,"title":{},"body":{"modules/DailyBalanceModule.html":{},"overview.html":{}}}],["cluster_dailybalancemodule_providers",{"_index":228,"title":{},"body":{"modules/DailyBalanceModule.html":{},"overview.html":{}}}],["cluster_memodule",{"_index":275,"title":{},"body":{"modules/MeModule.html":{},"overview.html":{}}}],["cluster_memodule_providers",{"_index":276,"title":{},"body":{"modules/MeModule.html":{},"overview.html":{}}}],["cluster_oauth2module",{"_index":311,"title":{},"body":{"modules/Oauth2Module.html":{},"overview.html":{}}}],["cluster_oauth2module_providers",{"_index":312,"title":{},"body":{"modules/Oauth2Module.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":478,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":479,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":40,"title":{},"body":{"classes/AccountVerification.html":{},"injectables/UserService.html":{},"classes/createAccountVerificationTable1561015030859.html":{}}}],["collate",{"_index":627,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["column",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["column('text",{"_index":17,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["column({type",{"_index":141,"title":{},"body":{"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["compiled",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["config.get('app.mailer",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.load(path.resolve(__dirname",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["configure",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionoptions",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(errors",{"_index":523,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(response",{"_index":521,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":218,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constraint",{"_index":606,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["constructor",{"_index":216,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(dailybalancerepo",{"_index":237,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{}}}],["constructor(private",{"_index":272,"title":{},"body":{"controllers/MeController.html":{},"controllers/PasswordController.html":{}}}],["constructor(userrepo",{"_index":326,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["constructor(userrepository",{"_index":488,"title":{},"body":{"injectables/UserService.html":{}}}],["consumer",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":517,"title":{},"body":{"injectables/UserService.html":{}}}],["controller",{"_index":192,"title":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('dailybalances",{"_index":215,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["controller('me",{"_index":271,"title":{},"body":{"controllers/MeController.html":{}}}],["controller('token",{"_index":379,"title":{},"body":{"controllers/PasswordController.html":{}}}],["controller('users",{"_index":469,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":194,"title":{},"body":{"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":548,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":235,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["create(dto",{"_index":241,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["create_account_verification_table.ts",{"_index":568,"title":{},"body":{"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{}}}],["create_account_verification_table.ts:5",{"_index":590,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{}}}],["create_account_verification_table.ts:9",{"_index":589,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{}}}],["create_daily_balance_index.ts",{"_index":580,"title":{},"body":{"coverage.html":{},"classes/createDailyBalanceIndex1561539612695.html":{}}}],["create_daily_balance_index.ts:10",{"_index":599,"title":{},"body":{"classes/createDailyBalanceIndex1561539612695.html":{}}}],["create_daily_balance_index.ts:5",{"_index":600,"title":{},"body":{"classes/createDailyBalanceIndex1561539612695.html":{}}}],["create_daily_balance_relationship.ts",{"_index":577,"title":{},"body":{"coverage.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["create_daily_balance_relationship.ts:10",{"_index":603,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["create_daily_balance_relationship.ts:5",{"_index":604,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["create_oauth.ts",{"_index":565,"title":{},"body":{"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["create_oauth.ts:24",{"_index":614,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["create_oauth.ts:5",{"_index":615,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["create_oauth2_middleware.ts",{"_index":574,"title":{},"body":{"coverage.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["create_oauth2_middleware.ts:10",{"_index":631,"title":{},"body":{"classes/createOauth2Middleware1561200781531.html":{}}}],["create_oauth2_middleware.ts:5",{"_index":632,"title":{},"body":{"classes/createOauth2Middleware1561200781531.html":{}}}],["create_user_column.ts",{"_index":562,"title":{},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["create_user_column.ts:5",{"_index":635,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["create_user_column.ts:9",{"_index":634,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["createaccountverificationtable1561015030859",{"_index":569,"title":{"classes/createAccountVerificationTable1561015030859.html":{}},"body":{"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{}}}],["createdailybalance",{"_index":197,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["createdailybalance(createdailybalancedto",{"_index":199,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["createdailybalancedto",{"_index":147,"title":{"classes/CreateDailyBalanceDto.html":{}},"body":{"classes/CreateDailyBalanceDto.html":{},"controllers/DailyBalanceController.html":{},"coverage.html":{}}}],["createdailybalanceindex1561539612695",{"_index":581,"title":{"classes/createDailyBalanceIndex1561539612695.html":{}},"body":{"coverage.html":{},"classes/createDailyBalanceIndex1561539612695.html":{}}}],["createdailybalancerelationship1561358492040",{"_index":578,"title":{"classes/createDailyBalanceRelationship1561358492040.html":{}},"body":{"coverage.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["createoauth1560545960045",{"_index":566,"title":{"classes/createOauth1560545960045.html":{}},"body":{"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["createoauth2middleware1561200781531",{"_index":575,"title":{"classes/createOauth2Middleware1561200781531.html":{}},"body":{"coverage.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["createparamdecorator((data",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createusercolumn1560421973676",{"_index":563,"title":{"classes/createUserColumn1560421973676.html":{}},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["credit",{"_index":188,"title":{},"body":{"classes/DailyBalance.html":{},"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":50,"title":{},"body":{"classes/AccountVerification.html":{},"injectables/Oauth2Service.html":{}}}],["crypto.randombytes(16).tostring('hex",{"_index":53,"title":{},"body":{"classes/AccountVerification.html":{}}}],["crypto.randombytes(24).tostring('hex",{"_index":350,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["current_timestamp",{"_index":189,"title":{},"body":{"classes/DailyBalance.html":{},"classes/createOauth1560545960045.html":{}}}],["d).{ts,js",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["daily",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDailyBalanceDto.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"classes/User.html":{},"coverage.html":{}}}],["daily_balance",{"_index":259,"title":{},"body":{"injectables/DailyBalanceService.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["dailybalance",{"_index":170,"title":{"classes/DailyBalance.html":{}},"body":{"classes/DailyBalance.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"classes/User.html":{},"coverage.html":{}}}],["dailybalance.user",{"_index":251,"title":{},"body":{"injectables/DailyBalanceService.html":{},"classes/User.html":{}}}],["dailybalancecontroller",{"_index":193,"title":{"controllers/DailyBalanceController.html":{}},"body":{"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"coverage.html":{}}}],["dailybalancemodule",{"_index":65,"title":{"modules/DailyBalanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules.html":{},"overview.html":{}}}],["dailybalancerepo",{"_index":240,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{}}}],["dailybalances",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"classes/User.html":{}}}],["dailybalanceservice",{"_index":208,"title":{"injectables/DailyBalanceService.html":{}},"body":{"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"coverage.html":{},"overview.html":{}}}],["database",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":172,"title":{},"body":{"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"classes/User.html":{},"classes/createDailyBalanceIndex1561539612695.html":{}}}],["datecreated",{"_index":424,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["datedeleted",{"_index":425,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["datelimit",{"_index":255,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["dateupdated",{"_index":426,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["debit",{"_index":187,"title":{},"body":{"classes/DailyBalance.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":176,"title":{},"body":{"classes/DailyBalance.html":{},"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createOauth1560545960045.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["delete",{"_index":373,"title":{},"body":{"controllers/PasswordController.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":688,"title":{},"body":{"index.html":{}}}],["dev",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":697,"title":{},"body":{"index.html":{}}}],["dir",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["disable",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":535,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["down(queryrunner",{"_index":537,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["drop",{"_index":613,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["dto",{"_index":243,"title":{},"body":{"injectables/DailyBalanceService.html":{},"controllers/UserController.html":{}}}],["dto/create",{"_index":210,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["dto/register",{"_index":466,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/request",{"_index":376,"title":{},"body":{"controllers/PasswordController.html":{}}}],["e.message",{"_index":393,"title":{},"body":{"controllers/PasswordController.html":{}}}],["e2e",{"_index":708,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":680,"title":{},"body":{"index.html":{}}}],["email",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/createUserColumn1560421973676.html":{}}}],["engine=innodb",{"_index":597,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createUserColumn1560421973676.html":{}}}],["entities",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["entity{.ts,.js",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":181,"title":{},"body":{"classes/DailyBalance.html":{}}}],["enumerations",{"_index":669,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["exclude",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":636,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["expirationdate",{"_index":619,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":440,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["fastify",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":486,"title":{},"body":{"injectables/UserService.html":{}}}],["fk_2d4eff3e8d902988754fde5be03",{"_index":748,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["fk_91e75ed61bb07ebda3912510f24",{"_index":607,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["fk_9949557d0e1b2c19e5344c171e9",{"_index":616,"title":{},"body":{"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["fk_c425901c1f66598550020494008",{"_index":617,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["folder",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foreign",{"_index":608,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["forroutes",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":678,"title":{},"body":{"index.html":{}}}],["function",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":672,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatetoken",{"_index":42,"title":{},"body":{"classes/AccountVerification.html":{},"injectables/Oauth2Service.html":{}}}],["get('/emailverifications",{"_index":462,"title":{},"body":{"controllers/UserController.html":{}}}],["getbydateforloggedinuser",{"_index":236,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["getbydateforloggedinuser(user",{"_index":245,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["getbytoken",{"_index":198,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{}}}],["getbytoken(@accesstoken",{"_index":222,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["getbytoken(accesstoken",{"_index":203,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["getbytoken(token",{"_index":247,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["getconfig",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getme",{"_index":265,"title":{},"body":{"controllers/MeController.html":{},"injectables/MeService.html":{}}}],["getme(@accesstoken",{"_index":273,"title":{},"body":{"controllers/MeController.html":{}}}],["getme(accesstoken",{"_index":266,"title":{},"body":{"controllers/MeController.html":{}}}],["getme(token",{"_index":282,"title":{},"body":{"injectables/MeService.html":{}}}],["getrepository",{"_index":294,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["getrepository(accesstoken",{"_index":300,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["getting",{"_index":674,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":455,"title":{},"body":{"controllers/UserController.html":{}}}],["grant_type",{"_index":417,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["granttype",{"_index":384,"title":{},"body":{"controllers/PasswordController.html":{}}}],["grow",{"_index":716,"title":{},"body":{"index.html":{}}}],["handlebarsadapter",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["hashedpassword",{"_index":449,"title":{},"body":{"classes/User.html":{}}}],["hashpassword",{"_index":429,"title":{},"body":{"classes/User.html":{}}}],["headers",{"_index":375,"title":{},"body":{"controllers/PasswordController.html":{}}}],["headers.authorization.split",{"_index":381,"title":{},"body":{"controllers/PasswordController.html":{}}}],["heavily",{"_index":685,"title":{},"body":{"index.html":{}}}],["here",{"_index":726,"title":{},"body":{"index.html":{}}}],["host",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":292,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["https://nestjs.com",{"_index":733,"title":{},"body":{"index.html":{}}}],["id",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createUserColumn1560421973676.html":{}}}],["identifier",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["idx_2d4eff3e8d902988754fde5be0",{"_index":746,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["idx_6ed9067942d7537ce359e172ff",{"_index":618,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["idx_7510ce0a84bde51dbff978b4b4",{"_index":623,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["idx_91e75ed61bb07ebda3912510f2",{"_index":602,"title":{},"body":{"classes/createDailyBalanceIndex1561539612695.html":{}}}],["idx_9949557d0e1b2c19e5344c171e",{"_index":633,"title":{},"body":{"classes/createOauth2Middleware1561200781531.html":{}}}],["idx_d6250a4222f475016bba5944e1",{"_index":601,"title":{},"body":{"classes/createDailyBalanceIndex1561539612695.html":{}}}],["implements",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/Oauth2Middleware.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["inject",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":232,"title":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{}},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":233,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":249,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{}}}],["injectrepository(accesstoken",{"_index":348,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["injectrepository(accountverification",{"_index":500,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(client",{"_index":349,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["injectrepository(dailybalance",{"_index":250,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{}}}],["injectrepository(user",{"_index":347,"title":{},"body":{"injectables/Oauth2Service.html":{},"injectables/UserService.html":{}}}],["inspired",{"_index":686,"title":{},"body":{"index.html":{}}}],["install",{"_index":694,"title":{},"body":{"index.html":{}}}],["installation",{"_index":691,"title":{},"body":{"index.html":{}}}],["int",{"_index":593,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["isclientvalid",{"_index":351,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["isdefined",{"_index":161,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["isemail",{"_index":413,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isenum",{"_index":162,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["isenum(balancetype",{"_index":169,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["ishastoken",{"_index":323,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["ishastoken(userid",{"_index":340,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["isnotempty",{"_index":164,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["ispasswordmatch",{"_index":354,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["isverified",{"_index":427,"title":{},"body":{"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["join",{"_index":722,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{}}}],["js",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":730,"title":{},"body":{"index.html":{}}}],["key",{"_index":596,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["latin1",{"_index":626,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["latin1_swedish_ci",{"_index":628,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["legend",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":163,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["length(1",{"_index":168,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["length(6",{"_index":414,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["license",{"_index":736,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":713,"title":{},"body":{"index.html":{}}}],["logger",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailermodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":490,"title":{},"body":{"injectables/UserService.html":{}}}],["manually",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manytoone",{"_index":186,"title":{},"body":{"classes/DailyBalance.html":{}}}],["manytoone(type",{"_index":190,"title":{},"body":{"classes/DailyBalance.html":{}}}],["manytoone(undefined",{"_index":183,"title":{},"body":{"classes/DailyBalance.html":{}}}],["masalah",{"_index":397,"title":{},"body":{"controllers/PasswordController.html":{}}}],["matching",{"_index":35,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["me.controller",{"_index":278,"title":{},"body":{"modules/MeModule.html":{}}}],["me.service",{"_index":269,"title":{},"body":{"controllers/MeController.html":{},"modules/MeModule.html":{}}}],["me/me.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["meaning",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecontroller",{"_index":263,"title":{"controllers/MeController.html":{}},"body":{"controllers/MeController.html":{},"modules/MeModule.html":{},"coverage.html":{}}}],["memodule",{"_index":66,"title":{"modules/MeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MeModule.html":{},"modules.html":{},"overview.html":{}}}],["meservice",{"_index":268,"title":{"injectables/MeService.html":{}},"body":{"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":529,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":41,"title":{},"body":{"classes/AccountVerification.html":{},"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["middlewareconsumer",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["migration",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migration/**/*{.ts,.js",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":534,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["migrations",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":668,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":712,"title":{},"body":{"index.html":{}}}],["mode",{"_index":701,"title":{},"body":{"index.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["more",{"_index":725,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":657,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":731,"title":{},"body":{"index.html":{}}}],["name",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["nest",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":735,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":160,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":293,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["nestmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/Oauth2Service.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newaccountcode",{"_index":506,"title":{},"body":{"injectables/UserService.html":{}}}],["newaccountcode.code",{"_index":518,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser",{"_index":502,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":290,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["node.js",{"_index":677,"title":{},"body":{"index.html":{}}}],["npm",{"_index":693,"title":{},"body":{"index.html":{}}}],["null",{"_index":546,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["nullable",{"_index":433,"title":{},"body":{"classes/User.html":{}}}],["number",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["oauth2.service",{"_index":317,"title":{},"body":{"modules/Oauth2Module.html":{},"controllers/PasswordController.html":{}}}],["oauth2/access",{"_index":212,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{}}}],["oauth2/oauth2.middleware",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["oauth2/oauth2.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["oauth2middleware",{"_index":98,"title":{"injectables/Oauth2Middleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/Oauth2Middleware.html":{},"coverage.html":{}}}],["oauth2module",{"_index":67,"title":{"modules/Oauth2Module.html":{}},"body":{"modules/AppModule.html":{},"modules/Oauth2Module.html":{},"modules.html":{},"overview.html":{}}}],["oauth2service",{"_index":313,"title":{"injectables/Oauth2Service.html":{}},"body":{"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"coverage.html":{},"overview.html":{}}}],["object.assign(newuser",{"_index":503,"title":{},"body":{"injectables/UserService.html":{}}}],["object.hasownproperty.bind(query)('date",{"_index":223,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["onetomany",{"_index":447,"title":{},"body":{"classes/User.html":{}}}],["onetomany(type",{"_index":448,"title":{},"body":{"classes/User.html":{}}}],["onetomany(undefined",{"_index":430,"title":{},"body":{"classes/User.html":{}}}],["onetoone",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{}}}],["onetoone(type",{"_index":33,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{}}}],["open",{"_index":714,"title":{},"body":{"index.html":{}}}],["optional",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["options",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["ormconfig",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":740,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":637,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":471,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["password",{"_index":336,"title":{},"body":{"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"classes/createUserColumn1560421973676.html":{},"miscellaneous/variables.html":{}}}],["password.controller",{"_index":316,"title":{},"body":{"modules/Oauth2Module.html":{}}}],["passwordcontroller",{"_index":315,"title":{"controllers/PasswordController.html":{}},"body":{"modules/Oauth2Module.html":{},"controllers/PasswordController.html":{},"coverage.html":{}}}],["passwordgrant",{"_index":363,"title":{},"body":{"controllers/PasswordController.html":{}}}],["passwordgrant(reqtokendto",{"_index":366,"title":{},"body":{"controllers/PasswordController.html":{}}}],["path",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["phone",{"_index":428,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["please",{"_index":723,"title":{},"body":{"index.html":{}}}],["port",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":201,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}}}],["prefer",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":196,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}}}],["primary",{"_index":595,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createUserColumn1560421973676.html":{}}}],["primarygeneratedcolumn",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":179,"title":{},"body":{"classes/DailyBalance.html":{}}}],["private",{"_index":217,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":703,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":676,"title":{},"body":{"index.html":{}}}],["project",{"_index":715,"title":{},"body":{"index.html":{}}}],["promise",{"_index":244,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":485,"title":{},"body":{"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["query",{"_index":204,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["query.code",{"_index":525,"title":{},"body":{"injectables/UserService.html":{}}}],["query.date",{"_index":224,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["queryrunner",{"_index":538,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["queryrunner.query(\"alter",{"_index":542,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["queryrunner.query(\"create",{"_index":591,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["queryrunner.query(\"drop",{"_index":598,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["read",{"_index":724,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":151,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["references",{"_index":609,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["reflect",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":456,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body",{"_index":473,"title":{},"body":{"controllers/UserController.html":{}}}],["register(registeruserdto",{"_index":459,"title":{},"body":{"controllers/UserController.html":{}}}],["register(user",{"_index":494,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruserdto",{"_index":405,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["registration",{"_index":472,"title":{},"body":{"controllers/UserController.html":{}}}],["rel_2d4eff3e8d902988754fde5be0",{"_index":747,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["relations",{"_index":302,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":238,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":200,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/Oauth2Middleware.html":{},"miscellaneous/variables.html":{}}}],["req.accesstoken",{"_index":310,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["req.headers.authorization.split",{"_index":297,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["req.raw.accesstoken",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqtokendto",{"_index":369,"title":{},"body":{"controllers/PasswordController.html":{}}}],["reqtokendto.client_secret",{"_index":399,"title":{},"body":{"controllers/PasswordController.html":{}}}],["reqtokendto.grant_type",{"_index":385,"title":{},"body":{"controllers/PasswordController.html":{}}}],["reqtokendto.password",{"_index":401,"title":{},"body":{"controllers/PasswordController.html":{}}}],["requestmethod",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["requesttoken",{"_index":364,"title":{},"body":{"controllers/PasswordController.html":{}}}],["requesttoken(@body",{"_index":383,"title":{},"body":{"controllers/PasswordController.html":{}}}],["requesttoken(reqtokendto",{"_index":370,"title":{},"body":{"controllers/PasswordController.html":{}}}],["requesttokendto",{"_index":367,"title":{"classes/RequestTokenDto.html":{}},"body":{"controllers/PasswordController.html":{},"classes/RequestTokenDto.html":{},"coverage.html":{}}}],["require('./ormconfig",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":288,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"controllers/PasswordController.html":{}}}],["res.code(201).send({token",{"_index":390,"title":{},"body":{"controllers/PasswordController.html":{}}}],["res.code(400).send({error",{"_index":392,"title":{},"body":{"controllers/PasswordController.html":{}}}],["res.code(500).send({error",{"_index":395,"title":{},"body":{"controllers/PasswordController.html":{}}}],["res.end(json.stringify({message",{"_index":309,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["res.setheader('content",{"_index":303,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["res.statuscode",{"_index":305,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["res.statusmessage",{"_index":307,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["reset",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":34,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":36,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":220,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"classes/AccountVerification.html":{},"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["revoke",{"_index":324,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["revoke(token",{"_index":342,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["revoketoken",{"_index":365,"title":{},"body":{"controllers/PasswordController.html":{}}}],["revoketoken(@headers",{"_index":380,"title":{},"body":{"controllers/PasswordController.html":{}}}],["revoketoken(headers",{"_index":372,"title":{},"body":{"controllers/PasswordController.html":{}}}],["rimraf",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":698,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":695,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["savetoken",{"_index":325,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["savetoken(token",{"_index":344,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["scalable",{"_index":681,"title":{},"body":{"index.html":{}}}],["select",{"_index":258,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["sendmail",{"_index":509,"title":{},"body":{"injectables/UserService.html":{}}}],["sendverificationemail",{"_index":487,"title":{},"body":{"injectables/UserService.html":{}}}],["sendverificationemail(user",{"_index":496,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":682,"title":{},"body":{"index.html":{}}}],["serverresponse",{"_index":289,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["set",{"_index":625,"title":{},"body":{"classes/createOauth1560545960045.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":683,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"index.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["sponsors",{"_index":718,"title":{},"body":{"index.html":{}}}],["src",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../access",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../daily",{"_index":670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:39",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["src/daily",{"_index":148,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/me/me.controller.ts",{"_index":264,"title":{},"body":{"controllers/MeController.html":{},"coverage.html":{}}}],["src/me/me.controller.ts:12",{"_index":267,"title":{},"body":{"controllers/MeController.html":{}}}],["src/me/me.module.ts",{"_index":277,"title":{},"body":{"modules/MeModule.html":{}}}],["src/me/me.service.ts",{"_index":279,"title":{},"body":{"injectables/MeService.html":{},"coverage.html":{}}}],["src/me/me.service.ts:13",{"_index":283,"title":{},"body":{"injectables/MeService.html":{}}}],["src/me/me.service.ts:7",{"_index":281,"title":{},"body":{"injectables/MeService.html":{}}}],["src/migration/1560421973676",{"_index":561,"title":{},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["src/migration/1560422912373",{"_index":532,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["src/migration/1560545960045",{"_index":564,"title":{},"body":{"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["src/migration/1561015030859",{"_index":567,"title":{},"body":{"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{}}}],["src/migration/1561019799282",{"_index":570,"title":{},"body":{"coverage.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["src/migration/1561200781531",{"_index":573,"title":{},"body":{"coverage.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["src/migration/1561358492040",{"_index":576,"title":{},"body":{"coverage.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["src/migration/1561539612695",{"_index":579,"title":{},"body":{"coverage.html":{},"classes/createDailyBalanceIndex1561539612695.html":{}}}],["src/oauth2/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/oauth2/client.entity.ts",{"_index":138,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/oauth2/client.entity.ts:10",{"_index":144,"title":{},"body":{"classes/Client.html":{}}}],["src/oauth2/client.entity.ts:13",{"_index":145,"title":{},"body":{"classes/Client.html":{}}}],["src/oauth2/client.entity.ts:7",{"_index":146,"title":{},"body":{"classes/Client.html":{}}}],["src/oauth2/dto/request",{"_index":415,"title":{},"body":{"classes/RequestTokenDto.html":{},"coverage.html":{}}}],["src/oauth2/oauth2.middleware.ts",{"_index":285,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"coverage.html":{}}}],["src/oauth2/oauth2.middleware.ts:8",{"_index":291,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["src/oauth2/oauth2.module.ts",{"_index":314,"title":{},"body":{"modules/Oauth2Module.html":{}}}],["src/oauth2/oauth2.service.ts",{"_index":320,"title":{},"body":{"injectables/Oauth2Service.html":{},"coverage.html":{}}}],["src/oauth2/oauth2.service.ts:11",{"_index":329,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:22",{"_index":339,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:26",{"_index":333,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:31",{"_index":337,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:40",{"_index":345,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:47",{"_index":341,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:57",{"_index":343,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/password.controller.ts",{"_index":362,"title":{},"body":{"controllers/PasswordController.html":{},"coverage.html":{}}}],["src/oauth2/password.controller.ts:13",{"_index":374,"title":{},"body":{"controllers/PasswordController.html":{}}}],["src/oauth2/password.controller.ts:19",{"_index":371,"title":{},"body":{"controllers/PasswordController.html":{}}}],["src/oauth2/password.controller.ts:36",{"_index":368,"title":{},"body":{"controllers/PasswordController.html":{}}}],["src/ormconfig.ts",{"_index":586,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/account",{"_index":38,"title":{},"body":{"classes/AccountVerification.html":{},"coverage.html":{}}}],["src/user/dto/register",{"_index":406,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":454,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:15",{"_index":458,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:23",{"_index":460,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:30",{"_index":463,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.entity.ts",{"_index":423,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:11",{"_index":438,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:14",{"_index":442,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:17",{"_index":437,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:23",{"_index":445,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:26",{"_index":443,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:32",{"_index":441,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:38",{"_index":434,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:44",{"_index":436,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:50",{"_index":435,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:53",{"_index":432,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:56",{"_index":446,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.module.ts",{"_index":480,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":484,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":491,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":499,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":493,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":495,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:31",{"_index":497,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:54",{"_index":498,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":699,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":702,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["start:prod",{"_index":704,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":675,"title":{"index.html":{}},"body":{}}],["starter",{"_index":690,"title":{},"body":{"index.html":{}}}],["statements",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":727,"title":{},"body":{"index.html":{}}}],["strict",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{}}}],["subject",{"_index":513,"title":{},"body":{"injectables/UserService.html":{}}}],["success",{"_index":530,"title":{},"body":{"injectables/UserService.html":{}}}],["support",{"_index":711,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":738,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":386,"title":{},"body":{"controllers/PasswordController.html":{}}}],["synchronize",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":512,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":543,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["templates",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":705,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":710,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":709,"title":{},"body":{"index.html":{}}}],["tests",{"_index":707,"title":{},"body":{"index.html":{}}}],["text",{"_index":444,"title":{},"body":{"classes/User.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{}}}],["thanks",{"_index":717,"title":{},"body":{"index.html":{}}}],["then((response",{"_index":520,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accesstokenrepo.delete",{"_index":361,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.accesstokenrepo.findone({user",{"_index":359,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.accesstokenrepo.save(accesstoken",{"_index":358,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.accountrepository.delete(account",{"_index":528,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountrepository.findoneorfail",{"_index":524,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountrepository.save(account",{"_index":507,"title":{},"body":{"injectables/UserService.html":{}}}],["this.clientrepo.findoneorfail({client_id",{"_index":352,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.code",{"_index":52,"title":{},"body":{"classes/AccountVerification.html":{}}}],["this.dailybalancerepo",{"_index":257,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["this.dailybalancerepo.find",{"_index":253,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{}}}],["this.dailybalancerepo.save(dailybalance",{"_index":252,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["this.dailybalanceservice.create(createdailybalancedto",{"_index":221,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["this.dailybalanceservice.getbydateforloggedinuser(user",{"_index":225,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["this.dailybalanceservice.getbytoken(accesstoken",{"_index":226,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["this.datecreated",{"_index":453,"title":{},"body":{"classes/User.html":{}}}],["this.mailerservice",{"_index":508,"title":{},"body":{"injectables/UserService.html":{}}}],["this.meservice.getme(accesstoken",{"_index":274,"title":{},"body":{"controllers/MeController.html":{}}}],["this.oauth2service.checkclient(reqtokendto.client_id",{"_index":398,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.checkuser(reqtokendto.username",{"_index":400,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.generatetoken",{"_index":403,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.ishastoken(user.id",{"_index":402,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.revoke(token",{"_index":382,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.savetoken(token",{"_index":404,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.password",{"_index":452,"title":{},"body":{"classes/User.html":{}}}],["this.passwordgrant(reqtokendto",{"_index":389,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.userrepo.findoneorfail({email",{"_index":353,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.userrepository.find",{"_index":501,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(account.user",{"_index":527,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":504,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findall",{"_index":470,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(registeruserdto",{"_index":474,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.sendverificationemail(user",{"_index":475,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.verifyemail(query",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["timestamp",{"_index":175,"title":{},"body":{"classes/DailyBalance.html":{},"classes/User.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{}}}],["tinyint",{"_index":545,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{}}}],["token",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/createOauth1560545960045.html":{}}}],["token.access_token",{"_index":360,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["token.decorator",{"_index":213,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{}}}],["token.decorator.ts",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.dto",{"_index":377,"title":{},"body":{"controllers/PasswordController.html":{}}}],["token.dto.ts",{"_index":416,"title":{},"body":{"classes/RequestTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:12",{"_index":421,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.dto.ts:15",{"_index":418,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.dto.ts:18",{"_index":419,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.dto.ts:6",{"_index":420,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.dto.ts:9",{"_index":422,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.entity",{"_index":296,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{}}}],["token.entity.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["token.entity.ts:11",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.entity.ts:15",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.entity.ts:8",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.user",{"_index":254,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["touch",{"_index":728,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"classes/Client.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["trusted",{"_index":620,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["try",{"_index":388,"title":{},"body":{"controllers/PasswordController.html":{}}}],["ts",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":734,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["typeormmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([accountverification",{"_index":483,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([dailybalance",{"_index":231,"title":{},"body":{"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":319,"title":{},"body":{"modules/Oauth2Module.html":{}}}],["typeormmodule.forroot(ormconfig",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["types/bcrypt",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":689,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":308,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["undefined",{"_index":431,"title":{},"body":{"classes/User.html":{}}}],["undefined)@index",{"_index":184,"title":{},"body":{"classes/DailyBalance.html":{}}}],["undefined})@index",{"_index":177,"title":{},"body":{"classes/DailyBalance.html":{}}}],["unique",{"_index":143,"title":{},"body":{"classes/Client.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["unit",{"_index":706,"title":{},"body":{"index.html":{}}}],["up",{"_index":536,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["up(queryrunner",{"_index":540,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["update",{"_index":612,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["use",{"_index":286,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"miscellaneous/variables.html":{}}}],["use(req",{"_index":287,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["usefactory",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["user.controller",{"_index":481,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dailybalances",{"_index":191,"title":{},"body":{"classes/DailyBalance.html":{}}}],["user.dto",{"_index":467,"title":{},"body":{"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":407,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":410,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:14",{"_index":409,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:18",{"_index":412,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.email",{"_index":510,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":51,"title":{},"body":{"classes/AccountVerification.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":262,"title":{},"body":{"injectables/DailyBalanceService.html":{},"controllers/PasswordController.html":{}}}],["user.name",{"_index":519,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":356,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["user.service",{"_index":465,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.controller",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.entity",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{},"classes/DailyBalance.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{}}}],["user/user.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["user_for_account_verification.ts",{"_index":571,"title":{},"body":{"coverage.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["user_for_account_verification.ts:12",{"_index":744,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["user_for_account_verification.ts:5",{"_index":745,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["user_id",{"_index":621,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["user`(`id",{"_index":610,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["usercontroller",{"_index":92,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userforaccountverification1561019799282",{"_index":572,"title":{"classes/userForAccountVerification1561019799282.html":{}},"body":{"coverage.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["userid",{"_index":260,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/Oauth2Service.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["usermodule",{"_index":68,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":338,"title":{},"body":{"injectables/Oauth2Service.html":{},"classes/RequestTokenDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usernameall",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepo",{"_index":330,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["userrepository",{"_index":492,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["userservice",{"_index":464,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":165,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":671,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":142,"title":{},"body":{"classes/Client.html":{}}}],["varchar(200",{"_index":629,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["varchar(255",{"_index":622,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["variable",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":749,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":516,"title":{},"body":{"injectables/UserService.html":{}}}],["verification.entity",{"_index":482,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["verification.entity.ts",{"_index":39,"title":{},"body":{"classes/AccountVerification.html":{},"coverage.html":{}}}],["verification.entity.ts:10",{"_index":44,"title":{},"body":{"classes/AccountVerification.html":{}}}],["verification.entity.ts:13",{"_index":43,"title":{},"body":{"classes/AccountVerification.html":{}}}],["verification.entity.ts:17",{"_index":45,"title":{},"body":{"classes/AccountVerification.html":{}}}],["verification.entity.ts:20",{"_index":47,"title":{},"body":{"classes/AccountVerification.html":{}}}],["verifikasikan",{"_index":514,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyemail",{"_index":457,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyemail(@query",{"_index":476,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyemail(query",{"_index":461,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["void",{"_index":49,"title":{},"body":{"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/User.html":{}}}],["watch",{"_index":700,"title":{},"body":{"index.html":{}}}],["website",{"_index":732,"title":{},"body":{"index.html":{}}}],["yosio",{"_index":511,"title":{},"body":{"injectables/UserService.html":{}}}],["you'd",{"_index":721,"title":{},"body":{"index.html":{}}}],["yuso_dev",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/access-token.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/access-token.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/access-token.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/access-token.entity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Column, Entity, OneToOne, JoinColumn } from 'typeorm';\nimport { User } from '../user/user.entity';\n\n@Entity()\nexport class AccessToken {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('text')\n  access_token: string;\n\n  @OneToOne(type => User)\n  @JoinColumn()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountVerification.html":{"url":"classes/AccountVerification.html","title":"class - AccountVerification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountVerification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/account-verification.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/account-verification.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/account-verification.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/account-verification.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateToken()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/user/account-verification.entity.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport {\n  BeforeInsert, Entity, Column,\n  PrimaryGeneratedColumn, OneToOne, JoinColumn } from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity()\nexport class AccountVerification {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('text')\n  code: string;\n\n  @OneToOne(type => User)\n  @JoinColumn()\n  user: User;\n\n  @BeforeInsert()\n  generateToken() {\n    this.code = crypto.randomBytes(16).toString('hex');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDailyBalanceModule\n\nDailyBalanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDailyBalanceModule->AppModule\n\n\n\n\n\nMeModule\n\nMeModule\n\nAppModule -->\n\nMeModule->AppModule\n\n\n\n\n\nOauth2Module\n\nOauth2Module\n\nAppModule -->\n\nOauth2Module->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DailyBalanceModule\n                        \n                        \n                            MeModule\n                        \n                        \n                            Oauth2Module\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ConfigModule } from 'nestjs-config';\nimport { Module, NestModule, RequestMethod, MiddlewareConsumer } from '@nestjs/common';\nimport { HandlebarsAdapter, MailerModule } from '@nest-modules/mailer';\nimport { UserController } from './user/user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { Oauth2Module } from './oauth2/oauth2.module';\nimport { Oauth2Middleware } from './oauth2/oauth2.middleware';\nimport { ConfigService } from 'nestjs-config';\nimport { DailyBalanceModule } from './daily-balance/daily-balance.module';\nimport { MeModule } from './me/me.module';\nimport * as path from 'path';\nimport ormconfig = require('./ormconfig');\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(ormconfig),\n    UserModule,\n    Oauth2Module,\n    ConfigModule.load(path.resolve(__dirname, 'config', '**/!(*.d).{ts,js}')),\n    MailerModule.forRootAsync({\n      useFactory: (config: ConfigService) => ({\n        transport: config.get('app.mailer'),\n        template: {\n          dir: __dirname + '/email-templates',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true\n          }\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    DailyBalanceModule,\n    MeModule\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(Oauth2Middleware)\n      .exclude({ path: 'token', method: RequestMethod.POST })\n      .forRoutes(\n        { path: 'users', method: RequestMethod.GET },\n        { path: 'dailyBalances', method: RequestMethod.ALL },\n        { path: 'me', method: RequestMethod.GET },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/client.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client_id\n                            \n                            \n                                client_secret\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/client.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client_secret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/client.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/client.entity.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Column, Entity } from 'typeorm';\n\n@Entity()\nexport class Client {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({type: 'varchar', unique: true})\n  client_id: string;\n\n  @Column('text')\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDailyBalanceDto.html":{"url":"classes/CreateDailyBalanceDto.html","title":"class - CreateDailyBalanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDailyBalanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/daily-balance/dto/create-daily-balance.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                account\n                            \n                            \n                                    Readonly\n                                amount\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsDefined()@IsNotEmpty()@Length(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/dto/create-daily-balance.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsDefined()@IsNotEmpty()@Length(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/dto/create-daily-balance.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsEnum(BalanceType)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/dto/create-daily-balance.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { IsDefined, IsEnum, Length, IsNotEmpty } from 'class-validator';\nimport { BalanceType } from '../daily-balance.entity';\n\nexport class CreateDailyBalanceDto {\n\n  @ApiModelProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @Length(1)\n  readonly account: string;\n\n  @ApiModelProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @Length(1)\n  readonly amount: string;\n\n  @ApiModelProperty()\n  @IsEnum(BalanceType)\n  readonly type: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DailyBalance.html":{"url":"classes/DailyBalance.html","title":"class - DailyBalance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DailyBalance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/daily-balance/daily-balance.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                amount\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined})@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BalanceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: BalanceType})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, ManyToOne, Index } from 'typeorm';\nimport { User } from '../user/user.entity';\n\nexport enum BalanceType {\n  DEBIT = 'debit',\n  CREDIT = 'credit'\n}\n\n@Entity()\nexport class DailyBalance {\n\n  @PrimaryGeneratedColumn('uuid')\n  id: number;\n\n  @Column('text')\n  account: string;\n\n  @Column('text')\n  amount: string;\n\n  @Column({\n    type: 'enum',\n    enum: BalanceType\n  })\n  type: BalanceType;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP'})\n  @Index()\n  date: Date;\n\n  @ManyToOne(type => User, user => user.dailyBalances)\n  @Index()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DailyBalanceController.html":{"url":"controllers/DailyBalanceController.html","title":"controller - DailyBalanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DailyBalanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/daily-balance/daily-balance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dailyBalances\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDailyBalance\n                            \n                            \n                                getByToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createDailyBalance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDailyBalance(createDailyBalanceDto: CreateDailyBalanceDto, req, accessToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/daily-balance/daily-balance.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDailyBalanceDto\n                                    \n                                                CreateDailyBalanceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accessToken\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetByToken(accessToken, query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/daily-balance/daily-balance.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Req, Get, Query } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { DailyBalanceService } from './daily-balance.service';\nimport { CreateDailyBalanceDto } from './dto/create-daily-balance.dto';\nimport { AccessToken } from '../oauth2/access-token.decorator';\n\n@ApiUseTags('dailyBalances')\n@Controller('dailyBalances')\nexport class DailyBalanceController {\n\n  constructor(\n    private readonly dailyBalanceService: DailyBalanceService\n  ) {}\n\n  @Post()\n  createDailyBalance(\n    @Body() createDailyBalanceDto: CreateDailyBalanceDto,\n    @Req() req,\n    @AccessToken() accessToken,\n  ) {\n    const user = accessToken.user;\n    return this.dailyBalanceService.create(createDailyBalanceDto, user);\n  }\n\n  @Get()\n  getByToken(@AccessToken() accessToken, @Query() query) {\n    if (Object.hasOwnProperty.bind(query)('date')) {\n      const user = accessToken.user;\n      const date = query.date;\n      return this.dailyBalanceService.getByDateForLoggedInUser(user, date);\n    }\n    return this.dailyBalanceService.getByToken(accessToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DailyBalanceModule.html":{"url":"modules/DailyBalanceModule.html","title":"module - DailyBalanceModule","body":"\n                   \n\n\n\n\n    Modules\n    DailyBalanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DailyBalanceModule\n\n\n\ncluster_DailyBalanceModule_providers\n\n\n\n\nDailyBalanceService\n\nDailyBalanceService\n\n\n\nDailyBalanceModule\n\nDailyBalanceModule\n\nDailyBalanceModule -->\n\nDailyBalanceService->DailyBalanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/daily-balance/daily-balance.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DailyBalanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DailyBalanceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DailyBalanceController } from './daily-balance.controller';\nimport { DailyBalanceService } from './daily-balance.service';\nimport { DailyBalance } from './daily-balance.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DailyBalance])],\n  controllers: [DailyBalanceController],\n  providers: [DailyBalanceService]\n})\nexport class DailyBalanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DailyBalanceService.html":{"url":"injectables/DailyBalanceService.html","title":"injectable - DailyBalanceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DailyBalanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/daily-balance/daily-balance.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getByDateForLoggedInUser\n                            \n                            \n                                getByToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dailyBalanceRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/daily-balance/daily-balance.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dailyBalanceRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/daily-balance/daily-balance.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByDateForLoggedInUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetByDateForLoggedInUser(user, date)\n                \n            \n\n\n            \n                \n                    Defined in src/daily-balance/daily-balance.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetByToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/daily-balance/daily-balance.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { DailyBalance } from './daily-balance.entity';\n\n@Injectable()\nexport class DailyBalanceService {\n\n  constructor(\n    @InjectRepository(DailyBalance)\n    private readonly dailyBalanceRepo: Repository\n  ) {}\n\n  create(dto, user): Promise {\n    const dailyBalance: DailyBalance = dto;\n    dailyBalance.user = user;\n    return this.dailyBalanceRepo.save(dailyBalance);\n  }\n\n  getByToken(token) {\n    return this.dailyBalanceRepo.find({ user: token.user });\n  }\n\n  getByDateForLoggedInUser(user, date) {\n    const dateLimit = `${date} 23:59:59.9`;\n\n    return this.dailyBalanceRepo\n      .query(\n        'SELECT * FROM daily_balance WHERE userId = ? AND `date` BETWEEN ? AND ?',\n        [user.id, date, dateLimit]\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MeController.html":{"url":"controllers/MeController.html","title":"controller - MeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/me/me.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                me\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMe\n                        \n                        \n                    \n                \n            \n            \n                \ngetMe(accessToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/me/me.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { AccessToken } from '../oauth2/access-token.decorator';\nimport { MeService } from './me.service';\n\n@ApiUseTags('me')\n@Controller('me')\nexport class MeController {\n  constructor(private readonly meService: MeService) {}\n\n  @Get()\n  getMe(@AccessToken() accessToken) {\n    return this.meService.getMe(accessToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeModule.html":{"url":"modules/MeModule.html","title":"module - MeModule","body":"\n                   \n\n\n\n\n    Modules\n    MeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeModule\n\n\n\ncluster_MeModule_providers\n\n\n\n\nMeService\n\nMeService\n\n\n\nMeModule\n\nMeModule\n\nMeModule -->\n\nMeService->MeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/me/me.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MeController } from './me.controller';\nimport { MeService } from './me.service';\nimport { DailyBalance } from '../daily-balance/daily-balance.entity'\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DailyBalance])],\n  controllers: [MeController],\n  providers: [MeService]\n})\nexport class MeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeService.html":{"url":"injectables/MeService.html","title":"injectable - MeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/me/me.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dailyBalanceRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/me/me.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dailyBalanceRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(token)\n                \n            \n\n\n            \n                \n                    Defined in src/me/me.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { DailyBalance } from '../daily-balance/daily-balance.entity'\n\n@Injectable()\nexport class MeService {\n\n  constructor(\n    @InjectRepository(DailyBalance)\n    private readonly dailyBalanceRepo: Repository) {}\n\n  async getMe(token) {\n    const { accessToken, user } = token;\n    const dailyBalance = await this.dailyBalanceRepo.find({ user: user});\n    return { accessToken, user, dailyBalance };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Oauth2Middleware.html":{"url":"injectables/Oauth2Middleware.html","title":"injectable - Oauth2Middleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Oauth2Middleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/oauth2.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req, res: ServerResponse, next)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.middleware.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            ServerResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ServerResponse } from 'http';\nimport { Injectable, NestMiddleware } from '@nestjs/common';\nimport { getRepository } from 'typeorm';\nimport { AccessToken } from './access-token.entity';\n\n@Injectable()\nexport class Oauth2Middleware implements NestMiddleware {\n  async use(req, res: ServerResponse, next) {\n    const token = req.headers.authorization.split(' ')[1];\n    const accRepo = getRepository(AccessToken);\n    const accessToken = await accRepo.findOne({access_token: token}, {relations: ['user']});\n\n    if (!accessToken) {\n      res.setHeader('Content-Type', 'application/json');\n      res.statusCode = 401;\n      res.statusMessage = 'Unauthorized';\n      res.end(JSON.stringify({message: 'Unauthorized.'}));\n    }\n\n    req.accessToken = accessToken;\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Oauth2Module.html":{"url":"modules/Oauth2Module.html","title":"module - Oauth2Module","body":"\n                   \n\n\n\n\n    Modules\n    Oauth2Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Oauth2Module\n\n\n\ncluster_Oauth2Module_providers\n\n\n\n\nOauth2Service\n\nOauth2Service\n\n\n\nOauth2Module\n\nOauth2Module\n\nOauth2Module -->\n\nOauth2Service->Oauth2Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/oauth2/oauth2.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Oauth2Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswordController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { PasswordController } from './password.controller';\nimport { Oauth2Service } from './oauth2.service';\n\nimport { AccessToken } from './access-token.entity';\nimport { User } from '../user/user.entity';\nimport { Client } from './client.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, AccessToken, Client])],\n  controllers: [PasswordController],\n  providers: [Oauth2Service]\n})\nexport class Oauth2Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Oauth2Service.html":{"url":"injectables/Oauth2Service.html","title":"injectable - Oauth2Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Oauth2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/oauth2.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkClient\n                            \n                            \n                                    Async\n                                checkUser\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                isHasToken\n                            \n                            \n                                    Async\n                                revoke\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository, accessTokenRepo: Repository, clientRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/oauth2/oauth2.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkClient(clientId, clientSecret)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientSecret\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUser(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken()\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isHasToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isHasToken(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            revoke\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revoke(token)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(token, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport * as bcrypt from 'bcrypt';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AccessToken } from './access-token.entity';\nimport { Client } from './client.entity';\nimport { User } from '../user/user.entity';\n\n@Injectable()\nexport class Oauth2Service {\n\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepo: Repository,\n    @InjectRepository(AccessToken)\n    private readonly accessTokenRepo: Repository,\n    @InjectRepository(Client)\n    private readonly clientRepo: Repository,\n  ) {}\n\n  async generateToken() {\n    return crypto.randomBytes(24).toString('hex');\n  }\n\n  async checkClient(clientId, clientSecret) {\n    const isClientValid = await this.clientRepo.findOneOrFail({client_id: clientId, client_secret: clientSecret});\n    return isClientValid;\n  }\n\n  async checkUser(username, password) {\n    const user = await this.userRepo.findOneOrFail({email: username});\n    const isPasswordMatch = bcrypt.compareSync(password, user.password);\n\n    if (isPasswordMatch) {\n      return user;\n    }\n  }\n\n  async saveToken(token, userId) {\n    const accessToken = new AccessToken();\n    accessToken.access_token = token;\n    accessToken.user = userId;\n    await this.accessTokenRepo.save(accessToken);\n  }\n\n  async isHasToken(userId) {\n    const token = await this.accessTokenRepo.findOne({user: userId});\n\n    if (token) {\n      return token.access_token;\n    }\n\n    return token;\n  }\n\n  async revoke(token) {\n    return await this.accessTokenRepo.delete({ access_token: token });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswordController.html":{"url":"controllers/PasswordController.html","title":"controller - PasswordController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/password.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                token\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                passwordGrant\n                            \n                            \n                                    Async\n                                requestToken\n                            \n                            \n                                    Async\n                                revokeToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordGrant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordGrant(reqTokenDto: RequestTokenDto, res)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/password.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqTokenDto\n                                    \n                                                RequestTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            requestToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    requestToken(reqTokenDto: RequestTokenDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/oauth2/password.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqTokenDto\n                                    \n                                                RequestTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            revokeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revokeToken(headers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/oauth2/password.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Delete, Body, Res, Headers } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { RequestTokenDto } from './dto/request-token.dto';\nimport { Oauth2Service } from './oauth2.service';\n\n@ApiUseTags('token')\n@Controller('token')\nexport class PasswordController {\n\n  constructor(private readonly oauth2Service: Oauth2Service) {}\n\n  @Delete()\n  async revokeToken(@Headers() headers) {\n    const token = headers.authorization.split(' ')[1];\n    return await this.oauth2Service.revoke(token);\n  }\n\n  @Post()\n  async requestToken(@Body() reqTokenDto: RequestTokenDto, @Res() res) {\n    const grantType = reqTokenDto.grant_type;\n\n    switch (grantType) {\n      case 'password':\n        try{\n          const token = await this.passwordGrant(reqTokenDto, res);\n          res.code(201).send({token});\n        } catch(e) {\n          res.code(400).send({error: e.message});\n        }\n        break;\n    }\n\n    res.code(500).send({error: 'Ada masalah.'});\n  }\n\n  async passwordGrant(reqTokenDto: RequestTokenDto, res) {\n    const client = await this.oauth2Service.checkClient(reqTokenDto.client_id, reqTokenDto.client_secret);\n    const user = await this.oauth2Service.checkUser(reqTokenDto.username, reqTokenDto.password);\n    let token = await this.oauth2Service.isHasToken(user.id);\n\n    if ((client && user) && !token) {\n      token = await this.oauth2Service.generateToken();\n      await this.oauth2Service.saveToken(token, user.id);\n    }\n\n    return token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsDefined()@IsNotEmpty()@Length(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@Length(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { IsDefined, IsEmail, Length, IsNotEmpty } from 'class-validator';\n\nexport class RegisterUserDto {\n\n  @ApiModelProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @Length(1)\n  readonly name!: string;\n\n  @ApiModelProperty()\n  @IsEmail()\n  readonly email!: string;\n\n  @ApiModelProperty()\n  @Length(6)\n  readonly password!: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestTokenDto.html":{"url":"classes/RequestTokenDto.html","title":"class - RequestTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/dto/request-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                client_id\n                            \n                            \n                                    Readonly\n                                client_secret\n                            \n                            \n                                    Readonly\n                                grant_type\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            client_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            client_secret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            grant_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\n\nexport class RequestTokenDto {\n\n  @ApiModelProperty()\n  readonly grant_type: string;\n\n  @ApiModelProperty()\n  readonly username: string;\n\n  @ApiModelProperty()\n  readonly password: string;\n\n  @ApiModelProperty()\n  readonly client_id: string;\n\n  @ApiModelProperty()\n  readonly client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dailyBalances\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateDeleted\n                            \n                            \n                                    Optional\n                                dateUpdated\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isVerified\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dailyBalances\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DailyBalance[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \nhashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/user/user.entity.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport {\n  BeforeInsert, Entity,\n  Column, PrimaryGeneratedColumn, OneToMany\n} from 'typeorm';\nimport { DailyBalance } from '../daily-balance/daily-balance.entity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('text')\n  name: string;\n\n  @Column('text')\n  email: string;\n\n  @Column({\n    type: 'text',\n    nullable: true\n  })\n  phone: string;\n\n  @Column('text')\n  password: string;\n\n  @Column({\n    type: 'boolean',\n    default: false\n  })\n  isVerified: boolean;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateCreated: Date;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateUpdated?: Date;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateDeleted: Date;\n\n  @OneToMany(type => DailyBalance, dailyBalance => dailyBalance.user)\n  dailyBalances: DailyBalance[];\n\n  @BeforeInsert()\n  hashPassword() {\n    const hashedPassword = bcrypt.hashSync(this.password, 10);\n    this.password = hashedPassword;\n\n    this.dateCreated = new Date();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmail(query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/emailVerifications')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Query } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { UserService } from './user.service';\nimport { RegisterUserDto } from './dto/register-user.dto';\n\n@ApiUseTags('users')\n@Controller('users')\nexport class UserController {\n\n  constructor(\n    private readonly userService: UserService,\n  ) {}\n\n  @Get()\n  getUsers() {\n    return this.userService.findAll();\n  }\n\n  /**\n   * @param {registerUserDto} dto for user registration \n   */\n  @Post()\n  async register(@Body() registerUserDto: RegisterUserDto) {\n    const user = await this.userService.register(registerUserDto);\n    this.userService.sendVerificationEmail(user);\n    return user;\n  }\n\n  @Get('/emailVerifications')\n  async verifyEmail(@Query() query) {\n    return this.userService.verifyEmail(query);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { AccountVerification } from './account-verification.entity';\nimport { User } from './user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountVerification, User])],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                register\n                            \n                            \n                                    Async\n                                sendVerificationEmail\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, accountRepository: Repository, mailerService: MailerService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendVerificationEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendVerificationEmail(user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmail(query)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { MailerService } from '@nest-modules/mailer';\nimport { ConfigService } from 'nestjs-config';\nimport { User } from './user.entity';\nimport { AccountVerification } from './account-verification.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @InjectRepository(AccountVerification)\n    private readonly accountRepository: Repository,\n    private readonly mailerService: MailerService,\n    public config: ConfigService\n  ) {}\n\n  findAll(): Promise {\n    return this.userRepository.find();\n  }\n\n  register(user): Promise {\n    const newUser = new User();\n    Object.assign(newUser, user);\n\n    return this.userRepository.save(newUser);\n  }\n\n  async sendVerificationEmail(user) {\n\n    const account = new AccountVerification();\n    account.user = user;\n    const newAccountCode = await this.accountRepository.save(account);\n\n    return this.mailerService\n      .sendMail({\n        to: user.email,\n        from: 'yosio system ',\n        subject: 'Verifikasikan email Anda',\n        template: 'account-verification',\n        context: {\n          code: newAccountCode.code,\n          username: user.name,\n        }\n      }).then((response) => {\n        console.log(response);\n      }).catch((errors) => {\n        console.log(errors);\n      })\n  }\n\n  async verifyEmail(query) {\n    const account = await this.accountRepository.findOneOrFail({ code: query.code }, { relations: ['user'] });\n    account.user.isVerified = !account.user.isVerified;\n    this.userRepository.save(account.user);\n    this.accountRepository.delete(account);\n    return {message: 'success'};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/changeDefaultValueOnIsVerified1560422912373.html":{"url":"classes/changeDefaultValueOnIsVerified1560422912373.html","title":"class - changeDefaultValueOnIsVerified1560422912373","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  changeDefaultValueOnIsVerified1560422912373\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1560422912373-change_default_value_on_is_verified.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560422912373-change_default_value_on_is_verified.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560422912373-change_default_value_on_is_verified.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class changeDefaultValueOnIsVerified1560422912373 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `user` CHANGE `isVerified` `isVerified` tinyint NOT NULL DEFAULT 0\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `user` CHANGE `isVerified` `isVerified` tinyint NOT NULL\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/daily-balance/daily-balance.controller.ts\n            \n            controller\n            DailyBalanceController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/daily-balance/daily-balance.entity.ts\n            \n            class\n            DailyBalance\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/daily-balance/daily-balance.service.ts\n            \n            injectable\n            DailyBalanceService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/daily-balance/dto/create-daily-balance.dto.ts\n            \n            class\n            CreateDailyBalanceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            getConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/me/me.controller.ts\n            \n            controller\n            MeController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/me/me.service.ts\n            \n            injectable\n            MeService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1560421973676-create_user_column.ts\n            \n            class\n            createUserColumn1560421973676\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1560422912373-change_default_value_on_is_verified.ts\n            \n            class\n            changeDefaultValueOnIsVerified1560422912373\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1560545960045-create_oauth.ts\n            \n            class\n            createOauth1560545960045\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561015030859-create_account_verification_table.ts\n            \n            class\n            createAccountVerificationTable1561015030859\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561019799282-user_for_account_verification.ts\n            \n            class\n            userForAccountVerification1561019799282\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561200781531-create_oauth2_middleware.ts\n            \n            class\n            createOauth2Middleware1561200781531\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561358492040-create_daily_balance_relationship.ts\n            \n            class\n            createDailyBalanceRelationship1561358492040\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561539612695-create_daily_balance_index.ts\n            \n            class\n            createDailyBalanceIndex1561539612695\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/oauth2/access-token.decorator.ts\n            \n            variable\n            AccessToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth2/access-token.entity.ts\n            \n            class\n            AccessToken\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/oauth2/client.entity.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/oauth2/dto/request-token.dto.ts\n            \n            class\n            RequestTokenDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/oauth2/oauth2.middleware.ts\n            \n            injectable\n            Oauth2Middleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/oauth2/oauth2.service.ts\n            \n            injectable\n            Oauth2Service\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/oauth2/password.controller.ts\n            \n            controller\n            PasswordController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ormconfig.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/account-verification.entity.ts\n            \n            class\n            AccountVerification\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createAccountVerificationTable1561015030859.html":{"url":"classes/createAccountVerificationTable1561015030859.html","title":"class - createAccountVerificationTable1561015030859","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createAccountVerificationTable1561015030859\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561015030859-create_account_verification_table.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561015030859-create_account_verification_table.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561015030859-create_account_verification_table.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createAccountVerificationTable1561015030859 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE TABLE `account_verification` (`id` int NOT NULL AUTO_INCREMENT, `code` text NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP TABLE `account_verification`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createDailyBalanceIndex1561539612695.html":{"url":"classes/createDailyBalanceIndex1561539612695.html","title":"class - createDailyBalanceIndex1561539612695","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createDailyBalanceIndex1561539612695\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561539612695-create_daily_balance_index.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561539612695-create_daily_balance_index.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561539612695-create_daily_balance_index.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createDailyBalanceIndex1561539612695 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE INDEX `IDX_d6250a4222f475016bba5944e1` ON `daily_balance` (`date`)\");\n        await queryRunner.query(\"CREATE INDEX `IDX_91e75ed61bb07ebda3912510f2` ON `daily_balance` (`userId`)\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP INDEX `IDX_91e75ed61bb07ebda3912510f2` ON `daily_balance`\");\n        await queryRunner.query(\"DROP INDEX `IDX_d6250a4222f475016bba5944e1` ON `daily_balance`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createDailyBalanceRelationship1561358492040.html":{"url":"classes/createDailyBalanceRelationship1561358492040.html","title":"class - createDailyBalanceRelationship1561358492040","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createDailyBalanceRelationship1561358492040\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561358492040-create_daily_balance_relationship.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561358492040-create_daily_balance_relationship.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561358492040-create_daily_balance_relationship.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createDailyBalanceRelationship1561358492040 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `daily_balance` ADD `userId` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `daily_balance` ADD CONSTRAINT `FK_91e75ed61bb07ebda3912510f24` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `daily_balance` DROP FOREIGN KEY `FK_91e75ed61bb07ebda3912510f24`\");\n        await queryRunner.query(\"ALTER TABLE `daily_balance` DROP COLUMN `userId`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createOauth1560545960045.html":{"url":"classes/createOauth1560545960045.html","title":"class - createOauth1560545960045","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createOauth1560545960045\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1560545960045-create_oauth.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560545960045-create_oauth.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560545960045-create_oauth.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createOauth1560545960045 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP FOREIGN KEY `FK_9949557d0e1b2c19e5344c171e9`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP FOREIGN KEY `FK_c425901c1f66598550020494008`\");\n        await queryRunner.query(\"DROP INDEX `IDX_6ed9067942d7537ce359e172ff` ON `client`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `token`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `expirationDate`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `userId`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `clientId`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `name`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `clientId`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `clientSecret`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `trusted`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `access_token` text NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `user_id` int NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `client_id` varchar(255) NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD UNIQUE INDEX `IDX_7510ce0a84bde51dbff978b4b4` (`client_id`)\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `client_secret` text NOT NULL\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `client_secret`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP INDEX `IDX_7510ce0a84bde51dbff978b4b4`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `client_id`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `user_id`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `access_token`\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `trusted` tinyint NOT NULL DEFAULT '0'\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `clientSecret` text CHARACTER SET \\\"latin1\\\" COLLATE \\\"latin1_swedish_ci\\\" NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `clientId` varchar(200) CHARACTER SET \\\"latin1\\\" COLLATE \\\"latin1_swedish_ci\\\" NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `name` text CHARACTER SET \\\"latin1\\\" COLLATE \\\"latin1_swedish_ci\\\" NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `clientId` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `userId` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `expirationDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `token` text CHARACTER SET \\\"latin1\\\" COLLATE \\\"latin1_swedish_ci\\\" NOT NULL\");\n        await queryRunner.query(\"CREATE UNIQUE INDEX `IDX_6ed9067942d7537ce359e172ff` ON `client` (`clientId`)\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD CONSTRAINT `FK_c425901c1f66598550020494008` FOREIGN KEY (`clientId`) REFERENCES `client`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD CONSTRAINT `FK_9949557d0e1b2c19e5344c171e9` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createOauth2Middleware1561200781531.html":{"url":"classes/createOauth2Middleware1561200781531.html","title":"class - createOauth2Middleware1561200781531","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createOauth2Middleware1561200781531\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561200781531-create_oauth2_middleware.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561200781531-create_oauth2_middleware.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561200781531-create_oauth2_middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createOauth2Middleware1561200781531 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP INDEX `IDX_9949557d0e1b2c19e5344c171e` ON `access_token`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD CONSTRAINT `FK_9949557d0e1b2c19e5344c171e9` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP FOREIGN KEY `FK_9949557d0e1b2c19e5344c171e9`\");\n        await queryRunner.query(\"CREATE UNIQUE INDEX `IDX_9949557d0e1b2c19e5344c171e` ON `access_token` (`userId`)\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createUserColumn1560421973676.html":{"url":"classes/createUserColumn1560421973676.html","title":"class - createUserColumn1560421973676","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createUserColumn1560421973676\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1560421973676-create_user_column.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560421973676-create_user_column.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560421973676-create_user_column.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createUserColumn1560421973676 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE TABLE IF NOT EXISTS `user` (`id` int NOT NULL AUTO_INCREMENT, `name` text NOT NULL, `email` text NOT NULL, `phone` text NULL, `password` text NOT NULL, `isVerified` tinyint NOT NULL, `dateCreated` timestamp NULL, `dateUpdated` timestamp NULL, `dateDeleted` timestamp NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP TABLE `user`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-modules/mailer : ^1.1.3\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/platform-fastify : ^6.3.1\n        \n            @nestjs/swagger : ^3.0.2\n        \n            @nestjs/typeorm : ^6.1.2\n        \n            @types/bcrypt : ^3.0.0\n        \n            bcrypt : ^3.0.6\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.9.1\n        \n            dotenv : ^8.0.0\n        \n            fastify-swagger : ^2.4.0\n        \n            mysql : ^2.17.1\n        \n            nestjs-config : ^1.4.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typeorm : ^0.2.18\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BalanceType   (src/.../daily-balance.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/daily-balance/daily-balance.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        BalanceType\n                    \n                \n                        \n                            \n                                 DEBIT\n                            \n                        \n                        \n                            \n                                Value : debit\n                            \n                        \n                        \n                            \n                                 CREDIT\n                            \n                        \n                        \n                            \n                                Value : credit\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getConfig   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DailyBalanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Oauth2Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_DailyBalanceModule\n\n\n\ncluster_DailyBalanceModule_providers\n\n\n\ncluster_MeModule\n\n\n\ncluster_MeModule_providers\n\n\n\ncluster_Oauth2Module\n\n\n\ncluster_Oauth2Module_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDailyBalanceModule\n\nDailyBalanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDailyBalanceModule->AppModule\n\n\n\n\n\nMeModule\n\nMeModule\n\nAppModule -->\n\nMeModule->AppModule\n\n\n\n\n\nOauth2Module\n\nOauth2Module\n\nAppModule -->\n\nOauth2Module->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nDailyBalanceService\n\nDailyBalanceService\n\nDailyBalanceModule -->\n\nDailyBalanceService->DailyBalanceModule\n\n\n\n\n\nMeService\n\nMeService\n\nMeModule -->\n\nMeService->MeModule\n\n\n\n\n\nOauth2Service\n\nOauth2Service\n\nOauth2Module -->\n\nOauth2Service->Oauth2Module\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userForAccountVerification1561019799282.html":{"url":"classes/userForAccountVerification1561019799282.html","title":"class - userForAccountVerification1561019799282","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userForAccountVerification1561019799282\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561019799282-user_for_account_verification.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561019799282-user_for_account_verification.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561019799282-user_for_account_verification.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class userForAccountVerification1561019799282 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `account_verification` ADD `userId` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `account_verification` ADD UNIQUE INDEX `IDX_2d4eff3e8d902988754fde5be0` (`userId`)\");\n        await queryRunner.query(\"CREATE UNIQUE INDEX `REL_2d4eff3e8d902988754fde5be0` ON `account_verification` (`userId`)\");\n        await queryRunner.query(\"ALTER TABLE `account_verification` ADD CONSTRAINT `FK_2d4eff3e8d902988754fde5be03` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `account_verification` DROP FOREIGN KEY `FK_2d4eff3e8d902988754fde5be03`\");\n        await queryRunner.query(\"DROP INDEX `REL_2d4eff3e8d902988754fde5be0` ON `account_verification`\");\n        await queryRunner.query(\"ALTER TABLE `account_verification` DROP INDEX `IDX_2d4eff3e8d902988754fde5be0`\");\n        await queryRunner.query(\"ALTER TABLE `account_verification` DROP COLUMN `userId`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessToken   (src/.../access-token.decorator.ts)\n                        \n                        \n                            config   (src/.../ormconfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/oauth2/access-token.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AccessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => {\n  return req.raw.accessToken;\n})\n                        \n                    \n\n\n            \n        \n\n    src/ormconfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConnectionOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'mysql',\n  host: '0.0.0.0',\n  port: 3306,\n  username: 'usernameall',\n  password: 'asdzxcfv123',\n  database: 'yuso_dev',\n  entities: [__dirname + '/**/*.entity{.ts,.js}'],\n\n  // We are using migrations, synchronize should be set to false.\n  synchronize: false,\n\n  // Run migrations automatically,\n  // you can disable this if you prefer running migration manually.\n  migrationsRun: true,\n  logging: true,\n  logger: 'file',\n\n  // allow both start:prod and start:dev to use migrations\n  // __dirname is either dist or src folder, meaning either\n  // the compiled js in prod or the ts in dev\n  migrations: [__dirname + '/migration/**/*{.ts,.js}'],\n  cli: {\n    migrationsDir: 'migration',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
