var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.169,1,1.377]],["body/controllers/AppController.html",[0,1.77,1,2.084,2,1.375,3,0.587,4,0.476,5,0.476,6,2.336,7,0.587,8,1.283,9,3.51,10,1.619,11,0.062,12,0.845,13,2.958,14,0.997,15,0.756,16,0.997,17,1.667,18,2.336,19,0.587,20,0.036,21,1.926,22,1.375,23,1.619,24,2.958,25,0.036,26,0.047,27,0.036]],["title/modules/AppModule.html",[28,1.169,29,1.377]],["body/modules/AppModule.html",[1,1.935,2,1.405,3,0.418,4,0.339,5,0.339,11,0.062,15,0.87,16,0.711,17,1.685,18,1.664,19,0.418,20,0.026,25,0.026,26,0.037,27,0.026,28,1.643,29,2.454,30,0.98,31,0.98,32,1.372,33,1.372,34,0.98,35,2.301,36,1.372,37,1.664,38,1.664,39,1.664,40,1.977,41,1.968,42,1.372,43,1.372,44,2.108,45,2.387,46,1.664,47,2.108,48,2.108,49,1.664,50,0.98,51,2.108,52,0.725,53,1.664,54,2.108,55,0.505,56,1.664,57,2.108,58,2.108,59,2.108,60,2.108,61,2.108,62,2.108,63,0.98,64,2.108,65,2.108,66,2.108,67,2.108,68,2.108,69,3.023,70,2.108,71,2.108,72,2.108,73,2.108]],["title/injectables/AppService.html",[17,0.996,74,1.169]],["body/injectables/AppService.html",[3,0.439,4,0.356,5,0.356,7,0.439,8,1.055,9,3.117,11,0.063,12,0.894,14,0.746,15,0.827,16,0.746,17,1.24,19,0.439,20,0.027,21,1.441,22,1.029,23,1.212,25,0.027,26,0.038,27,0.027,50,1.029,52,0.75,53,1.748,55,0.531,74,1.455,75,1.441,76,1.748,77,1.748,78,2.214,79,3.947,80,2.214,81,1.029,82,0.746,83,0.746,84,3.13,85,2.214,86,1.748,87,2.214,88,1.24,89,1.441,90,1.441,91,2.472,92,1.212,93,2.214,94,2.214,95,2.214,96,2.214,97,2.214,98,2.214,99,2.214,100,2.214,101,2.214,102,1.748,103,2.214,104,2.214,105,2.214,106,2.214,107,2.214,108,2.214,109,1.441,110,2.214,111,2.214,112,2.214]],["title/classes/RegisterUserDto.html",[20,0.031,113,1.377]],["body/classes/RegisterUserDto.html",[3,0.467,4,0.379,5,0.379,7,0.467,10,2.054,11,0.06,12,1.157,15,0.467,19,0.467,20,0.04,22,2.245,25,0.029,26,0.04,27,0.029,55,0.972,63,1.744,82,1.265,83,1.101,113,1.788,114,1.093,115,3.363,116,1.857,117,2.579,118,2.442,119,2.442,120,3.639,121,3.752,122,2.352,123,2.352,124,3.266,125,2.352,126,2.352,127,2.352,128,3.266,129,2.352,130,1.857,131,2.352]],["title/classes/User.html",[20,0.031,52,0.603]],["body/classes/User.html",[3,0.297,4,0.241,5,0.241,7,0.297,8,0.789,10,2.327,11,0.061,12,1.214,14,0.505,15,0.464,19,0.297,20,0.018,25,0.018,26,0.029,27,0.018,52,0.561,55,1.082,63,1.338,82,0.97,83,0.789,88,0.593,90,0.975,92,0.82,102,1.848,109,1.874,114,0.696,117,1.848,118,1.874,119,1.874,120,3.193,132,1.183,133,2.273,134,2.273,135,2.273,136,1.874,137,3.254,138,3.909,139,3.53,140,2.954,141,4.044,142,4.044,143,1.498,144,1.498,145,1.498,146,3.741,147,1.498,148,2.34,149,2.879,150,1.498,151,3.254,152,1.848,153,1.498,154,1.498,155,1.498,156,1.848,157,1.498,158,2.879,159,1.498,160,1.498,161,2.34,162,2.34,163,3.741,164,1.498,165,1.498,166,1.498,167,1.498,168,1.498,169,1.498,170,1.498,171,1.498,172,1.498]],["title/controllers/UserController.html",[0,1.169,173,1.377]],["body/controllers/UserController.html",[0,1.139,2,1.139,3,0.486,4,0.394,5,0.394,7,0.486,8,1.132,10,1.839,11,0.062,12,0.959,14,1.132,15,0.761,16,0.826,19,0.486,20,0.03,21,1.595,22,1.139,23,1.839,25,0.03,26,0.041,27,0.03,55,0.587,81,1.139,82,0.826,83,0.826,113,2.444,173,1.839,174,1.935,175,2.45,176,2.45,177,4.125,178,2.653,179,2.45,180,2.45,181,3.833,182,2.45,183,2.45,184,1.518,185,1.935,186,2.45,187,2.45,188,2.45,189,2.45,190,2.45,191,2.45,192,2.45]],["title/modules/UserModule.html",[28,1.169,40,1.169]],["body/modules/UserModule.html",[2,1.629,3,0.518,4,0.42,5,0.42,11,0.061,15,0.876,16,0.879,19,0.518,20,0.032,25,0.032,26,0.043,27,0.032,28,1.84,30,1.212,31,1.212,32,1.697,33,1.697,34,1.212,35,2.577,36,1.697,40,2.113,41,2.281,42,1.697,43,1.697,45,2.059,49,2.059,50,1.212,52,0.625,173,2.167,184,1.801,185,2.059,193,2.059,194,2.059,195,2.608,196,2.608,197,2.059,198,2.608]],["title/injectables/UserService.html",[74,1.169,184,0.996]],["body/injectables/UserService.html",[3,0.457,4,0.37,5,0.37,7,0.457,8,1.084,11,0.062,12,1.059,14,1.084,15,0.797,16,0.776,19,0.457,20,0.028,22,1.069,23,1.761,25,0.028,26,0.04,27,0.028,50,1.069,52,0.962,55,0.552,74,1.495,75,1.498,77,2.539,81,1.495,82,1.084,83,1.084,86,1.817,88,0.911,89,2.614,90,1.498,91,1.817,92,1.26,178,2.539,184,1.274,197,1.817,199,1.817,200,4.015,201,2.301,202,2.301,203,3.216,204,2.301,205,2.614,206,3.216,207,2.301,208,2.301,209,2.301,210,2.301,211,2.301,212,2.301]],["title/classes/changeDefaultValueOnIsVerified1560422912373.html",[20,0.031,213,1.638]],["body/classes/changeDefaultValueOnIsVerified1560422912373.html",[3,0.449,4,0.364,5,0.364,7,0.449,8,1.071,11,0.059,12,0.907,14,1.071,15,0.449,19,0.449,20,0.028,25,0.028,26,0.039,27,0.028,52,0.762,55,0.762,81,1.477,82,1.071,83,1.071,88,0.896,114,1.051,136,2.594,152,1.786,205,2.594,213,2.069,214,2.901,215,1.786,216,2.509,217,2.901,218,3.437,219,3.437,220,2.509,221,2.509,222,2.509,223,3.663,224,2.261,225,2.509,226,2.261,227,2.509,228,3.177,229,2.069,230,3.177,231,2.509,232,2.509,233,1.786]],["title/coverage.html",[234,2.227]],["body/coverage.html",[0,1.64,1,1.442,5,0.424,6,2.079,11,0.06,17,1.043,20,0.052,25,0.032,26,0.043,27,0.032,34,1.224,52,0.631,55,0.631,74,1.64,76,2.079,92,1.442,113,1.442,115,2.079,116,2.079,132,2.079,173,1.442,174,2.079,184,1.043,199,2.079,213,1.714,214,2.079,215,2.079,229,1.714,233,3.785,234,1.714,235,2.634,236,2.634,237,2.634,238,2.634,239,4.249,240,2.079,241,2.634,242,2.634,243,2.079,244,2.079,245,1.714,246,2.634,247,2.634,248,2.634,249,2.634]],["title/classes/createUserColumn1560421973676.html",[20,0.031,245,1.638]],["body/classes/createUserColumn1560421973676.html",[3,0.413,4,0.335,5,0.335,7,0.413,8,1.01,11,0.058,12,0.856,14,1.01,15,0.413,19,0.413,20,0.026,25,0.026,26,0.037,27,0.026,52,0.718,55,0.718,63,0.968,81,1.393,82,1.183,83,1.01,88,0.825,109,1.951,114,0.968,118,1.356,119,1.356,133,1.645,134,1.645,135,1.645,136,1.356,140,2.772,156,3.032,205,2.5,216,2.367,217,2.772,218,3.345,219,3.345,220,2.367,221,2.367,222,2.367,223,3.593,225,2.367,227,2.367,229,1.951,231,1.645,232,3.593,243,2.772,244,1.645,245,1.951,250,2.083,251,2.083,252,2.083,253,2.083,254,2.083,255,2.083,256,2.083,257,2.083,258,2.083]],["title/dependencies.html",[31,1.405,259,2.108]],["body/dependencies.html",[11,0.063,16,0.883,20,0.043,25,0.032,26,0.043,27,0.032,31,1.218,50,1.218,56,2.069,63,1.218,88,1.038,130,2.069,260,3.968,261,2.62,262,2.62,263,2.62,264,3.516,265,2.62,266,2.62,267,2.62,268,2.62,269,2.62,270,2.62,271,2.62,272,2.62,273,2.62,274,2.62,275,2.62,276,2.62,277,2.62,278,2.62,279,3.516,280,2.62,281,2.62,282,2.62,283,2.62,284,2.62,285,2.62,286,2.62,287,2.62,288,2.62,289,2.62,290,2.62,291,2.62,292,2.62,293,2.62,294,2.62]],["title/miscellaneous/functions.html",[295,1.664,296,2.386]],["body/miscellaneous/functions.html",[7,0.735,11,0.054,25,0.046,26,0.054,27,0.046,34,2.164,240,2.925,295,2.925,296,2.925,297,3.705]],["title/index.html",[7,0.418,298,2.108,299,2.108]],["body/index.html",[4,0.367,11,0.059,25,0.028,26,0.039,27,0.028,46,1.801,89,1.485,234,1.485,300,2.281,301,2.281,302,3.197,303,2.281,304,2.281,305,2.281,306,2.281,307,2.281,308,2.281,309,2.281,310,2.281,311,2.281,312,2.281,313,3.691,314,2.281,315,2.281,316,2.281,317,3.691,318,4.482,319,2.281,320,2.281,321,2.281,322,2.281,323,4.365,324,2.281,325,2.281,326,3.197,327,2.281,328,2.281,329,2.281,330,3.691,331,2.281,332,3.197,333,2.281,334,2.281,335,2.281,336,2.524,337,3.197,338,3.197,339,2.281,340,2.281,341,2.281,342,2.281,343,2.281,344,2.281,345,2.281,346,2.281,347,2.281,348,2.281,349,2.281,350,2.281,351,2.281,352,2.281,353,2.281,354,2.281,355,2.281,356,2.281,357,2.281,358,2.281,359,2.281,360,2.281]],["title/modules.html",[30,1.59]],["body/modules.html",[11,0.053,25,0.045,26,0.053,27,0.045,29,1.987,30,1.687,40,1.687,336,3.412,361,4.321,362,4.321,363,4.321]],["title/overview.html",[364,2.701]],["body/overview.html",[2,1.367,11,0.056,17,1.663,25,0.036,26,0.047,27,0.036,28,1.367,29,2.574,30,1.367,31,1.367,32,1.915,33,1.915,34,1.367,35,1.915,36,1.915,37,2.323,38,2.323,39,2.323,40,2.134,41,2.47,42,1.915,43,1.915,75,1.915,114,1.367,184,1.663,193,2.323,194,2.323,364,2.323,365,4.199,366,2.942]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":233,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["0.0.0.0",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["0.1.13",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["0.2.18",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["09876544",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["1.0.0",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["100000",{"_index":167,"title":{},"body":{"classes/User.html":{}}}],["2",{"_index":365,"title":{},"body":{"overview.html":{}}}],["2.17.1",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["3.0.0",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":366,"title":{},"body":{"overview.html":{}}}],["512",{"_index":168,"title":{},"body":{"classes/User.html":{}}}],["6.0.0",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["7.11.0",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["7.4.14",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":344,"title":{},"body":{"index.html":{}}}],["angular",{"_index":311,"title":{},"body":{"index.html":{}}}],["app",{"_index":321,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":308,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":17,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asdzxc",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["asdzxcfv123",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":219,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["author",{"_index":353,"title":{},"body":{"index.html":{}}}],["auto_increment",{"_index":254,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["await",{"_index":227,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["backers",{"_index":345,"title":{},"body":{"index.html":{}}}],["bash",{"_index":317,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["beforeinsert",{"_index":158,"title":{},"body":{"classes/User.html":{}}}],["body",{"_index":183,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":151,"title":{},"body":{"classes/User.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":363,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":361,"title":{},"body":{"modules.html":{}}}],["building",{"_index":303,"title":{},"body":{"index.html":{}}}],["catch(err",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["change",{"_index":230,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["change_default_value_on_is_verified.ts",{"_index":215,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["change_default_value_on_is_verified.ts:5",{"_index":226,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["change_default_value_on_is_verified.ts:9",{"_index":224,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["changedefaultvalueonisverified1560422912373",{"_index":213,"title":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["class",{"_index":20,"title":{"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{}}}],["classes",{"_index":114,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{},"overview.html":{}}}],["cli",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":193,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":194,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":163,"title":{},"body":{"classes/User.html":{}}}],["column('text",{"_index":146,"title":{},"body":{"classes/User.html":{}}}],["column({type",{"_index":139,"title":{},"body":{"classes/User.html":{}}}],["conn",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["connection",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(\"photo",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(err",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(registeruserdto",{"_index":191,"title":{},"body":{"controllers/UserController.html":{}}}],["const",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{}}}],["constructor(conn",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{}}}],["constructor(userrepository",{"_index":201,"title":{},"body":{"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('users",{"_index":188,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":234,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create_user_column.ts",{"_index":244,"title":{},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["create_user_column.ts:5",{"_index":251,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["create_user_column.ts:9",{"_index":250,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["createusercolumn1560421973676",{"_index":245,"title":{"classes/createUserColumn1560421973676.html":{}},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["crypto",{"_index":161,"title":{},"body":{"classes/User.html":{}}}],["crypto.pbkdf2sync(this.password",{"_index":165,"title":{},"body":{"classes/User.html":{}}}],["database",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":138,"title":{},"body":{"classes/User.html":{}}}],["datecreated",{"_index":133,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["datedeleted",{"_index":134,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["dateupdated",{"_index":135,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":152,"title":{},"body":{"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":312,"title":{},"body":{"index.html":{}}}],["development",{"_index":322,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["down",{"_index":220,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["down(queryrunner",{"_index":222,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["dto/register",{"_index":186,"title":{},"body":{"controllers/UserController.html":{}}}],["dwi",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["dwipurnomo.yk@gmail.com",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["e2e",{"_index":333,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":304,"title":{},"body":{"index.html":{}}}],["email",{"_index":118,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["engine=innodb",{"_index":257,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["entities",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":162,"title":{},"body":{"classes/User.html":{}}}],["entitymanager",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["export",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"classes/User.html":{}}}],["fastify",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["findall",{"_index":200,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":302,"title":{},"body":{"index.html":{}}}],["function",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":296,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":298,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":177,"title":{},"body":{"controllers/UserController.html":{}}}],["grow",{"_index":341,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":164,"title":{},"body":{"classes/User.html":{}}}],["hashedpassword.tostring('base64",{"_index":171,"title":{},"body":{"classes/User.html":{}}}],["hashpassword",{"_index":137,"title":{},"body":{"classes/User.html":{}}}],["heavily",{"_index":309,"title":{},"body":{"index.html":{}}}],["here",{"_index":350,"title":{},"body":{"index.html":{}}}],["host",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":357,"title":{},"body":{"index.html":{}}}],["id",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["identifier",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":216,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["import",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["injectable",{"_index":74,"title":{"injectables/AppService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":86,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":208,"title":{},"body":{"injectables/UserService.html":{}}}],["inspired",{"_index":310,"title":{},"body":{"index.html":{}}}],["install",{"_index":319,"title":{},"body":{"index.html":{}}}],["installation",{"_index":316,"title":{},"body":{"index.html":{}}}],["int",{"_index":253,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["isemail",{"_index":121,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isnumberstring",{"_index":128,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isnumberstring()@min(3",{"_index":126,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isverified",{"_index":136,"title":{},"body":{"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["join",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["kamil",{"_index":354,"title":{},"body":{"index.html":{}}}],["key",{"_index":256,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":360,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":338,"title":{},"body":{"index.html":{}}}],["matching",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["migration",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["migration/**/*{.ts,.js",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationinterface",{"_index":217,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["migrations",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsdir",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationstablename",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["min",{"_index":129,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["min(3",{"_index":131,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["min(6",{"_index":124,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["miscellaneous",{"_index":295,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":337,"title":{},"body":{"index.html":{}}}],["mode",{"_index":326,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":349,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":355,"title":{},"body":{"index.html":{}}}],["name",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["nest",{"_index":313,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":359,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newuser",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{}}}],["newuser.email",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["newuser.isverified",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["newuser.name",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["newuser.password",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["newuser.phone",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["node.js",{"_index":301,"title":{},"body":{"index.html":{}}}],["npm",{"_index":318,"title":{},"body":{"index.html":{}}}],["null",{"_index":232,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["nullable",{"_index":141,"title":{},"body":{"classes/User.html":{}}}],["number",{"_index":148,"title":{},"body":{"classes/User.html":{}}}],["oauth2",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["object.assign(newuser",{"_index":211,"title":{},"body":{"injectables/UserService.html":{}}}],["open",{"_index":339,"title":{},"body":{"index.html":{}}}],["optional",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":364,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["package",{"_index":259,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["passport",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{}}}],["path",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["pg",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":119,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["photo",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["photo.id",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["please",{"_index":347,"title":{},"body":{"index.html":{}}}],["port",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":181,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":175,"title":{},"body":{"controllers/UserController.html":{}}}],["primary",{"_index":255,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["primarygeneratedcolumn",{"_index":149,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":209,"title":{},"body":{"injectables/UserService.html":{}}}],["production",{"_index":328,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":300,"title":{},"body":{"index.html":{}}}],["project",{"_index":340,"title":{},"body":{"index.html":{}}}],["promise",{"_index":205,"title":{},"body":{"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["properties",{"_index":117,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/User.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":218,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["queryrunner",{"_index":223,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["queryrunner.query(\"alter",{"_index":228,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["queryrunner.query(\"create",{"_index":252,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["queryrunner.query(\"drop",{"_index":258,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["read",{"_index":348,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":178,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body",{"_index":190,"title":{},"body":{"controllers/UserController.html":{}}}],["register(registeruserdto",{"_index":180,"title":{},"body":{"controllers/UserController.html":{}}}],["register(user",{"_index":206,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruserdto",{"_index":113,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["repository",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resource",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["result",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["rimraf",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":323,"title":{},"body":{"index.html":{}}}],["running",{"_index":320,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":166,"title":{},"body":{"classes/User.html":{}}}],["save(newuser",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["saved",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["scalable",{"_index":305,"title":{},"body":{"index.html":{}}}],["server",{"_index":306,"title":{},"body":{"index.html":{}}}],["sha512",{"_index":169,"title":{},"body":{"classes/User.html":{}}}],["side",{"_index":307,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{},"index.html":{}}}],["sponsors",{"_index":343,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:8",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":240,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration/1560421973676",{"_index":243,"title":{},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["src/migration/1560422912373",{"_index":214,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["src/user/dto/register",{"_index":115,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":174,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:11",{"_index":179,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:16",{"_index":182,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.entity.ts",{"_index":132,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:10",{"_index":154,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:13",{"_index":147,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:19",{"_index":157,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:22",{"_index":155,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:28",{"_index":153,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:34",{"_index":143,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:40",{"_index":145,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:46",{"_index":144,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:49",{"_index":159,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:7",{"_index":150,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.module.ts",{"_index":195,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":199,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:13",{"_index":204,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":207,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:7",{"_index":202,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":324,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":327,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":329,"title":{},"body":{"index.html":{}}}],["started",{"_index":299,"title":{"index.html":{}},"body":{}}],["starter",{"_index":315,"title":{},"body":{"index.html":{}}}],["statements",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":351,"title":{},"body":{"index.html":{}}}],["string",{"_index":120,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/User.html":{}}}],["support",{"_index":336,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":362,"title":{},"body":{"modules.html":{}}}],["table",{"_index":229,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":330,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":335,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":334,"title":{},"body":{"index.html":{}}}],["tests",{"_index":332,"title":{},"body":{"index.html":{}}}],["text",{"_index":156,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["thanks",{"_index":342,"title":{},"body":{"index.html":{}}}],["then(photo",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["this.appservice.gethello",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["this.conn.manager",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["this.datecreated",{"_index":172,"title":{},"body":{"classes/User.html":{}}}],["this.password",{"_index":170,"title":{},"body":{"classes/User.html":{}}}],["this.userrepository.find",{"_index":210,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":212,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findall",{"_index":189,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(registeruserdto",{"_index":192,"title":{},"body":{"controllers/UserController.html":{}}}],["timestamp",{"_index":140,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["tinyint",{"_index":231,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["touch",{"_index":352,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":142,"title":{},"body":{"classes/User.html":{}}}],["twitter",{"_index":358,"title":{},"body":{"index.html":{}}}],["type",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["typeorm",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":198,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["types/bcrypt",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["types/pg",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":314,"title":{},"body":{"index.html":{}}}],["unit",{"_index":331,"title":{},"body":{"index.html":{}}}],["up",{"_index":221,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["up(queryrunner",{"_index":225,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["user",{"_index":52,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["user.controller",{"_index":196,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":187,"title":{},"body":{"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":116,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":127,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:15",{"_index":125,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:5",{"_index":123,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:8",{"_index":122,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.entity",{"_index":197,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":185,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.entity",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["user/user.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":173,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":40,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["usernameall",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":203,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":176,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":184,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":130,"title":{},"body":{"classes/RegisterUserDto.html":{},"dependencies.html":{}}}],["void",{"_index":160,"title":{},"body":{"classes/User.html":{}}}],["watch",{"_index":325,"title":{},"body":{"index.html":{}}}],["website",{"_index":356,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":346,"title":{},"body":{"index.html":{}}}],["yuso_dev",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello() {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { join } from 'path';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { User } from './user/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forRoot({\n    type: 'mysql',\n    host: '0.0.0.0',\n    port: 3306,\n    username: 'usernameall',\n    password: 'asdzxcfv123',\n    database: 'yuso_dev',\n    entities: [\n      User\n    ],\n    migrationsTableName: 'migration',\n    cli: {\n      migrationsDir: './migration'\n    },\n    migrations: [\n      './migration/**/*{.ts,.js}'\n    ]\n  }), UserModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(conn: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conn\n                                                  \n                                                        \n                                                                        Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Connection, EntityManager } from 'typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './user/user.entity';\n\n@Injectable()\nexport class AppService {\n  constructor(private readonly conn: Connection) {}\n\n  getHello() {\n    const newUser = new User();\n    newUser.name = 'dwi';\n    newUser.password = 'asdzxc';\n    newUser.email = 'dwipurnomo.yk@gmail.com';\n    newUser.phone = '09876544';\n    newUser.isVerified = false;\n    this.conn.manager\n            .save(newUser)\n            .then(photo => {\n                console.log(\"Photo has been saved. Photo id is\", photo.id);\n            })\n            .catch(err => console.log(err));\n    return newUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Min(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumberString()@Min(3)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNumberString, Min } from 'class-validator';\n\nexport class RegisterUserDto {\n\n  readonly name: string;\n\n  @IsEmail()\n  readonly email: string;\n\n  @IsNumberString()\n  @Min(3)\n  readonly phone?: string;\n\n  @Min(6)\n  readonly password: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCreated\n                            \n                            \n                                dateDeleted\n                            \n                            \n                                    Optional\n                                dateUpdated\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isVerified\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \nhashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/user/user.entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport { BeforeInsert, Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('text')\n  name: string;\n\n  @Column('text')\n  email: string;\n\n  @Column({\n    type: 'text',\n    nullable: true\n  })\n  phone: string;\n\n  @Column('text')\n  password: string;\n\n  @Column({\n    type: 'boolean',\n    default: false\n  })\n  isVerified: boolean;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateCreated: Date;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateUpdated?: Date;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateDeleted: Date;\n\n  @BeforeInsert()\n  hashPassword() {\n    const hashedPassword = crypto.pbkdf2Sync(this.password, 'salt', 100000, 512, 'sha512')\n    this.password = hashedPassword.toString('base64');\n\n    this.dateCreated = new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { RegisterUserDto } from './dto/register-user.dto';\n\n@Controller('users')\nexport class UserController {\n\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  getUsers() {\n    return this.userService.findAll();\n  }\n\n  @Post()\n  register(@Body() registerUserDto: RegisterUserDto) {\n    console.log(registerUserDto);\n    return this.userService.register(registerUserDto);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { User } from './user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  findAll(): Promise {\n    return this.userRepository.find();\n  }\n\n  register(user): Promise {\n    const newUser = new User();\n    Object.assign(newUser, user);\n\n    return this.userRepository.save(newUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/changeDefaultValueOnIsVerified1560422912373.html":{"url":"classes/changeDefaultValueOnIsVerified1560422912373.html","title":"class - changeDefaultValueOnIsVerified1560422912373","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  changeDefaultValueOnIsVerified1560422912373\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1560422912373-change_default_value_on_is_verified.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560422912373-change_default_value_on_is_verified.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560422912373-change_default_value_on_is_verified.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class changeDefaultValueOnIsVerified1560422912373 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `user` CHANGE `isVerified` `isVerified` tinyint NOT NULL DEFAULT 0\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `user` CHANGE `isVerified` `isVerified` tinyint NOT NULL\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migration/1560421973676-create_user_column.ts\n            \n            class\n            createUserColumn1560421973676\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1560422912373-change_default_value_on_is_verified.ts\n            \n            class\n            changeDefaultValueOnIsVerified1560422912373\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createUserColumn1560421973676.html":{"url":"classes/createUserColumn1560421973676.html","title":"class - createUserColumn1560421973676","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createUserColumn1560421973676\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1560421973676-create_user_column.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560421973676-create_user_column.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560421973676-create_user_column.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createUserColumn1560421973676 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE TABLE `user` (`id` int NOT NULL AUTO_INCREMENT, `name` text NOT NULL, `email` text NOT NULL, `phone` text NULL, `password` text NOT NULL, `isVerified` tinyint NOT NULL, `dateCreated` timestamp NULL, `dateUpdated` timestamp NULL, `dateDeleted` timestamp NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP TABLE `user`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/passport : ^6.1.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/platform-fastify : ^6.3.1\n        \n            @nestjs/typeorm : ^6.1.2\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/pg : ^7.4.14\n        \n            bcrypt : ^3.0.6\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.9.1\n        \n            mysql : ^2.17.1\n        \n            passport : ^0.4.0\n        \n            passport-oauth2-resource-owner-password : ^1.0.0\n        \n            pg : ^7.11.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typeorm : ^0.2.18\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
