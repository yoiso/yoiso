var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.184,1,1.346]],["body/classes/AccessToken.html",[0,0.211,1,2.014,2,0.944,3,0.29,4,0.252,5,0.215,6,4.359,7,3.238,8,0.329,9,2.168,10,3.686,11,2.814,12,1.46,13,0.596,14,0.027,15,2.338,16,1.942,17,3.006,18,0.66,19,3.84,20,3.006,21,3.343,22,3.84,23,3.238,24,3.84,25,0.377,26,1.795,27,3.006,28,3.238,29,4.216,30,0.817,31,2.545,32,0.29,33,3.238,34,0.015,35,0.02,36,0.015]],["title/classes/AccountVerification.html",[0,0.184,37,2.01]],["body/classes/AccountVerification.html",[0,0.192,2,0.86,3,0.264,4,0.229,5,0.196,8,0.3,9,2.038,11,2.687,12,1.427,13,0.57,14,0.027,15,2.199,16,1.983,17,2.827,18,0.674,20,2.827,21,3.193,23,2.95,25,0.401,26,1.636,27,2.827,28,2.95,29,3.965,30,0.744,32,0.264,33,2.95,34,0.014,35,0.019,36,0.014,37,2.827,38,4.996,39,2.95,40,3.93,41,0.928,42,4.788,43,3.499,44,3.499,45,3.499,46,4.478,47,3.499,48,0.691,49,2.589,50,3.965,51,2.589,52,3.499,53,3.499]],["title/modules/AppModule.html",[54,1.253,55,2.215]],["body/modules/AppModule.html",[0,0.138,3,0.189,4,0.164,5,0.14,13,0.269,14,0.027,18,0.297,25,0.473,32,0.189,34,0.01,35,0.015,36,0.01,41,0.495,48,0.495,49,1.854,54,1.658,55,4.113,56,1.172,57,1.172,58,1.378,59,1.378,60,1.172,61,1.378,62,1.378,63,2.113,64,2.113,65,3.289,66,3.289,67,3.289,68,3.289,69,2.042,70,1.378,71,1.378,72,2.506,73,2.233,74,2.506,75,3.713,76,4.892,77,2.506,78,0.574,79,0.495,80,0.533,81,3.713,82,2.506,83,2.748,84,2.941,85,3.713,86,2.506,87,0.71,88,3.713,89,2.506,90,1.661,91,1.854,92,1.506,93,2.506,94,1.506,95,1.009,96,2.506,97,2.506,98,1.661,99,2.506,100,3.73,101,1.086,102,1.009,103,2.506,104,2.506,105,5.471,106,2.506,107,2.506,108,2.506,109,2.506,110,2.506,111,2.506,112,2.506,113,2.506,114,2.506,115,2.113,116,2.506,117,2.113,118,1.378,119,2.506,120,2.506,121,1.506,122,2.506,123,2.506,124,1.661,125,2.506,126,1.009,127,2.506,128,2.506,129,1.172,130,4.892,131,2.506,132,2.506,133,2.113,134,3.713,135,1.854,136,2.506]],["title/classes/Client.html",[0,0.184,137,1.691]],["body/classes/Client.html",[0,0.217,2,0.974,3,0.299,4,0.259,5,0.222,8,0.339,9,2.211,11,2.855,13,0.605,14,0.027,15,2.787,16,1.971,17,3.066,18,0.669,20,3.066,21,3.392,25,0.299,26,1.851,27,3.066,30,0.842,32,0.299,34,0.016,35,0.02,36,0.016,124,3.38,137,2.581,138,3.338,139,4.175,140,3.74,141,3.774,142,5.1,143,3.38,144,3.958,145,3.958,146,3.958]],["title/classes/CreateDailyBalanceDto.html",[0,0.184,147,2.215]],["body/classes/CreateDailyBalanceDto.html",[0,0.258,2,0.86,3,0.264,4,0.229,5,0.196,8,0.3,9,2.038,13,0.654,14,0.027,15,2.853,16,1.855,18,0.63,25,0.401,32,0.264,34,0.014,35,0.019,36,0.014,101,2.568,147,3.117,148,2.874,149,4.788,150,2.95,151,2.406,152,3.52,153,4.478,154,3.965,155,3.499,156,3.499,157,3.499,158,3.499,159,4.202,160,1.636,161,4.478,162,3.499,163,2.95,164,4.478,165,2.589,166,2.589,167,1.924,168,3.965,169,3.499]],["title/classes/DailyBalance.html",[0,0.184,170,1.563]],["body/classes/DailyBalance.html",[0,0.161,2,0.722,3,0.222,4,0.193,5,0.164,8,0.452,9,1.806,11,2.45,12,1.39,13,0.68,14,0.027,15,2.464,16,2.019,17,3.168,18,0.686,20,2.505,21,1.766,25,0.314,26,2.264,27,2.505,30,0.625,31,1.947,32,0.314,34,0.012,35,0.017,36,0.012,102,2.394,141,3.083,148,3.008,152,3.21,153,4.083,166,4.117,170,1.948,171,2.173,172,3.345,173,2.937,174,2.937,175,2.762,176,2.505,177,2.937,178,2.937,179,4.166,180,2.937,181,5.564,182,2.937,183,2.937,184,2.937,185,2.937,186,2.937,187,3.513,188,3.513,189,2.476,190,2.937,191,2.937]],["title/controllers/DailyBalanceController.html",[192,1.449,193,2.215]],["body/controllers/DailyBalanceController.html",[0,0.168,1,2.422,3,0.231,4,0.201,5,0.171,8,0.262,12,1.133,13,0.328,14,0.027,16,1.498,18,0.509,25,0.426,32,0.231,34,0.012,35,0.017,36,0.012,41,0.847,48,0.847,78,0.982,79,0.847,80,0.912,87,0.867,101,1.859,102,1.994,135,2.264,147,3.882,148,2.506,151,1.147,160,1.431,172,2.578,192,1.326,193,2.843,194,1.326,195,2.58,196,2.028,197,4.952,198,3.616,199,3.06,200,4.181,201,3.664,202,3.06,203,3.06,204,3.745,205,3.06,206,3.173,207,2.028,208,2.723,209,2.58,210,3.06,211,3.06,212,2.58,213,2.58,214,3.06,215,3.06,216,1.683,217,1.683,218,2.146,219,3.616,220,2.146,221,3.06,222,3.06,223,3.06,224,3.06,225,3.06,226,3.06]],["title/modules/DailyBalanceModule.html",[54,1.253,65,2.01]],["body/modules/DailyBalanceModule.html",[0,0.212,3,0.292,4,0.254,5,0.216,14,0.027,25,0.462,32,0.292,34,0.015,35,0.02,36,0.015,54,2.092,56,1.809,57,1.809,58,2.127,59,2.127,60,1.809,61,3.069,62,2.127,65,3.773,69,2.763,70,2.127,71,2.127,73,2.326,87,1.096,94,2.326,95,1.558,101,2.419,102,1.558,148,1.958,167,2.127,170,1.809,193,3.699,194,2.178,208,3.451,209,3.262,227,3.262,228,3.262,229,3.869,230,3.869,231,3.262]],["title/injectables/DailyBalanceService.html",[208,1.838,232,1.253]],["body/injectables/DailyBalanceService.html",[0,0.162,3,0.222,4,0.193,5,0.165,8,0.252,12,1.324,13,0.316,14,0.027,18,0.626,25,0.398,30,0.627,32,0.222,34,0.012,35,0.017,36,0.012,41,0.824,48,0.957,78,1.208,79,1.042,80,1.123,87,0.834,95,1.186,101,1.277,102,2.244,129,1.377,148,2.819,151,1.104,167,1.62,170,2.268,172,3.478,198,3.52,204,1.952,208,2.296,216,2.296,217,1.62,218,1.81,220,2.102,232,1.565,233,1.62,234,2.483,235,4.175,236,4.175,237,2.483,238,3.172,239,2.945,240,3.52,241,4.175,242,2.945,243,3.52,244,1.681,245,4.175,246,2.945,247,4.175,248,2.945,249,1.952,250,2.483,251,2.483,252,2.945,253,2.483,254,2.945,255,4.175,256,2.945,257,2.945,258,2.945,259,2.179,260,1.49,261,2.945,262,2.483]],["title/controllers/MeController.html",[192,1.449,263,2.215]],["body/controllers/MeController.html",[0,0.221,1,2.289,3,0.303,4,0.264,5,0.225,8,0.344,14,0.027,16,1.404,18,0.477,25,0.452,32,0.303,34,0.016,35,0.02,36,0.016,41,1.017,48,0.794,78,0.92,79,0.794,80,0.855,87,1.139,151,1.507,160,1.88,192,1.743,194,1.743,196,2.665,207,2.665,212,3.39,213,3.39,220,1.743,263,3.414,264,3.39,265,4.344,266,4.02,267,4.02,268,3.126,269,3.39,270,4.02,271,4.02,272,3.39,273,4.02,274,4.02]],["title/modules/MeModule.html",[54,1.253,66,2.01]],["body/modules/MeModule.html",[0,0.215,3,0.295,4,0.256,5,0.219,14,0.027,25,0.464,32,0.295,34,0.015,35,0.02,36,0.015,54,2.103,56,1.83,57,1.83,58,2.152,59,2.152,60,1.83,61,3.086,62,2.152,66,3.785,69,2.784,70,2.152,71,2.152,73,2.352,87,1.108,94,2.352,95,1.576,101,1.696,102,1.576,167,2.152,170,1.83,194,2.194,231,3.299,263,3.719,268,3.462,269,3.299,275,3.299,276,3.299,277,3.913,278,3.913]],["title/injectables/MeService.html",[232,1.253,268,1.838]],["body/injectables/MeService.html",[0,0.196,1,1.92,3,0.27,4,0.234,5,0.2,8,0.306,12,1.311,13,0.383,14,0.027,18,0.565,25,0.432,30,0.76,32,0.27,34,0.014,35,0.019,36,0.014,41,0.941,48,0.705,78,1.091,79,0.941,80,1.014,87,1.012,95,1.439,101,1.548,102,1.439,129,2.229,151,1.339,167,1.964,170,2.509,216,2.622,217,1.964,218,2.067,220,1.548,232,1.787,233,1.964,237,3.012,238,3.443,240,4.02,249,2.367,250,3.012,253,3.012,265,4.02,268,2.622,279,3.012,280,1.63,281,3.572,282,4.768,283,3.572,284,1.085]],["title/injectables/Oauth2Middleware.html",[98,2.215,232,1.253]],["body/injectables/Oauth2Middleware.html",[0,0.191,1,2.284,3,0.263,4,0.229,5,0.195,8,0.299,12,0.798,13,0.503,14,0.027,18,0.414,25,0.428,30,0.742,32,0.263,34,0.014,35,0.019,36,0.014,41,0.926,48,0.688,78,0.798,79,0.688,80,0.742,87,0.987,98,3.109,126,1.404,129,2.194,200,2.58,218,2.298,232,1.758,233,1.917,280,1.61,284,1.059,285,2.94,286,3.956,287,4.691,288,4.471,289,5.671,290,5.671,291,3.487,292,3.487,293,4.691,294,3.487,295,2.58,296,2.58,297,3.487,298,2.94,299,3.487,300,3.487,301,3.487,302,2.94,303,3.487,304,3.487,305,3.487,306,3.487,307,3.487,308,4.691,309,3.487,310,3.487]],["title/modules/Oauth2Module.html",[54,1.253,67,2.01]],["body/modules/Oauth2Module.html",[0,0.206,1,1.985,3,0.283,4,0.246,5,0.21,12,0.86,14,0.027,25,0.479,31,2.489,32,0.283,34,0.015,35,0.02,36,0.015,54,2.062,56,1.756,57,1.756,58,2.065,59,2.065,60,1.756,61,3.025,62,2.065,67,3.743,69,2.71,70,2.065,71,2.065,73,2.258,87,1.063,94,2.258,95,1.512,137,2.494,194,2.136,295,2.779,296,2.779,311,3.166,312,3.166,313,3.423,314,3.755,315,3.646,316,3.755,317,3.166,318,3.166,319,3.755]],["title/injectables/Oauth2Service.html",[232,1.253,313,1.838]],["body/injectables/Oauth2Service.html",[0,0.122,1,1.658,3,0.168,4,0.146,5,0.124,8,0.19,10,1.473,12,0.942,13,0.238,14,0.027,18,0.645,25,0.423,30,0.473,31,1.473,32,0.168,34,0.009,35,0.013,36,0.009,41,0.67,42,3.884,48,1.032,50,2.861,78,1.197,79,1.032,80,1.112,87,0.63,95,0.895,121,1.336,129,2.543,137,1.125,140,1.473,151,1.543,216,1.866,217,2.263,218,2.15,219,1.874,220,2.267,232,1.272,233,1.222,238,3.525,249,1.473,260,2.646,280,1.937,284,1.506,295,1.645,296,1.645,313,1.866,318,1.874,320,1.874,321,3.393,322,3.393,323,3.393,324,3.393,325,3.393,326,2.223,327,4.116,328,4.116,329,2.223,330,3.393,331,3.393,332,3.884,333,2.223,334,2.861,335,3.393,336,2.083,337,2.223,338,2.249,339,2.223,340,3.393,341,2.223,342,3.393,343,2.223,344,3.393,345,2.223,346,2.511,347,1.874,348,2.223,349,2.223,350,2.223,351,3.393,352,2.223,353,2.223,354,3.393,355,2.223,356,2.223,357,2.223,358,2.223,359,2.223,360,2.223,361,2.223]],["title/controllers/PasswordController.html",[192,1.449,315,2.215]],["body/controllers/PasswordController.html",[0,0.144,3,0.198,4,0.172,5,0.147,8,0.225,12,0.88,13,0.412,14,0.027,16,1.343,18,0.539,25,0.378,32,0.198,34,0.01,35,0.015,36,0.01,41,0.759,48,0.898,78,1.041,79,0.898,80,0.968,87,0.744,129,2.688,137,1.946,151,0.985,160,1.229,192,1.139,194,1.139,196,1.742,201,3.366,206,1.944,207,1.742,218,2.309,220,1.667,262,2.216,272,2.216,280,1.826,284,1.746,288,5.071,298,2.216,313,2.501,315,2.549,317,2.216,336,1.33,362,2.216,363,3.846,364,3.846,365,3.846,366,3.846,367,3.81,368,2.628,369,4.548,370,2.628,371,2.628,372,2.628,373,2.735,374,2.628,375,4.548,376,2.628,377,2.628,378,2.628,379,2.628,380,2.628,381,2.628,382,2.628,383,2.628,384,3.846,385,2.628,386,2.628,387,2.628,388,2.628,389,2.628,390,2.628,391,2.628,392,2.628,393,2.628,394,2.628,395,2.628,396,2.628,397,2.628,398,2.628,399,2.628,400,2.628,401,2.628,402,2.628,403,2.628,404,2.628]],["title/classes/RegisterUserDto.html",[0,0.184,405,2.215]],["body/classes/RegisterUserDto.html",[0,0.268,2,0.91,3,0.279,4,0.243,5,0.207,8,0.317,9,2.116,13,0.586,14,0.027,15,2.899,16,1.908,18,0.648,25,0.368,32,0.279,34,0.015,35,0.019,36,0.015,79,1.078,118,3.004,151,2.433,154,3.121,159,4.297,160,1.731,161,4.116,163,3.121,164,4.116,165,2.738,168,3.121,336,2.764,405,3.235,406,4.897,407,3.121,408,3.701,409,3.701,410,3.701,411,3.701,412,3.701,413,4.881,414,3.701]],["title/classes/RequestTokenDto.html",[0,0.184,367,2.215]],["body/classes/RequestTokenDto.html",[0,0.189,2,0.849,3,0.26,4,0.226,5,0.193,8,0.296,9,2.02,13,0.632,14,0.027,15,3.026,16,2.06,18,0.699,25,0.26,32,0.26,34,0.014,35,0.018,36,0.014,139,3.903,140,3.496,151,2.507,159,4.831,160,1.614,336,2.669,338,3.496,367,3.088,415,5.124,416,2.91,417,5.275,418,3.451,419,3.451,420,3.451,421,3.451,422,3.451]],["title/classes/User.html",[0,0.184,12,0.765]],["body/classes/User.html",[0,0.13,2,0.581,3,0.178,4,0.155,5,0.132,8,0.202,9,1.54,11,2.161,12,0.813,13,0.677,14,0.027,15,2.672,16,2.112,17,3.218,18,0.717,20,2.136,21,2.567,25,0.322,26,2.503,27,2.136,30,0.502,32,0.178,34,0.009,35,0.014,36,0.009,41,0.701,46,3.601,48,0.466,49,1.747,79,0.843,80,0.756,101,1.024,102,0.951,118,2.348,121,1.42,124,3.787,135,3.16,141,3.769,167,1.299,170,2.382,172,3.339,175,3.547,176,2.136,218,1.024,251,1.991,336,2.161,346,2.629,423,1.991,424,3.601,425,3.601,426,3.601,427,3.16,428,3.601,429,4.75,430,2.361,431,2.361,432,2.361,433,5.714,434,2.361,435,2.361,436,2.361,437,2.361,438,2.361,439,4.75,440,2.995,441,2.361,442,2.361,443,2.361,444,2.355,445,2.361,446,2.361,447,2.361,448,2.361,449,3.552,450,2.361,451,2.361,452,2.361,453,2.361]],["title/controllers/UserController.html",[92,2.01,192,1.449]],["body/controllers/UserController.html",[0,0.154,3,0.211,4,0.184,5,0.157,8,0.24,12,1.437,13,0.3,14,0.027,16,1.647,18,0.559,25,0.389,32,0.211,34,0.011,35,0.016,36,0.011,41,0.795,48,1.123,78,0.922,79,0.795,80,0.857,87,0.793,92,2.421,118,2.594,129,1.309,133,3.977,151,1.05,160,1.309,192,1.214,194,1.214,196,1.856,201,3.49,204,3.621,206,2.072,207,1.856,216,1.54,217,1.54,218,1.214,220,2.044,243,2.361,280,1.728,284,0.85,405,3.885,454,2.361,455,5.157,456,4.348,457,3.396,458,2.8,459,4.027,460,2.8,461,2.8,462,2.361,463,4.027,464,2.8,465,4.027,466,3.396,467,3.396,468,2.594,469,2.361,470,2.8,471,2.8,472,2.8,473,2.8,474,2.8,475,4.027,476,2.8,477,2.8,478,2.8,479,2.8,480,2.8,481,2.8]],["title/modules/UserModule.html",[54,1.253,68,2.01]],["body/modules/UserModule.html",[0,0.211,3,0.29,4,0.252,5,0.215,12,1.145,14,0.027,25,0.473,32,0.29,34,0.015,35,0.02,36,0.015,37,2.308,51,2.841,54,2.084,56,1.795,57,1.795,58,2.112,59,2.112,60,1.795,61,3.058,62,2.112,68,3.765,69,2.75,70,2.112,71,2.112,73,2.308,87,1.087,92,3.343,94,2.308,95,1.546,152,2.545,194,2.168,468,3.444,469,3.238,482,3.238,483,3.238,484,3.84,485,3.84,486,3.238,487,3.84]],["title/injectables/UserService.html",[232,1.253,468,1.838]],["body/injectables/UserService.html",[0,0.128,3,0.175,4,0.152,5,0.13,8,0.199,9,1.521,12,1.264,13,0.376,14,0.027,18,0.631,25,0.417,30,0.494,32,0.175,34,0.009,35,0.014,36,0.009,37,2.11,40,2.597,41,0.693,48,0.93,51,1.719,78,1.079,79,0.93,80,1.002,83,1.719,84,3.198,87,0.658,90,1.54,91,1.719,95,0.936,100,4.266,115,1.959,118,1.278,121,2.11,151,1.585,152,3.123,204,1.54,216,1.93,217,2.326,218,2.043,220,2.043,232,1.316,233,1.278,238,3.321,244,1.898,249,1.54,280,1.615,284,1.066,302,1.959,338,1.54,347,1.959,456,2.959,457,2.959,462,2.959,466,1.959,467,1.959,468,1.93,486,1.959,488,1.959,489,1.833,490,4.712,491,3.51,492,2.324,493,4.229,494,5.523,495,2.324,496,3.51,497,2.324,498,3.51,499,2.324,500,3.51,501,2.324,502,2.324,503,2.324,504,2.324,505,2.324,506,2.324,507,2.324,508,2.324,509,2.324,510,2.324,511,2.324,512,2.324,513,2.324,514,2.324,515,2.324,516,2.324,517,2.324,518,2.324,519,2.324,520,2.324,521,2.324,522,2.324,523,2.324,524,2.324,525,2.324,526,2.324,527,2.324,528,2.324,529,3.51,530,2.324,531,2.324,532,2.324]],["title/classes/changeDefaultValueOnIsVerified1560422912373.html",[0,0.184,533,2.473]],["body/classes/changeDefaultValueOnIsVerified1560422912373.html",[0,0.193,2,0.866,3,0.266,4,0.231,5,0.197,8,0.302,12,1.081,13,0.507,14,0.026,18,0.56,25,0.266,30,0.749,32,0.266,34,0.014,35,0.019,36,0.014,41,0.932,48,0.932,78,1.081,79,0.932,80,1.005,126,1.902,176,2.118,244,2.293,280,1.857,284,1.434,427,4.214,489,2.65,533,3.495,534,4.494,535,2.97,536,2.492,537,2.209,538,2.209,539,2.209,540,3.006,541,3.523,542,2.209,543,3.523,544,2.84,545,2.209,546,4.724,547,3.495,548,2.598,549,2.607]],["title/coverage.html",[550,3.373]],["body/coverage.html",[0,0.354,1,1.529,5,0.144,6,2.809,7,2.177,12,0.591,13,0.277,14,0.027,34,0.01,35,0.015,36,0.01,37,1.552,38,2.177,39,2.177,60,1.207,84,1.552,92,1.552,98,1.711,101,1.119,102,1.813,121,1.552,137,1.306,138,2.177,147,1.711,148,2.512,149,2.177,150,2.177,170,1.207,171,1.91,192,2.151,193,1.711,195,2.177,208,1.42,232,1.982,234,2.177,263,1.711,264,2.177,268,1.42,279,2.177,285,2.177,313,1.42,315,1.711,320,2.177,362,2.177,367,1.711,405,1.711,406,2.177,407,2.177,415,2.177,416,2.177,423,2.177,454,2.177,468,1.42,488,2.177,533,1.91,534,2.177,535,2.177,545,1.207,549,4.987,550,1.91,551,2.581,552,2.581,553,2.581,554,6.086,555,3.796,556,3.796,557,5.289,558,3.201,559,3.796,560,4.963,561,2.177,562,3.796,563,2.177,564,2.177,565,1.91,566,2.177,567,2.177,568,1.91,569,2.177,570,2.177,571,1.91,572,2.177,573,2.177,574,1.91,575,2.177,576,2.177,577,1.91,578,2.177,579,2.177,580,1.91,581,2.177,582,2.177,583,1.91,584,2.177,585,3.796,586,2.581,587,2.581,588,2.177,589,2.581,590,2.581,591,2.581,592,2.581]],["title/classes/createAccountVerificationTable1561015030859.html",[0,0.184,571,2.473]],["body/classes/createAccountVerificationTable1561015030859.html",[0,0.194,2,0.869,3,0.267,4,0.232,5,0.198,8,0.303,11,2.396,13,0.508,14,0.026,18,0.562,25,0.267,30,0.752,32,0.267,34,0.014,35,0.019,36,0.014,40,2.616,41,0.935,48,0.935,78,1.084,79,0.935,80,1.007,126,1.907,244,2.297,280,1.858,284,1.438,444,2.343,489,2.653,536,2.496,537,2.214,538,2.214,539,2.214,540,3.008,542,2.214,545,2.214,548,2.604,569,4.502,570,2.981,571,3.503,593,3.535,594,3.535,595,1.944,596,3.992,597,2.125,598,2.981,599,2.981,600,1.944,601,2.981,602,1.944]],["title/classes/createDailyBalanceIndex1561539612695.html",[0,0.184,583,2.473]],["body/classes/createDailyBalanceIndex1561539612695.html",[0,0.192,2,0.86,3,0.264,4,0.229,5,0.196,8,0.508,13,0.504,14,0.026,18,0.558,25,0.264,30,0.744,32,0.264,34,0.014,35,0.019,36,0.014,41,0.928,48,0.928,78,1.076,79,0.928,80,1,126,1.894,172,2.103,244,2.287,259,4.202,260,1.77,280,1.853,284,1.725,489,2.645,536,2.483,537,2.199,538,2.199,539,2.199,540,3.002,542,2.199,581,4.478,582,2.95,583,3.479,595,2.586,602,2.586,603,3.499,604,3.499,605,4.702,606,4.702]],["title/classes/createDailyBalanceRelationship1561358492040.html",[0,0.184,580,2.473]],["body/classes/createDailyBalanceRelationship1561358492040.html",[0,0.182,2,0.813,3,0.249,4,0.217,5,0.185,8,0.283,13,0.485,14,0.026,18,0.537,25,0.249,26,1.546,30,0.703,32,0.249,34,0.013,35,0.018,36,0.013,41,0.893,48,0.893,78,1.036,79,0.893,80,0.963,126,1.823,244,2.234,259,4.105,260,2.611,280,1.822,284,1.685,373,1.988,489,2.601,536,2.413,537,2.116,538,2.116,539,2.116,540,2.967,542,2.116,544,3.336,545,2.594,548,1.818,578,4.351,579,2.788,580,3.349,597,1.988,600,2.489,607,3.307,608,3.307,609,2.999,610,2.192,611,4.525,612,2.999,613,2.192,614,2.192,615,2.999,616,2.192,617,2.999]],["title/classes/createOauth1560545960045.html",[0,0.184,568,2.473]],["body/classes/createOauth1560545960045.html",[0,0.102,2,0.456,3,0.14,4,0.121,5,0.104,8,0.39,10,4.098,13,0.316,14,0.023,18,0.349,25,0.14,26,2.705,30,0.394,32,0.14,34,0.007,35,0.012,36,0.007,41,0.581,48,0.581,78,0.674,79,0.824,80,0.626,126,1.186,129,1.377,137,3.076,139,2.711,140,1.952,143,1.952,175,1.228,176,1.77,189,2.483,244,1.681,260,1.854,280,1.473,284,1.998,332,2.483,334,4.089,373,1.77,444,3.019,489,2.102,536,1.713,537,1.377,538,1.377,539,1.377,540,2.542,542,1.377,544,3.933,545,3.059,547,1.371,548,3.181,549,1.371,566,3.09,567,1.562,568,2.179,595,1.019,597,2.203,600,2.296,602,1.019,609,3.988,610,1.952,612,2.767,613,1.952,614,1.228,615,2.767,616,2.429,617,3.988,618,1.853,619,1.853,620,2.483,621,2.945,622,2.945,623,2.945,624,2.945,625,2.945,626,1.853,627,2.945,628,4.174,629,3.52,630,4.174,631,4.174,632,4.174,633,1.853,634,1.853]],["title/classes/createOauth2Middleware1561200781531.html",[0,0.184,577,2.473]],["body/classes/createOauth2Middleware1561200781531.html",[0,0.183,2,0.821,3,0.252,4,0.219,5,0.187,8,0.444,10,3.692,13,0.489,14,0.026,18,0.54,25,0.252,30,0.71,32,0.252,34,0.013,35,0.018,36,0.013,41,0.899,48,0.899,78,1.043,79,0.899,80,0.969,126,1.835,143,2.213,244,2.244,260,2.305,280,1.827,284,1.692,373,2.007,489,2.608,536,2.425,537,2.13,538,2.13,539,2.13,540,2.973,542,2.13,544,2.739,545,2.13,575,4.373,576,2.815,577,3.371,595,1.836,600,2.505,602,1.836,609,2.213,610,2.213,612,3.02,613,2.213,614,2.213,615,3.02,616,2.213,617,2.213,620,3.841,635,3.339,636,3.339,637,4.556]],["title/classes/createUserColumn1560421973676.html",[0,0.184,565,2.473]],["body/classes/createUserColumn1560421973676.html",[0,0.18,2,0.808,3,0.248,4,0.215,5,0.184,8,0.282,11,2.28,12,1.031,13,0.483,14,0.026,18,0.534,25,0.248,30,0.699,32,0.248,34,0.013,35,0.018,36,0.013,41,0.889,48,0.889,78,1.031,79,1.015,80,0.959,118,1.807,126,1.815,175,3.408,244,2.228,280,1.819,284,1.368,336,1.662,424,2.77,425,2.77,426,2.77,427,2.431,428,2.77,444,3.667,489,2.596,536,2.405,537,2.107,538,2.107,539,2.107,540,2.963,542,2.107,545,2.107,547,2.431,548,3.484,563,4.336,564,2.77,565,3.334,595,1.807,597,1.975,598,2.77,599,2.77,600,1.807,601,2.77,602,1.807,638,3.285,639,3.285,640,3.285]],["title/dependencies.html",[57,1.879,641,2.793]],["body/dependencies.html",[0,0.281,14,0.027,30,0.845,34,0.016,35,0.02,36,0.016,57,1.858,83,2.94,84,2.389,87,1.125,90,2.634,91,2.94,95,1.6,160,1.858,165,2.94,346,2.94,642,3.974,643,5.653,644,3.974,645,5.113,646,3.974,647,5.113,648,3.974,649,3.974,650,3.974,651,3.974,652,3.974,653,3.974,654,3.974,655,3.974,656,3.974,657,3.974,658,3.974,659,3.974,660,3.974,661,3.351,662,3.974,663,3.974,664,3.974,665,3.974,666,3.974,667,3.974,668,3.974,669,3.974,670,3.974,671,3.974]],["title/miscellaneous/enumerations.html",[672,1.536,673,3.389]],["body/miscellaneous/enumerations.html",[8,0.418,14,0.025,34,0.019,35,0.023,36,0.019,102,1.967,148,2.471,166,4.298,171,4.298,187,4.898,188,4.898,672,2.685,673,4.117,674,4.883,675,4.898]],["title/miscellaneous/functions.html",[672,1.536,676,3.389]],["body/miscellaneous/functions.html",[8,0.431,14,0.023,34,0.02,35,0.023,36,0.02,60,2.935,558,4.239,561,5.293,672,2.764,676,4.239,677,5.909]],["title/index.html",[8,0.239,678,2.793,679,2.793]],["body/index.html",[4,0.233,14,0.026,34,0.014,35,0.019,36,0.014,90,3.545,238,2.133,550,2.625,680,3.547,681,3.547,682,4.746,683,3.547,684,3.547,685,3.547,686,3.547,687,3.547,688,3.547,689,3.547,690,3.547,691,3.547,692,3.547,693,3.547,694,3.547,695,3.547,696,5.348,697,6.256,698,3.547,699,2.991,700,3.547,701,3.547,702,5.165,703,3.547,704,3.547,705,4.746,706,2.991,707,3.547,708,2.991,709,5.348,710,3.547,711,4.746,712,3.547,713,3.547,714,3.547,715,4.002,716,4.746,717,4.746,718,3.547,719,3.547,720,3.547,721,3.547,722,3.547,723,3.547,724,3.547,725,3.547,726,3.547,727,3.547,728,3.547,729,3.547,730,3.547,731,3.547,732,3.547,733,3.547,734,3.547,735,3.547,736,3.547,737,3.547,738,3.547,739,3.547,740,3.547]],["title/modules.html",[56,2.132]],["body/modules.html",[14,0.022,34,0.019,35,0.022,36,0.019,55,3.117,56,2.199,65,2.828,66,2.828,67,2.828,68,2.828,715,5.471,741,6.488,742,6.488,743,6.488]],["title/overview.html",[744,3.844]],["body/overview.html",[2,0.927,14,0.026,34,0.015,35,0.02,36,0.015,54,1.413,55,4.358,56,1.762,57,1.762,58,2.073,59,2.073,60,1.762,61,2.073,62,2.073,63,3.178,64,3.178,65,3.651,66,3.651,67,3.651,68,3.651,69,2.717,70,2.073,71,2.073,194,1.634,208,3.031,227,3.178,228,3.178,233,2.073,268,3.031,275,3.178,276,3.178,311,3.178,312,3.178,313,3.031,468,3.031,482,3.178,483,3.178,744,3.178,745,4.94,746,3.769,747,3.769]],["title/classes/userForAccountVerification1561019799282.html",[0,0.184,574,2.473]],["body/classes/userForAccountVerification1561019799282.html",[0,0.166,2,0.746,3,0.229,4,0.199,5,0.17,8,0.483,13,0.457,14,0.025,18,0.505,25,0.229,26,1.418,30,0.645,32,0.229,34,0.012,35,0.017,36,0.012,41,0.841,48,0.841,78,0.976,79,0.841,80,0.907,126,1.716,143,2.825,244,2.153,260,2.85,280,1.774,284,1.86,373,1.823,489,2.532,536,2.304,537,1.993,538,1.993,539,1.993,540,2.911,542,1.993,544,3.511,545,2.731,548,1.668,572,4.155,573,2.557,574,3.154,595,1.668,596,5.164,597,1.823,600,2.344,602,1.668,609,3.266,610,2.01,612,2.825,613,2.01,614,2.01,615,2.825,616,2.01,617,3.266,748,3.032,749,3.032,750,4.262,751,4.262,752,4.262]],["title/miscellaneous/variables.html",[672,1.536,753,3.389]],["body/miscellaneous/variables.html",[1,1.902,5,0.197,6,2.607,8,0.302,13,0.507,14,0.027,34,0.014,35,0.019,36,0.014,84,2.84,117,4.494,124,3.131,176,2.84,200,2.607,220,1.527,286,2.97,336,1.783,338,2.335,440,3.983,584,3.983,588,2.97,629,2.97,661,2.97,672,1.937,675,3.983,699,2.97,702,2.97,706,2.97,708,2.97,753,2.97,754,3.523,755,3.523,756,3.523,757,3.523,758,3.523,759,3.523,760,3.523,761,3.523,762,3.523,763,3.523,764,3.523,765,3.523,766,3.523,767,3.523,768,3.523,769,3.523,770,5.695,771,4.724,772,3.523,773,3.523,774,3.523,775,4.724,776,3.523,777,3.523,778,3.523,779,3.523,780,3.523,781,3.523,782,3.523,783,3.523,784,3.523,785,3.523,786,3.523,787,3.523,788,3.523,789,3.523,790,3.523,791,3.523,792,3.523,793,3.523]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":549,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["0.0.0.0",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["0.2.18",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":298,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"controllers/PasswordController.html":{}}}],["1.1.3",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":451,"title":{},"body":{"classes/User.html":{}}}],["16",{"_index":747,"title":{},"body":{"overview.html":{}}}],["2.17.1",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["23:59:59.9",{"_index":256,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["3.0.0",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":746,"title":{},"body":{"overview.html":{}}}],["401",{"_index":306,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["5",{"_index":745,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":295,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"injectables/Oauth2Service.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstoken.access_token",{"_index":357,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["accesstoken.user",{"_index":219,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/Oauth2Service.html":{}}}],["accesstokenrepo",{"_index":327,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["account",{"_index":152,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["account.user",{"_index":509,"title":{},"body":{"injectables/UserService.html":{}}}],["account.user.isverified",{"_index":529,"title":{},"body":{"injectables/UserService.html":{}}}],["account_verification",{"_index":596,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["accountrepository",{"_index":493,"title":{},"body":{"injectables/UserService.html":{}}}],["accountverification",{"_index":37,"title":{"classes/AccountVerification.html":{}},"body":{"classes/AccountVerification.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["accrepo",{"_index":299,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["accrepo.findone({access_token",{"_index":301,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["action",{"_index":615,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["ada",{"_index":396,"title":{},"body":{"controllers/PasswordController.html":{}}}],["adapter",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":609,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["allow",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":723,"title":{},"body":{"index.html":{}}}],["amount",{"_index":153,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{}}}],["anda",{"_index":519,"title":{},"body":{"injectables/UserService.html":{}}}],["angular",{"_index":691,"title":{},"body":{"index.html":{}}}],["apimodelproperty",{"_index":159,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{}}}],["apimodelproperty()@isdefined()@isnotempty()@length(1",{"_index":154,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["apimodelproperty()@isemail",{"_index":408,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["apimodelproperty()@isenum(balancetype",{"_index":157,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["apimodelproperty()@length(6",{"_index":411,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["apiusetags",{"_index":207,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}}}],["apiusetags('dailybalances",{"_index":214,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["apiusetags('me",{"_index":270,"title":{},"body":{"controllers/MeController.html":{}}}],["apiusetags('token",{"_index":378,"title":{},"body":{"controllers/PasswordController.html":{}}}],["apiusetags('users",{"_index":472,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":700,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":304,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["applications",{"_index":688,"title":{},"body":{"index.html":{}}}],["apply(oauth2middleware",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":459,"title":{},"body":{"controllers/UserController.html":{}}}],["asdzxcfv123",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":280,"title":{},"body":{"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["author",{"_index":733,"title":{},"body":{"index.html":{}}}],["auto_increment",{"_index":598,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createUserColumn1560421973676.html":{}}}],["automatically",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":284,"title":{},"body":{"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["backers",{"_index":724,"title":{},"body":{"index.html":{}}}],["balance.controller",{"_index":230,"title":{},"body":{"modules/DailyBalanceModule.html":{}}}],["balance.controller.ts",{"_index":195,"title":{},"body":{"controllers/DailyBalanceController.html":{},"coverage.html":{}}}],["balance.controller.ts:16",{"_index":202,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["balance.controller.ts:26",{"_index":205,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["balance.dto",{"_index":211,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["balance.dto.ts",{"_index":150,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"coverage.html":{}}}],["balance.dto.ts:11",{"_index":155,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["balance.dto.ts:17",{"_index":156,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["balance.dto.ts:21",{"_index":158,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["balance.entity",{"_index":167,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"classes/User.html":{}}}],["balance.entity.ts",{"_index":171,"title":{},"body":{"classes/DailyBalance.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["balance.entity.ts:13",{"_index":180,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:16",{"_index":173,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:19",{"_index":174,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:25",{"_index":182,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:29",{"_index":178,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.entity.ts:33",{"_index":185,"title":{},"body":{"classes/DailyBalance.html":{}}}],["balance.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["balance.module.ts",{"_index":229,"title":{},"body":{"modules/DailyBalanceModule.html":{}}}],["balance.service",{"_index":209,"title":{},"body":{"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{}}}],["balance.service.ts",{"_index":234,"title":{},"body":{"injectables/DailyBalanceService.html":{},"coverage.html":{}}}],["balance.service.ts:14",{"_index":242,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["balance.service.ts:20",{"_index":248,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["balance.service.ts:24",{"_index":246,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["balance.service.ts:7",{"_index":239,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["balance/daily",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["balance/dto/create",{"_index":149,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"coverage.html":{}}}],["balancetype",{"_index":166,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"miscellaneous/enumerations.html":{}}}],["bash",{"_index":696,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":346,"title":{},"body":{"injectables/Oauth2Service.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.comparesync(password",{"_index":355,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["bcrypt.hashsync(this.password",{"_index":450,"title":{},"body":{"classes/User.html":{}}}],["beforeinsert",{"_index":46,"title":{},"body":{"classes/AccountVerification.html":{},"classes/User.html":{}}}],["between",{"_index":261,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["body",{"_index":206,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":439,"title":{},"body":{"classes/User.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":394,"title":{},"body":{"controllers/PasswordController.html":{}}}],["browse",{"_index":743,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":741,"title":{},"body":{"modules.html":{}}}],["building",{"_index":683,"title":{},"body":{"index.html":{}}}],["case",{"_index":387,"title":{},"body":{"controllers/PasswordController.html":{}}}],["catch((errors",{"_index":525,"title":{},"body":{"injectables/UserService.html":{}}}],["catch(e",{"_index":391,"title":{},"body":{"controllers/PasswordController.html":{}}}],["change",{"_index":546,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["change_default_value_on_is_verified.ts",{"_index":535,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["change_default_value_on_is_verified.ts:5",{"_index":543,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["change_default_value_on_is_verified.ts:9",{"_index":541,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}}}],["changedefaultvalueonisverified1560422912373",{"_index":533,"title":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{}},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["character",{"_index":628,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["checkclient",{"_index":321,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["checkclient(clientid",{"_index":331,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["checkuser",{"_index":322,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["checkuser(username",{"_index":335,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["cli",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client",{"_index":137,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["client.entity",{"_index":318,"title":{},"body":{"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{}}}],["client_id",{"_index":139,"title":{},"body":{"classes/Client.html":{},"classes/RequestTokenDto.html":{},"classes/createOauth1560545960045.html":{}}}],["client_secret",{"_index":140,"title":{},"body":{"classes/Client.html":{},"injectables/Oauth2Service.html":{},"classes/RequestTokenDto.html":{},"classes/createOauth1560545960045.html":{}}}],["client`(`id",{"_index":634,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["clientid",{"_index":334,"title":{},"body":{"injectables/Oauth2Service.html":{},"classes/createOauth1560545960045.html":{}}}],["clientrepo",{"_index":328,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["clientsecret",{"_index":332,"title":{},"body":{"injectables/Oauth2Service.html":{},"classes/createOauth1560545960045.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dailybalancemodule",{"_index":227,"title":{},"body":{"modules/DailyBalanceModule.html":{},"overview.html":{}}}],["cluster_dailybalancemodule_providers",{"_index":228,"title":{},"body":{"modules/DailyBalanceModule.html":{},"overview.html":{}}}],["cluster_memodule",{"_index":275,"title":{},"body":{"modules/MeModule.html":{},"overview.html":{}}}],["cluster_memodule_providers",{"_index":276,"title":{},"body":{"modules/MeModule.html":{},"overview.html":{}}}],["cluster_oauth2module",{"_index":311,"title":{},"body":{"modules/Oauth2Module.html":{},"overview.html":{}}}],["cluster_oauth2module_providers",{"_index":312,"title":{},"body":{"modules/Oauth2Module.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":482,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":483,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":40,"title":{},"body":{"classes/AccountVerification.html":{},"injectables/UserService.html":{},"classes/createAccountVerificationTable1561015030859.html":{}}}],["collate",{"_index":631,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["column",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["column('text",{"_index":17,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["column({type",{"_index":141,"title":{},"body":{"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["compiled",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["config.get('app.mailer",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.load(path.resolve(__dirname",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["configure",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionoptions",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(errors",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(response",{"_index":524,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":218,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constraint",{"_index":610,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["constructor",{"_index":216,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(dailybalancerepo",{"_index":237,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{}}}],["constructor(private",{"_index":272,"title":{},"body":{"controllers/MeController.html":{},"controllers/PasswordController.html":{}}}],["constructor(userrepo",{"_index":326,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["constructor(userrepository",{"_index":492,"title":{},"body":{"injectables/UserService.html":{}}}],["consumer",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":520,"title":{},"body":{"injectables/UserService.html":{}}}],["controller",{"_index":192,"title":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('dailybalances",{"_index":215,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["controller('me",{"_index":271,"title":{},"body":{"controllers/MeController.html":{}}}],["controller('token",{"_index":379,"title":{},"body":{"controllers/PasswordController.html":{}}}],["controller('users",{"_index":473,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":194,"title":{},"body":{"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":550,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":235,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["create(dto",{"_index":241,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["create_account_verification_table.ts",{"_index":570,"title":{},"body":{"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{}}}],["create_account_verification_table.ts:5",{"_index":594,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{}}}],["create_account_verification_table.ts:9",{"_index":593,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{}}}],["create_daily_balance_index.ts",{"_index":582,"title":{},"body":{"coverage.html":{},"classes/createDailyBalanceIndex1561539612695.html":{}}}],["create_daily_balance_index.ts:10",{"_index":603,"title":{},"body":{"classes/createDailyBalanceIndex1561539612695.html":{}}}],["create_daily_balance_index.ts:5",{"_index":604,"title":{},"body":{"classes/createDailyBalanceIndex1561539612695.html":{}}}],["create_daily_balance_relationship.ts",{"_index":579,"title":{},"body":{"coverage.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["create_daily_balance_relationship.ts:10",{"_index":607,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["create_daily_balance_relationship.ts:5",{"_index":608,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["create_oauth.ts",{"_index":567,"title":{},"body":{"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["create_oauth.ts:24",{"_index":618,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["create_oauth.ts:5",{"_index":619,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["create_oauth2_middleware.ts",{"_index":576,"title":{},"body":{"coverage.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["create_oauth2_middleware.ts:10",{"_index":635,"title":{},"body":{"classes/createOauth2Middleware1561200781531.html":{}}}],["create_oauth2_middleware.ts:5",{"_index":636,"title":{},"body":{"classes/createOauth2Middleware1561200781531.html":{}}}],["create_user_column.ts",{"_index":564,"title":{},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["create_user_column.ts:5",{"_index":639,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["create_user_column.ts:9",{"_index":638,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["createaccountverificationtable1561015030859",{"_index":571,"title":{"classes/createAccountVerificationTable1561015030859.html":{}},"body":{"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{}}}],["createdailybalance",{"_index":197,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["createdailybalance(createdailybalancedto",{"_index":199,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["createdailybalancedto",{"_index":147,"title":{"classes/CreateDailyBalanceDto.html":{}},"body":{"classes/CreateDailyBalanceDto.html":{},"controllers/DailyBalanceController.html":{},"coverage.html":{}}}],["createdailybalanceindex1561539612695",{"_index":583,"title":{"classes/createDailyBalanceIndex1561539612695.html":{}},"body":{"coverage.html":{},"classes/createDailyBalanceIndex1561539612695.html":{}}}],["createdailybalancerelationship1561358492040",{"_index":580,"title":{"classes/createDailyBalanceRelationship1561358492040.html":{}},"body":{"coverage.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["createoauth1560545960045",{"_index":568,"title":{"classes/createOauth1560545960045.html":{}},"body":{"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["createoauth2middleware1561200781531",{"_index":577,"title":{"classes/createOauth2Middleware1561200781531.html":{}},"body":{"coverage.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["createparamdecorator((data",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createusercolumn1560421973676",{"_index":565,"title":{"classes/createUserColumn1560421973676.html":{}},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["credit",{"_index":188,"title":{},"body":{"classes/DailyBalance.html":{},"miscellaneous/enumerations.html":{}}}],["crypto",{"_index":50,"title":{},"body":{"classes/AccountVerification.html":{},"injectables/Oauth2Service.html":{}}}],["crypto.randombytes(16).tostring('hex",{"_index":53,"title":{},"body":{"classes/AccountVerification.html":{}}}],["crypto.randombytes(24).tostring('hex",{"_index":350,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["current_timestamp",{"_index":189,"title":{},"body":{"classes/DailyBalance.html":{},"classes/createOauth1560545960045.html":{}}}],["d).{ts,js",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["daily",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDailyBalanceDto.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"classes/User.html":{},"coverage.html":{}}}],["daily_balance",{"_index":259,"title":{},"body":{"injectables/DailyBalanceService.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["dailybalance",{"_index":170,"title":{"classes/DailyBalance.html":{}},"body":{"classes/DailyBalance.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"classes/User.html":{},"coverage.html":{}}}],["dailybalance.user",{"_index":251,"title":{},"body":{"injectables/DailyBalanceService.html":{},"classes/User.html":{}}}],["dailybalancecontroller",{"_index":193,"title":{"controllers/DailyBalanceController.html":{}},"body":{"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"coverage.html":{}}}],["dailybalancemodule",{"_index":65,"title":{"modules/DailyBalanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules.html":{},"overview.html":{}}}],["dailybalancerepo",{"_index":240,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{}}}],["dailybalances",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"classes/User.html":{}}}],["dailybalanceservice",{"_index":208,"title":{"injectables/DailyBalanceService.html":{}},"body":{"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"coverage.html":{},"overview.html":{}}}],["database",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":172,"title":{},"body":{"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"classes/User.html":{},"classes/createDailyBalanceIndex1561539612695.html":{}}}],["datecreated",{"_index":424,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["datedeleted",{"_index":425,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["datelimit",{"_index":255,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["dateupdated",{"_index":426,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["debit",{"_index":187,"title":{},"body":{"classes/DailyBalance.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":176,"title":{},"body":{"classes/DailyBalance.html":{},"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createOauth1560545960045.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["delete",{"_index":373,"title":{},"body":{"controllers/PasswordController.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":692,"title":{},"body":{"index.html":{}}}],["dev",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":701,"title":{},"body":{"index.html":{}}}],["dir",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["disable",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":537,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["down(queryrunner",{"_index":539,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["drop",{"_index":617,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["dto",{"_index":243,"title":{},"body":{"injectables/DailyBalanceService.html":{},"controllers/UserController.html":{}}}],["dto/create",{"_index":210,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["dto/register",{"_index":470,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/request",{"_index":376,"title":{},"body":{"controllers/PasswordController.html":{}}}],["e.message",{"_index":393,"title":{},"body":{"controllers/PasswordController.html":{}}}],["e2e",{"_index":712,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":684,"title":{},"body":{"index.html":{}}}],["email",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/createUserColumn1560421973676.html":{}}}],["engine=innodb",{"_index":601,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createUserColumn1560421973676.html":{}}}],["entities",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["entity{.ts,.js",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":181,"title":{},"body":{"classes/DailyBalance.html":{}}}],["enumerations",{"_index":673,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["exclude",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":640,"title":{},"body":{"classes/createUserColumn1560421973676.html":{}}}],["expirationdate",{"_index":623,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":440,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["fastify",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":490,"title":{},"body":{"injectables/UserService.html":{}}}],["fk_2d4eff3e8d902988754fde5be03",{"_index":752,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["fk_91e75ed61bb07ebda3912510f24",{"_index":611,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["fk_9949557d0e1b2c19e5344c171e9",{"_index":620,"title":{},"body":{"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["fk_c425901c1f66598550020494008",{"_index":621,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["folder",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foreign",{"_index":612,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["forroutes",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":682,"title":{},"body":{"index.html":{}}}],["function",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":676,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatetoken",{"_index":42,"title":{},"body":{"classes/AccountVerification.html":{},"injectables/Oauth2Service.html":{}}}],["get('/emailverifications",{"_index":463,"title":{},"body":{"controllers/UserController.html":{}}}],["getbydateforloggedinuser",{"_index":236,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["getbydateforloggedinuser(user",{"_index":245,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["getbytoken",{"_index":198,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{}}}],["getbytoken(@accesstoken",{"_index":222,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["getbytoken(accesstoken",{"_index":203,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["getbytoken(token",{"_index":247,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["getconfig",{"_index":561,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getme",{"_index":265,"title":{},"body":{"controllers/MeController.html":{},"injectables/MeService.html":{}}}],["getme(@accesstoken",{"_index":273,"title":{},"body":{"controllers/MeController.html":{}}}],["getme(accesstoken",{"_index":266,"title":{},"body":{"controllers/MeController.html":{}}}],["getme(token",{"_index":282,"title":{},"body":{"injectables/MeService.html":{}}}],["getrepository",{"_index":294,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["getrepository(accesstoken",{"_index":300,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["getting",{"_index":678,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":455,"title":{},"body":{"controllers/UserController.html":{}}}],["grant_type",{"_index":417,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["granttype",{"_index":384,"title":{},"body":{"controllers/PasswordController.html":{}}}],["grow",{"_index":720,"title":{},"body":{"index.html":{}}}],["handlebarsadapter",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["hashedpassword",{"_index":449,"title":{},"body":{"classes/User.html":{}}}],["hashpassword",{"_index":429,"title":{},"body":{"classes/User.html":{}}}],["headers",{"_index":375,"title":{},"body":{"controllers/PasswordController.html":{}}}],["headers.authorization.split",{"_index":381,"title":{},"body":{"controllers/PasswordController.html":{}}}],["heavily",{"_index":689,"title":{},"body":{"index.html":{}}}],["here",{"_index":730,"title":{},"body":{"index.html":{}}}],["host",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":292,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["https://nestjs.com",{"_index":737,"title":{},"body":{"index.html":{}}}],["id",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createUserColumn1560421973676.html":{}}}],["identifier",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["idx_2d4eff3e8d902988754fde5be0",{"_index":750,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["idx_6ed9067942d7537ce359e172ff",{"_index":622,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["idx_7510ce0a84bde51dbff978b4b4",{"_index":627,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["idx_91e75ed61bb07ebda3912510f2",{"_index":606,"title":{},"body":{"classes/createDailyBalanceIndex1561539612695.html":{}}}],["idx_9949557d0e1b2c19e5344c171e",{"_index":637,"title":{},"body":{"classes/createOauth2Middleware1561200781531.html":{}}}],["idx_d6250a4222f475016bba5944e1",{"_index":605,"title":{},"body":{"classes/createDailyBalanceIndex1561539612695.html":{}}}],["implements",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/Oauth2Middleware.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["inject",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":232,"title":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{}},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":233,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":249,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{}}}],["injectrepository(accesstoken",{"_index":348,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["injectrepository(accountverification",{"_index":504,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(client",{"_index":349,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["injectrepository(dailybalance",{"_index":250,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{}}}],["injectrepository(user",{"_index":347,"title":{},"body":{"injectables/Oauth2Service.html":{},"injectables/UserService.html":{}}}],["inspired",{"_index":690,"title":{},"body":{"index.html":{}}}],["install",{"_index":698,"title":{},"body":{"index.html":{}}}],["installation",{"_index":695,"title":{},"body":{"index.html":{}}}],["int",{"_index":597,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["isclientvalid",{"_index":351,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["isdefined",{"_index":161,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["isemail",{"_index":413,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isenum",{"_index":162,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["isenum(balancetype",{"_index":169,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{}}}],["ishastoken",{"_index":323,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["ishastoken(userid",{"_index":340,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["isnotempty",{"_index":164,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["ispasswordmatch",{"_index":354,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["isverified",{"_index":427,"title":{},"body":{"classes/User.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createUserColumn1560421973676.html":{}}}],["join",{"_index":726,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{}}}],["js",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":734,"title":{},"body":{"index.html":{}}}],["key",{"_index":600,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["latin1",{"_index":630,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["latin1_swedish_ci",{"_index":632,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["legend",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":163,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["length(1",{"_index":168,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{}}}],["length(6",{"_index":414,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["license",{"_index":740,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":717,"title":{},"body":{"index.html":{}}}],["logger",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailermodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":494,"title":{},"body":{"injectables/UserService.html":{}}}],["manually",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manytoone",{"_index":186,"title":{},"body":{"classes/DailyBalance.html":{}}}],["manytoone(type",{"_index":190,"title":{},"body":{"classes/DailyBalance.html":{}}}],["manytoone(undefined",{"_index":183,"title":{},"body":{"classes/DailyBalance.html":{}}}],["masalah",{"_index":397,"title":{},"body":{"controllers/PasswordController.html":{}}}],["matching",{"_index":35,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["me.controller",{"_index":278,"title":{},"body":{"modules/MeModule.html":{}}}],["me.service",{"_index":269,"title":{},"body":{"controllers/MeController.html":{},"modules/MeModule.html":{}}}],["me/me.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["meaning",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mecontroller",{"_index":263,"title":{"controllers/MeController.html":{}},"body":{"controllers/MeController.html":{},"modules/MeModule.html":{},"coverage.html":{}}}],["memodule",{"_index":66,"title":{"modules/MeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MeModule.html":{},"modules.html":{},"overview.html":{}}}],["meservice",{"_index":268,"title":{"injectables/MeService.html":{}},"body":{"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":466,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["metadata",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":41,"title":{},"body":{"classes/AccountVerification.html":{},"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["middlewareconsumer",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["migration",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migration/**/*{.ts,.js",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":536,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["migrations",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":672,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":716,"title":{},"body":{"index.html":{}}}],["mode",{"_index":705,"title":{},"body":{"index.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["more",{"_index":729,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":661,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":735,"title":{},"body":{"index.html":{}}}],["name",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["nest",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":739,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":160,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":293,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["nestmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/Oauth2Service.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newaccountcode",{"_index":510,"title":{},"body":{"injectables/UserService.html":{}}}],["newaccountcode.code",{"_index":521,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser",{"_index":506,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":290,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["node.js",{"_index":681,"title":{},"body":{"index.html":{}}}],["npm",{"_index":697,"title":{},"body":{"index.html":{}}}],["null",{"_index":548,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["nullable",{"_index":433,"title":{},"body":{"classes/User.html":{}}}],["number",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["oauth2.service",{"_index":317,"title":{},"body":{"modules/Oauth2Module.html":{},"controllers/PasswordController.html":{}}}],["oauth2/access",{"_index":212,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{}}}],["oauth2/oauth2.middleware",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["oauth2/oauth2.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["oauth2middleware",{"_index":98,"title":{"injectables/Oauth2Middleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/Oauth2Middleware.html":{},"coverage.html":{}}}],["oauth2module",{"_index":67,"title":{"modules/Oauth2Module.html":{}},"body":{"modules/AppModule.html":{},"modules/Oauth2Module.html":{},"modules.html":{},"overview.html":{}}}],["oauth2service",{"_index":313,"title":{"injectables/Oauth2Service.html":{}},"body":{"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"coverage.html":{},"overview.html":{}}}],["object.assign(newuser",{"_index":507,"title":{},"body":{"injectables/UserService.html":{}}}],["object.hasownproperty.bind(query)('date",{"_index":223,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["onetomany",{"_index":447,"title":{},"body":{"classes/User.html":{}}}],["onetomany(type",{"_index":448,"title":{},"body":{"classes/User.html":{}}}],["onetomany(undefined",{"_index":430,"title":{},"body":{"classes/User.html":{}}}],["onetoone",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{}}}],["onetoone(type",{"_index":33,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{}}}],["open",{"_index":718,"title":{},"body":{"index.html":{}}}],["optional",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["options",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["ormconfig",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":744,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":641,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":475,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["password",{"_index":336,"title":{},"body":{"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"classes/createUserColumn1560421973676.html":{},"miscellaneous/variables.html":{}}}],["password.controller",{"_index":316,"title":{},"body":{"modules/Oauth2Module.html":{}}}],["passwordcontroller",{"_index":315,"title":{"controllers/PasswordController.html":{}},"body":{"modules/Oauth2Module.html":{},"controllers/PasswordController.html":{},"coverage.html":{}}}],["passwordgrant",{"_index":363,"title":{},"body":{"controllers/PasswordController.html":{}}}],["passwordgrant(reqtokendto",{"_index":366,"title":{},"body":{"controllers/PasswordController.html":{}}}],["path",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["phone",{"_index":428,"title":{},"body":{"classes/User.html":{},"classes/createUserColumn1560421973676.html":{}}}],["please",{"_index":727,"title":{},"body":{"index.html":{}}}],["port",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":201,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}}}],["prefer",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":196,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{}}}],["primary",{"_index":599,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createUserColumn1560421973676.html":{}}}],["primarygeneratedcolumn",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"classes/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":179,"title":{},"body":{"classes/DailyBalance.html":{}}}],["private",{"_index":217,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":707,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":680,"title":{},"body":{"index.html":{}}}],["project",{"_index":719,"title":{},"body":{"index.html":{}}}],["promise",{"_index":244,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":489,"title":{},"body":{"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["query",{"_index":204,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["query.code",{"_index":528,"title":{},"body":{"injectables/UserService.html":{}}}],["query.date",{"_index":224,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["queryrunner",{"_index":540,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["queryrunner.query(\"alter",{"_index":544,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["queryrunner.query(\"create",{"_index":595,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["queryrunner.query(\"drop",{"_index":602,"title":{},"body":{"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["read",{"_index":728,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":151,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["references",{"_index":613,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["reflect",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":456,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["register(registeruserdto",{"_index":460,"title":{},"body":{"controllers/UserController.html":{}}}],["register(user",{"_index":498,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruserdto",{"_index":405,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["registration",{"_index":476,"title":{},"body":{"controllers/UserController.html":{}}}],["rel_2d4eff3e8d902988754fde5be0",{"_index":751,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["relations",{"_index":302,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":238,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":200,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/Oauth2Middleware.html":{},"miscellaneous/variables.html":{}}}],["req.accesstoken",{"_index":310,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["req.headers.authorization.split",{"_index":297,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["req.raw.accesstoken",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqtokendto",{"_index":369,"title":{},"body":{"controllers/PasswordController.html":{}}}],["reqtokendto.client_secret",{"_index":399,"title":{},"body":{"controllers/PasswordController.html":{}}}],["reqtokendto.grant_type",{"_index":385,"title":{},"body":{"controllers/PasswordController.html":{}}}],["reqtokendto.password",{"_index":401,"title":{},"body":{"controllers/PasswordController.html":{}}}],["requestmethod",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["requesttoken",{"_index":364,"title":{},"body":{"controllers/PasswordController.html":{}}}],["requesttoken(@body",{"_index":383,"title":{},"body":{"controllers/PasswordController.html":{}}}],["requesttoken(reqtokendto",{"_index":370,"title":{},"body":{"controllers/PasswordController.html":{}}}],["requesttokendto",{"_index":367,"title":{"classes/RequestTokenDto.html":{}},"body":{"controllers/PasswordController.html":{},"classes/RequestTokenDto.html":{},"coverage.html":{}}}],["require('./ormconfig",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":288,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"controllers/PasswordController.html":{}}}],["res.code(201).send({token",{"_index":390,"title":{},"body":{"controllers/PasswordController.html":{}}}],["res.code(400).send({error",{"_index":392,"title":{},"body":{"controllers/PasswordController.html":{}}}],["res.code(500).send({error",{"_index":395,"title":{},"body":{"controllers/PasswordController.html":{}}}],["res.end(json.stringify({message",{"_index":309,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["res.setheader('content",{"_index":303,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["res.statuscode",{"_index":305,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["res.statusmessage",{"_index":307,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["reset",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":34,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":36,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":220,"title":{},"body":{"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"classes/AccountVerification.html":{},"modules/AppModule.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["revoke",{"_index":324,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["revoke(token",{"_index":342,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["revoketoken",{"_index":365,"title":{},"body":{"controllers/PasswordController.html":{}}}],["revoketoken(@headers",{"_index":380,"title":{},"body":{"controllers/PasswordController.html":{}}}],["revoketoken(headers",{"_index":372,"title":{},"body":{"controllers/PasswordController.html":{}}}],["rimraf",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":702,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":699,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["savetoken",{"_index":325,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["savetoken(token",{"_index":344,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["scalable",{"_index":685,"title":{},"body":{"index.html":{}}}],["select",{"_index":258,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["sendmail",{"_index":513,"title":{},"body":{"injectables/UserService.html":{}}}],["sendverificationemail",{"_index":491,"title":{},"body":{"injectables/UserService.html":{}}}],["sendverificationemail(user",{"_index":500,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":686,"title":{},"body":{"index.html":{}}}],["serverresponse",{"_index":289,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["set",{"_index":629,"title":{},"body":{"classes/createOauth1560545960045.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":687,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"controllers/MeController.html":{},"modules/MeModule.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"index.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["sponsors",{"_index":722,"title":{},"body":{"index.html":{}}}],["src",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../access",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../daily",{"_index":674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":677,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:39",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["src/daily",{"_index":148,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"modules/DailyBalanceModule.html":{},"injectables/DailyBalanceService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":558,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/me/me.controller.ts",{"_index":264,"title":{},"body":{"controllers/MeController.html":{},"coverage.html":{}}}],["src/me/me.controller.ts:12",{"_index":267,"title":{},"body":{"controllers/MeController.html":{}}}],["src/me/me.module.ts",{"_index":277,"title":{},"body":{"modules/MeModule.html":{}}}],["src/me/me.service.ts",{"_index":279,"title":{},"body":{"injectables/MeService.html":{},"coverage.html":{}}}],["src/me/me.service.ts:13",{"_index":283,"title":{},"body":{"injectables/MeService.html":{}}}],["src/me/me.service.ts:7",{"_index":281,"title":{},"body":{"injectables/MeService.html":{}}}],["src/migration/1560421973676",{"_index":563,"title":{},"body":{"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["src/migration/1560422912373",{"_index":534,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{}}}],["src/migration/1560545960045",{"_index":566,"title":{},"body":{"coverage.html":{},"classes/createOauth1560545960045.html":{}}}],["src/migration/1561015030859",{"_index":569,"title":{},"body":{"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{}}}],["src/migration/1561019799282",{"_index":572,"title":{},"body":{"coverage.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["src/migration/1561200781531",{"_index":575,"title":{},"body":{"coverage.html":{},"classes/createOauth2Middleware1561200781531.html":{}}}],["src/migration/1561358492040",{"_index":578,"title":{},"body":{"coverage.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{}}}],["src/migration/1561539612695",{"_index":581,"title":{},"body":{"coverage.html":{},"classes/createDailyBalanceIndex1561539612695.html":{}}}],["src/oauth2/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/oauth2/client.entity.ts",{"_index":138,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/oauth2/client.entity.ts:10",{"_index":144,"title":{},"body":{"classes/Client.html":{}}}],["src/oauth2/client.entity.ts:13",{"_index":145,"title":{},"body":{"classes/Client.html":{}}}],["src/oauth2/client.entity.ts:7",{"_index":146,"title":{},"body":{"classes/Client.html":{}}}],["src/oauth2/dto/request",{"_index":415,"title":{},"body":{"classes/RequestTokenDto.html":{},"coverage.html":{}}}],["src/oauth2/oauth2.middleware.ts",{"_index":285,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"coverage.html":{}}}],["src/oauth2/oauth2.middleware.ts:8",{"_index":291,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["src/oauth2/oauth2.module.ts",{"_index":314,"title":{},"body":{"modules/Oauth2Module.html":{}}}],["src/oauth2/oauth2.service.ts",{"_index":320,"title":{},"body":{"injectables/Oauth2Service.html":{},"coverage.html":{}}}],["src/oauth2/oauth2.service.ts:11",{"_index":329,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:22",{"_index":339,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:26",{"_index":333,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:31",{"_index":337,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:40",{"_index":345,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:47",{"_index":341,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/oauth2.service.ts:57",{"_index":343,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["src/oauth2/password.controller.ts",{"_index":362,"title":{},"body":{"controllers/PasswordController.html":{},"coverage.html":{}}}],["src/oauth2/password.controller.ts:13",{"_index":374,"title":{},"body":{"controllers/PasswordController.html":{}}}],["src/oauth2/password.controller.ts:19",{"_index":371,"title":{},"body":{"controllers/PasswordController.html":{}}}],["src/oauth2/password.controller.ts:36",{"_index":368,"title":{},"body":{"controllers/PasswordController.html":{}}}],["src/ormconfig.ts",{"_index":588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/account",{"_index":38,"title":{},"body":{"classes/AccountVerification.html":{},"coverage.html":{}}}],["src/user/dto/register",{"_index":406,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":454,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:19",{"_index":458,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":461,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:41",{"_index":464,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.entity.ts",{"_index":423,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:11",{"_index":438,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:14",{"_index":442,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:17",{"_index":437,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:23",{"_index":445,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:26",{"_index":443,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:32",{"_index":441,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:38",{"_index":434,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:44",{"_index":436,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:50",{"_index":435,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:53",{"_index":432,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.entity.ts:56",{"_index":446,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.module.ts",{"_index":484,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":488,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":495,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":503,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":497,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":499,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:31",{"_index":501,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:54",{"_index":502,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":703,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":706,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["start:prod",{"_index":708,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":679,"title":{"index.html":{}},"body":{}}],["starter",{"_index":694,"title":{},"body":{"index.html":{}}}],["statements",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":731,"title":{},"body":{"index.html":{}}}],["strict",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{}}}],["subject",{"_index":517,"title":{},"body":{"injectables/UserService.html":{}}}],["success",{"_index":532,"title":{},"body":{"injectables/UserService.html":{}}}],["support",{"_index":715,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":742,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":386,"title":{},"body":{"controllers/PasswordController.html":{}}}],["synchronize",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":516,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":545,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["templates",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":709,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":714,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":713,"title":{},"body":{"index.html":{}}}],["tests",{"_index":711,"title":{},"body":{"index.html":{}}}],["text",{"_index":444,"title":{},"body":{"classes/User.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{}}}],["thanks",{"_index":721,"title":{},"body":{"index.html":{}}}],["then((response",{"_index":523,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accesstokenrepo.delete",{"_index":361,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.accesstokenrepo.findone({user",{"_index":359,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.accesstokenrepo.save(accesstoken",{"_index":358,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.accountrepository.delete(account",{"_index":531,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountrepository.findoneorfail",{"_index":527,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountrepository.save(account",{"_index":511,"title":{},"body":{"injectables/UserService.html":{}}}],["this.clientrepo.findoneorfail({client_id",{"_index":352,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.code",{"_index":52,"title":{},"body":{"classes/AccountVerification.html":{}}}],["this.dailybalancerepo",{"_index":257,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["this.dailybalancerepo.find",{"_index":253,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{}}}],["this.dailybalancerepo.save(dailybalance",{"_index":252,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["this.dailybalanceservice.create(createdailybalancedto",{"_index":221,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["this.dailybalanceservice.getbydateforloggedinuser(user",{"_index":225,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["this.dailybalanceservice.getbytoken(accesstoken",{"_index":226,"title":{},"body":{"controllers/DailyBalanceController.html":{}}}],["this.datecreated",{"_index":453,"title":{},"body":{"classes/User.html":{}}}],["this.mailerservice",{"_index":512,"title":{},"body":{"injectables/UserService.html":{}}}],["this.meservice.getme(accesstoken",{"_index":274,"title":{},"body":{"controllers/MeController.html":{}}}],["this.oauth2service.checkclient(reqtokendto.client_id",{"_index":398,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.checkuser(reqtokendto.username",{"_index":400,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.generatetoken",{"_index":403,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.ishastoken(user.id",{"_index":402,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.revoke(token",{"_index":382,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.oauth2service.savetoken(token",{"_index":404,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.password",{"_index":452,"title":{},"body":{"classes/User.html":{}}}],["this.passwordgrant(reqtokendto",{"_index":389,"title":{},"body":{"controllers/PasswordController.html":{}}}],["this.userrepo.findoneorfail({email",{"_index":353,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["this.userrepository.find",{"_index":505,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(account.user",{"_index":530,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":508,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findall",{"_index":474,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(registeruserdto",{"_index":478,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.sendverificationemail(user",{"_index":479,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.verifyemail(query",{"_index":481,"title":{},"body":{"controllers/UserController.html":{}}}],["timestamp",{"_index":175,"title":{},"body":{"classes/DailyBalance.html":{},"classes/User.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{}}}],["tinyint",{"_index":547,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createOauth1560545960045.html":{},"classes/createUserColumn1560421973676.html":{}}}],["token",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"controllers/UserController.html":{},"classes/createOauth1560545960045.html":{}}}],["token.access_token",{"_index":360,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["token.decorator",{"_index":213,"title":{},"body":{"controllers/DailyBalanceController.html":{},"controllers/MeController.html":{}}}],["token.decorator.ts",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.dto",{"_index":377,"title":{},"body":{"controllers/PasswordController.html":{}}}],["token.dto.ts",{"_index":416,"title":{},"body":{"classes/RequestTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:12",{"_index":421,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.dto.ts:15",{"_index":418,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.dto.ts:18",{"_index":419,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.dto.ts:6",{"_index":420,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.dto.ts:9",{"_index":422,"title":{},"body":{"classes/RequestTokenDto.html":{}}}],["token.entity",{"_index":296,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{}}}],["token.entity.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["token.entity.ts:11",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.entity.ts:15",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.entity.ts:8",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.user",{"_index":254,"title":{},"body":{"injectables/DailyBalanceService.html":{}}}],["touch",{"_index":732,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"classes/Client.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["trusted",{"_index":624,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["try",{"_index":388,"title":{},"body":{"controllers/PasswordController.html":{}}}],["ts",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":738,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/Client.html":{},"classes/CreateDailyBalanceDto.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/RegisterUserDto.html":{},"classes/RequestTokenDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/Client.html":{},"classes/DailyBalance.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"injectables/Oauth2Service.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"dependencies.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["typeormmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([accountverification",{"_index":487,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([dailybalance",{"_index":231,"title":{},"body":{"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":319,"title":{},"body":{"modules/Oauth2Module.html":{}}}],["typeormmodule.forroot(ormconfig",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["types/bcrypt",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":693,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":308,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["undefined",{"_index":431,"title":{},"body":{"classes/User.html":{}}}],["undefined)@index",{"_index":184,"title":{},"body":{"classes/DailyBalance.html":{}}}],["undefined})@index",{"_index":177,"title":{},"body":{"classes/DailyBalance.html":{}}}],["unique",{"_index":143,"title":{},"body":{"classes/Client.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["unit",{"_index":710,"title":{},"body":{"index.html":{}}}],["up",{"_index":538,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["up(queryrunner",{"_index":542,"title":{},"body":{"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"classes/createAccountVerificationTable1561015030859.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/createUserColumn1560421973676.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["update",{"_index":616,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["use",{"_index":286,"title":{},"body":{"injectables/Oauth2Middleware.html":{},"miscellaneous/variables.html":{}}}],["use(req",{"_index":287,"title":{},"body":{"injectables/Oauth2Middleware.html":{}}}],["usefactory",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{}},"body":{"classes/AccessToken.html":{},"classes/AccountVerification.html":{},"classes/DailyBalance.html":{},"controllers/DailyBalanceController.html":{},"injectables/DailyBalanceService.html":{},"injectables/MeService.html":{},"injectables/Oauth2Middleware.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{},"controllers/PasswordController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/changeDefaultValueOnIsVerified1560422912373.html":{},"coverage.html":{},"classes/createUserColumn1560421973676.html":{}}}],["user.controller",{"_index":485,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dailybalances",{"_index":191,"title":{},"body":{"classes/DailyBalance.html":{}}}],["user.dto",{"_index":471,"title":{},"body":{"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":407,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":410,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:14",{"_index":409,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:18",{"_index":412,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.email",{"_index":514,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":51,"title":{},"body":{"classes/AccountVerification.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":262,"title":{},"body":{"injectables/DailyBalanceService.html":{},"controllers/PasswordController.html":{}}}],["user.name",{"_index":522,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":356,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["user.service",{"_index":469,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.controller",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.entity",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{},"classes/DailyBalance.html":{},"modules/Oauth2Module.html":{},"injectables/Oauth2Service.html":{}}}],["user/user.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["user_for_account_verification.ts",{"_index":573,"title":{},"body":{"coverage.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["user_for_account_verification.ts:12",{"_index":748,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["user_for_account_verification.ts:5",{"_index":749,"title":{},"body":{"classes/userForAccountVerification1561019799282.html":{}}}],["user_id",{"_index":625,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["user`(`id",{"_index":614,"title":{},"body":{"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["usercontroller",{"_index":92,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userforaccountverification1561019799282",{"_index":574,"title":{"classes/userForAccountVerification1561019799282.html":{}},"body":{"coverage.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["userid",{"_index":260,"title":{},"body":{"injectables/DailyBalanceService.html":{},"injectables/Oauth2Service.html":{},"classes/createDailyBalanceIndex1561539612695.html":{},"classes/createDailyBalanceRelationship1561358492040.html":{},"classes/createOauth1560545960045.html":{},"classes/createOauth2Middleware1561200781531.html":{},"classes/userForAccountVerification1561019799282.html":{}}}],["usermodule",{"_index":68,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":338,"title":{},"body":{"injectables/Oauth2Service.html":{},"classes/RequestTokenDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usernameall",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepo",{"_index":330,"title":{},"body":{"injectables/Oauth2Service.html":{}}}],["userrepository",{"_index":496,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{}}}],["userservice",{"_index":468,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":165,"title":{},"body":{"classes/CreateDailyBalanceDto.html":{},"classes/RegisterUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":675,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":142,"title":{},"body":{"classes/Client.html":{}}}],["varchar(200",{"_index":633,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["varchar(255",{"_index":626,"title":{},"body":{"classes/createOauth1560545960045.html":{}}}],["variable",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":753,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":467,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verification.entity",{"_index":486,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["verification.entity.ts",{"_index":39,"title":{},"body":{"classes/AccountVerification.html":{},"coverage.html":{}}}],["verification.entity.ts:10",{"_index":44,"title":{},"body":{"classes/AccountVerification.html":{}}}],["verification.entity.ts:13",{"_index":43,"title":{},"body":{"classes/AccountVerification.html":{}}}],["verification.entity.ts:17",{"_index":45,"title":{},"body":{"classes/AccountVerification.html":{}}}],["verification.entity.ts:20",{"_index":47,"title":{},"body":{"classes/AccountVerification.html":{}}}],["verifikasikan",{"_index":518,"title":{},"body":{"injectables/UserService.html":{}}}],["verify",{"_index":465,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyemail",{"_index":457,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyemail(@query",{"_index":480,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyemail(query",{"_index":462,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["void",{"_index":49,"title":{},"body":{"classes/AccountVerification.html":{},"modules/AppModule.html":{},"classes/User.html":{}}}],["watch",{"_index":704,"title":{},"body":{"index.html":{}}}],["website",{"_index":736,"title":{},"body":{"index.html":{}}}],["yosio",{"_index":515,"title":{},"body":{"injectables/UserService.html":{}}}],["you'd",{"_index":725,"title":{},"body":{"index.html":{}}}],["yuso_dev",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/DailyBalanceModule.html":{},"modules/MeModule.html":{},"modules/Oauth2Module.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/access-token.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/access-token.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/access-token.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/access-token.entity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Column, Entity, OneToOne, JoinColumn } from 'typeorm';\nimport { User } from '../user/user.entity';\n\n@Entity()\nexport class AccessToken {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('text')\n  access_token: string;\n\n  @OneToOne(type => User)\n  @JoinColumn()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountVerification.html":{"url":"classes/AccountVerification.html","title":"class - AccountVerification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountVerification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/account-verification.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/account-verification.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/account-verification.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/account-verification.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateToken()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/user/account-verification.entity.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport {\n  BeforeInsert, Entity, Column,\n  PrimaryGeneratedColumn, OneToOne, JoinColumn } from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity()\nexport class AccountVerification {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('text')\n  code: string;\n\n  @OneToOne(type => User)\n  @JoinColumn()\n  user: User;\n\n  @BeforeInsert()\n  generateToken() {\n    this.code = crypto.randomBytes(16).toString('hex');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDailyBalanceModule\n\nDailyBalanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDailyBalanceModule->AppModule\n\n\n\n\n\nMeModule\n\nMeModule\n\nAppModule -->\n\nMeModule->AppModule\n\n\n\n\n\nOauth2Module\n\nOauth2Module\n\nAppModule -->\n\nOauth2Module->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DailyBalanceModule\n                        \n                        \n                            MeModule\n                        \n                        \n                            Oauth2Module\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ConfigModule } from 'nestjs-config';\nimport { Module, NestModule, RequestMethod, MiddlewareConsumer } from '@nestjs/common';\nimport { HandlebarsAdapter, MailerModule } from '@nest-modules/mailer';\nimport { UserController } from './user/user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { Oauth2Module } from './oauth2/oauth2.module';\nimport { Oauth2Middleware } from './oauth2/oauth2.middleware';\nimport { ConfigService } from 'nestjs-config';\nimport { DailyBalanceModule } from './daily-balance/daily-balance.module';\nimport { MeModule } from './me/me.module';\nimport * as path from 'path';\nimport ormconfig = require('./ormconfig');\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(ormconfig),\n    UserModule,\n    Oauth2Module,\n    ConfigModule.load(path.resolve(__dirname, 'config', '**/!(*.d).{ts,js}')),\n    MailerModule.forRootAsync({\n      useFactory: (config: ConfigService) => ({\n        transport: config.get('app.mailer'),\n        template: {\n          dir: __dirname + '/email-templates',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true\n          }\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    DailyBalanceModule,\n    MeModule\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(Oauth2Middleware)\n      .exclude({ path: 'token', method: RequestMethod.POST })\n      .forRoutes(\n        { path: 'users', method: RequestMethod.GET },\n        { path: 'dailyBalances', method: RequestMethod.ALL },\n        { path: 'me', method: RequestMethod.GET },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/client.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client_id\n                            \n                            \n                                client_secret\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/client.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client_secret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/client.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/client.entity.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Column, Entity } from 'typeorm';\n\n@Entity()\nexport class Client {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({type: 'varchar', unique: true})\n  client_id: string;\n\n  @Column('text')\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDailyBalanceDto.html":{"url":"classes/CreateDailyBalanceDto.html","title":"class - CreateDailyBalanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDailyBalanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/daily-balance/dto/create-daily-balance.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                account\n                            \n                            \n                                    Readonly\n                                amount\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsDefined()@IsNotEmpty()@Length(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/dto/create-daily-balance.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsDefined()@IsNotEmpty()@Length(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/dto/create-daily-balance.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsEnum(BalanceType)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/dto/create-daily-balance.dto.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { IsDefined, IsEnum, Length, IsNotEmpty } from 'class-validator';\nimport { BalanceType } from '../daily-balance.entity';\n\nexport class CreateDailyBalanceDto {\n\n  @ApiModelProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @Length(1)\n  readonly account: string;\n\n  @ApiModelProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @Length(1)\n  readonly amount: string;\n\n  @ApiModelProperty()\n  @IsEnum(BalanceType)\n  readonly type: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DailyBalance.html":{"url":"classes/DailyBalance.html","title":"class - DailyBalance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DailyBalance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/daily-balance/daily-balance.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                amount\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined})@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BalanceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: BalanceType})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/daily-balance/daily-balance.entity.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, ManyToOne, Index } from 'typeorm';\nimport { User } from '../user/user.entity';\n\nexport enum BalanceType {\n  DEBIT = 'debit',\n  CREDIT = 'credit'\n}\n\n@Entity()\nexport class DailyBalance {\n\n  @PrimaryGeneratedColumn('uuid')\n  id: number;\n\n  @Column('text')\n  account: string;\n\n  @Column('text')\n  amount: string;\n\n  @Column({\n    type: 'enum',\n    enum: BalanceType\n  })\n  type: BalanceType;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP'})\n  @Index()\n  date: Date;\n\n  @ManyToOne(type => User, user => user.dailyBalances)\n  @Index()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DailyBalanceController.html":{"url":"controllers/DailyBalanceController.html","title":"controller - DailyBalanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DailyBalanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/daily-balance/daily-balance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dailyBalances\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDailyBalance\n                            \n                            \n                                getByToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createDailyBalance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDailyBalance(createDailyBalanceDto: CreateDailyBalanceDto, req, accessToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/daily-balance/daily-balance.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDailyBalanceDto\n                                    \n                                                CreateDailyBalanceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accessToken\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetByToken(accessToken, query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/daily-balance/daily-balance.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Req, Get, Query } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { DailyBalanceService } from './daily-balance.service';\nimport { CreateDailyBalanceDto } from './dto/create-daily-balance.dto';\nimport { AccessToken } from '../oauth2/access-token.decorator';\n\n@ApiUseTags('dailyBalances')\n@Controller('dailyBalances')\nexport class DailyBalanceController {\n\n  constructor(\n    private readonly dailyBalanceService: DailyBalanceService\n  ) {}\n\n  @Post()\n  createDailyBalance(\n    @Body() createDailyBalanceDto: CreateDailyBalanceDto,\n    @Req() req,\n    @AccessToken() accessToken,\n  ) {\n    const user = accessToken.user;\n    return this.dailyBalanceService.create(createDailyBalanceDto, user);\n  }\n\n  @Get()\n  getByToken(@AccessToken() accessToken, @Query() query) {\n    if (Object.hasOwnProperty.bind(query)('date')) {\n      const user = accessToken.user;\n      const date = query.date;\n      return this.dailyBalanceService.getByDateForLoggedInUser(user, date);\n    }\n    return this.dailyBalanceService.getByToken(accessToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DailyBalanceModule.html":{"url":"modules/DailyBalanceModule.html","title":"module - DailyBalanceModule","body":"\n                   \n\n\n\n\n    Modules\n    DailyBalanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DailyBalanceModule\n\n\n\ncluster_DailyBalanceModule_providers\n\n\n\n\nDailyBalanceService\n\nDailyBalanceService\n\n\n\nDailyBalanceModule\n\nDailyBalanceModule\n\nDailyBalanceModule -->\n\nDailyBalanceService->DailyBalanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/daily-balance/daily-balance.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DailyBalanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DailyBalanceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DailyBalanceController } from './daily-balance.controller';\nimport { DailyBalanceService } from './daily-balance.service';\nimport { DailyBalance } from './daily-balance.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DailyBalance])],\n  controllers: [DailyBalanceController],\n  providers: [DailyBalanceService]\n})\nexport class DailyBalanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DailyBalanceService.html":{"url":"injectables/DailyBalanceService.html","title":"injectable - DailyBalanceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DailyBalanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/daily-balance/daily-balance.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getByDateForLoggedInUser\n                            \n                            \n                                getByToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dailyBalanceRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/daily-balance/daily-balance.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dailyBalanceRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/daily-balance/daily-balance.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByDateForLoggedInUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetByDateForLoggedInUser(user, date)\n                \n            \n\n\n            \n                \n                    Defined in src/daily-balance/daily-balance.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetByToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/daily-balance/daily-balance.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { DailyBalance } from './daily-balance.entity';\n\n@Injectable()\nexport class DailyBalanceService {\n\n  constructor(\n    @InjectRepository(DailyBalance)\n    private readonly dailyBalanceRepo: Repository\n  ) {}\n\n  create(dto, user): Promise {\n    const dailyBalance: DailyBalance = dto;\n    dailyBalance.user = user;\n    return this.dailyBalanceRepo.save(dailyBalance);\n  }\n\n  getByToken(token) {\n    return this.dailyBalanceRepo.find({ user: token.user });\n  }\n\n  getByDateForLoggedInUser(user, date) {\n    const dateLimit = `${date} 23:59:59.9`;\n\n    return this.dailyBalanceRepo\n      .query(\n        'SELECT * FROM daily_balance WHERE userId = ? AND `date` BETWEEN ? AND ?',\n        [user.id, date, dateLimit]\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MeController.html":{"url":"controllers/MeController.html","title":"controller - MeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/me/me.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                me\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMe\n                        \n                        \n                    \n                \n            \n            \n                \ngetMe(accessToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/me/me.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { AccessToken } from '../oauth2/access-token.decorator';\nimport { MeService } from './me.service';\n\n@ApiUseTags('me')\n@Controller('me')\nexport class MeController {\n  constructor(private readonly meService: MeService) {}\n\n  @Get()\n  getMe(@AccessToken() accessToken) {\n    return this.meService.getMe(accessToken);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeModule.html":{"url":"modules/MeModule.html","title":"module - MeModule","body":"\n                   \n\n\n\n\n    Modules\n    MeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeModule\n\n\n\ncluster_MeModule_providers\n\n\n\n\nMeService\n\nMeService\n\n\n\nMeModule\n\nMeModule\n\nMeModule -->\n\nMeService->MeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/me/me.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MeController } from './me.controller';\nimport { MeService } from './me.service';\nimport { DailyBalance } from '../daily-balance/daily-balance.entity'\n\n@Module({\n  imports: [TypeOrmModule.forFeature([DailyBalance])],\n  controllers: [MeController],\n  providers: [MeService]\n})\nexport class MeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeService.html":{"url":"injectables/MeService.html","title":"injectable - MeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/me/me.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dailyBalanceRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/me/me.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dailyBalanceRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(token)\n                \n            \n\n\n            \n                \n                    Defined in src/me/me.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { DailyBalance } from '../daily-balance/daily-balance.entity'\n\n@Injectable()\nexport class MeService {\n\n  constructor(\n    @InjectRepository(DailyBalance)\n    private readonly dailyBalanceRepo: Repository) {}\n\n  async getMe(token) {\n    const { accessToken, user } = token;\n    const dailyBalance = await this.dailyBalanceRepo.find({ user: user});\n    return { accessToken, user, dailyBalance };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Oauth2Middleware.html":{"url":"injectables/Oauth2Middleware.html","title":"injectable - Oauth2Middleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Oauth2Middleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/oauth2.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req, res: ServerResponse, next)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.middleware.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            ServerResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ServerResponse } from 'http';\nimport { Injectable, NestMiddleware } from '@nestjs/common';\nimport { getRepository } from 'typeorm';\nimport { AccessToken } from './access-token.entity';\n\n@Injectable()\nexport class Oauth2Middleware implements NestMiddleware {\n  async use(req, res: ServerResponse, next) {\n    const token = req.headers.authorization.split(' ')[1];\n    const accRepo = getRepository(AccessToken);\n    const accessToken = await accRepo.findOne({access_token: token}, {relations: ['user']});\n\n    if (!accessToken) {\n      res.setHeader('Content-Type', 'application/json');\n      res.statusCode = 401;\n      res.statusMessage = 'Unauthorized';\n      res.end(JSON.stringify({message: 'Unauthorized.'}));\n    }\n\n    req.accessToken = accessToken;\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Oauth2Module.html":{"url":"modules/Oauth2Module.html","title":"module - Oauth2Module","body":"\n                   \n\n\n\n\n    Modules\n    Oauth2Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Oauth2Module\n\n\n\ncluster_Oauth2Module_providers\n\n\n\n\nOauth2Service\n\nOauth2Service\n\n\n\nOauth2Module\n\nOauth2Module\n\nOauth2Module -->\n\nOauth2Service->Oauth2Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/oauth2/oauth2.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Oauth2Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswordController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { PasswordController } from './password.controller';\nimport { Oauth2Service } from './oauth2.service';\n\nimport { AccessToken } from './access-token.entity';\nimport { User } from '../user/user.entity';\nimport { Client } from './client.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, AccessToken, Client])],\n  controllers: [PasswordController],\n  providers: [Oauth2Service]\n})\nexport class Oauth2Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Oauth2Service.html":{"url":"injectables/Oauth2Service.html","title":"injectable - Oauth2Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Oauth2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/oauth2.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkClient\n                            \n                            \n                                    Async\n                                checkUser\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                isHasToken\n                            \n                            \n                                    Async\n                                revoke\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository, accessTokenRepo: Repository, clientRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/oauth2/oauth2.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkClient(clientId, clientSecret)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientSecret\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUser(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken()\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isHasToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isHasToken(userId)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            revoke\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revoke(token)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(token, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/oauth2.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport * as bcrypt from 'bcrypt';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AccessToken } from './access-token.entity';\nimport { Client } from './client.entity';\nimport { User } from '../user/user.entity';\n\n@Injectable()\nexport class Oauth2Service {\n\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepo: Repository,\n    @InjectRepository(AccessToken)\n    private readonly accessTokenRepo: Repository,\n    @InjectRepository(Client)\n    private readonly clientRepo: Repository,\n  ) {}\n\n  async generateToken() {\n    return crypto.randomBytes(24).toString('hex');\n  }\n\n  async checkClient(clientId, clientSecret) {\n    const isClientValid = await this.clientRepo.findOneOrFail({client_id: clientId, client_secret: clientSecret});\n    return isClientValid;\n  }\n\n  async checkUser(username, password) {\n    const user = await this.userRepo.findOneOrFail({email: username});\n    const isPasswordMatch = bcrypt.compareSync(password, user.password);\n\n    if (isPasswordMatch) {\n      return user;\n    }\n  }\n\n  async saveToken(token, userId) {\n    const accessToken = new AccessToken();\n    accessToken.access_token = token;\n    accessToken.user = userId;\n    await this.accessTokenRepo.save(accessToken);\n  }\n\n  async isHasToken(userId) {\n    const token = await this.accessTokenRepo.findOne({user: userId});\n\n    if (token) {\n      return token.access_token;\n    }\n\n    return token;\n  }\n\n  async revoke(token) {\n    return await this.accessTokenRepo.delete({ access_token: token });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswordController.html":{"url":"controllers/PasswordController.html","title":"controller - PasswordController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/password.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                token\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                passwordGrant\n                            \n                            \n                                    Async\n                                requestToken\n                            \n                            \n                                    Async\n                                revokeToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordGrant\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordGrant(reqTokenDto: RequestTokenDto, res)\n                \n            \n\n\n            \n                \n                    Defined in src/oauth2/password.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqTokenDto\n                                    \n                                                RequestTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            requestToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    requestToken(reqTokenDto: RequestTokenDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/oauth2/password.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqTokenDto\n                                    \n                                                RequestTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            revokeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revokeToken(headers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/oauth2/password.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Delete, Body, Res, Headers } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { RequestTokenDto } from './dto/request-token.dto';\nimport { Oauth2Service } from './oauth2.service';\n\n@ApiUseTags('token')\n@Controller('token')\nexport class PasswordController {\n\n  constructor(private readonly oauth2Service: Oauth2Service) {}\n\n  @Delete()\n  async revokeToken(@Headers() headers) {\n    const token = headers.authorization.split(' ')[1];\n    return await this.oauth2Service.revoke(token);\n  }\n\n  @Post()\n  async requestToken(@Body() reqTokenDto: RequestTokenDto, @Res() res) {\n    const grantType = reqTokenDto.grant_type;\n\n    switch (grantType) {\n      case 'password':\n        try{\n          const token = await this.passwordGrant(reqTokenDto, res);\n          res.code(201).send({token});\n        } catch(e) {\n          res.code(400).send({error: e.message});\n        }\n        break;\n    }\n\n    res.code(500).send({error: 'Ada masalah.'});\n  }\n\n  async passwordGrant(reqTokenDto: RequestTokenDto, res) {\n    const client = await this.oauth2Service.checkClient(reqTokenDto.client_id, reqTokenDto.client_secret);\n    const user = await this.oauth2Service.checkUser(reqTokenDto.username, reqTokenDto.password);\n    let token = await this.oauth2Service.isHasToken(user.id);\n\n    if ((client && user) && !token) {\n      token = await this.oauth2Service.generateToken();\n      await this.oauth2Service.saveToken(token, user.id);\n    }\n\n    return token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsDefined()@IsNotEmpty()@Length(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@Length(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/register-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\nimport { IsDefined, IsEmail, Length, IsNotEmpty } from 'class-validator';\n\nexport class RegisterUserDto {\n\n  @ApiModelProperty()\n  @IsDefined()\n  @IsNotEmpty()\n  @Length(1)\n  readonly name!: string;\n\n  @ApiModelProperty()\n  @IsEmail()\n  readonly email!: string;\n\n  @ApiModelProperty()\n  @Length(6)\n  readonly password!: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestTokenDto.html":{"url":"classes/RequestTokenDto.html","title":"class - RequestTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth2/dto/request-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                client_id\n                            \n                            \n                                    Readonly\n                                client_secret\n                            \n                            \n                                    Readonly\n                                grant_type\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            client_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            client_secret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            grant_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/oauth2/dto/request-token.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from '@nestjs/swagger';\n\nexport class RequestTokenDto {\n\n  @ApiModelProperty()\n  readonly grant_type: string;\n\n  @ApiModelProperty()\n  readonly username: string;\n\n  @ApiModelProperty()\n  readonly password: string;\n\n  @ApiModelProperty()\n  readonly client_id: string;\n\n  @ApiModelProperty()\n  readonly client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dailyBalances\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateDeleted\n                            \n                            \n                                    Optional\n                                dateUpdated\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isVerified\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dailyBalances\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DailyBalance[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \nhashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/user/user.entity.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport {\n  BeforeInsert, Entity,\n  Column, PrimaryGeneratedColumn, OneToMany\n} from 'typeorm';\nimport { DailyBalance } from '../daily-balance/daily-balance.entity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('text')\n  name: string;\n\n  @Column('text')\n  email: string;\n\n  @Column({\n    type: 'text',\n    nullable: true\n  })\n  phone: string;\n\n  @Column('text')\n  password: string;\n\n  @Column({\n    type: 'boolean',\n    default: false\n  })\n  isVerified: boolean;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateCreated: Date;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateUpdated?: Date;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true\n  })\n  dateDeleted: Date;\n\n  @OneToMany(type => DailyBalance, dailyBalance => dailyBalance.user)\n  dailyBalances: DailyBalance[];\n\n  @BeforeInsert()\n  hashPassword() {\n    const hashedPassword = bcrypt.hashSync(this.password, 10);\n    this.password = hashedPassword;\n\n    this.dateCreated = new Date();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:19\n                \n            \n\n\n            \n                \n                    Get users.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the array of User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n                    Register a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmail(query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/emailVerifications')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:41\n                \n            \n\n\n            \n                \n                    verify user email.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        the message for verification\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Query } from '@nestjs/common';\nimport { ApiUseTags } from '@nestjs/swagger';\nimport { UserService } from './user.service';\nimport { RegisterUserDto } from './dto/register-user.dto';\n\n@ApiUseTags('users')\n@Controller('users')\nexport class UserController {\n\n  constructor(\n    private readonly userService: UserService,\n  ) {}\n\n  /**\n   * Get users.\n   * @returns the array of User\n   */\n  @Get()\n  getUsers() {\n    return this.userService.findAll();\n  }\n\n  /**\n   * Register a user.\n   * @param {registerUserDto} dto for user registration\n   * @returns the user\n   */\n  @Post()\n  async register(@Body() registerUserDto: RegisterUserDto) {\n    const user = await this.userService.register(registerUserDto);\n    this.userService.sendVerificationEmail(user);\n    return user;\n  }\n\n  /**\n   * verify user email.\n   * @param {Query} the email token in query\n   * @returns the message for verification\n   */\n  @Get('/emailVerifications')\n  async verifyEmail(@Query() query) {\n    return this.userService.verifyEmail(query);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { AccountVerification } from './account-verification.entity';\nimport { User } from './user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountVerification, User])],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                register\n                            \n                            \n                                    Async\n                                sendVerificationEmail\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, accountRepository: Repository, mailerService: MailerService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendVerificationEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendVerificationEmail(user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmail(query)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { MailerService } from '@nest-modules/mailer';\nimport { ConfigService } from 'nestjs-config';\nimport { User } from './user.entity';\nimport { AccountVerification } from './account-verification.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @InjectRepository(AccountVerification)\n    private readonly accountRepository: Repository,\n    private readonly mailerService: MailerService,\n    public config: ConfigService\n  ) {}\n\n  findAll(): Promise {\n    return this.userRepository.find();\n  }\n\n  register(user): Promise {\n    const newUser = new User();\n    Object.assign(newUser, user);\n\n    return this.userRepository.save(newUser);\n  }\n\n  async sendVerificationEmail(user) {\n\n    const account = new AccountVerification();\n    account.user = user;\n    const newAccountCode = await this.accountRepository.save(account);\n\n    return this.mailerService\n      .sendMail({\n        to: user.email,\n        from: 'yosio system ',\n        subject: 'Verifikasikan email Anda',\n        template: 'account-verification',\n        context: {\n          code: newAccountCode.code,\n          username: user.name,\n        }\n      }).then((response) => {\n        console.log(response);\n      }).catch((errors) => {\n        console.log(errors);\n      })\n  }\n\n  async verifyEmail(query) {\n    const account = await this.accountRepository.findOneOrFail({ code: query.code }, { relations: ['user'] });\n    account.user.isVerified = !account.user.isVerified;\n    this.userRepository.save(account.user);\n    this.accountRepository.delete(account);\n    return {message: 'success'};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/changeDefaultValueOnIsVerified1560422912373.html":{"url":"classes/changeDefaultValueOnIsVerified1560422912373.html","title":"class - changeDefaultValueOnIsVerified1560422912373","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  changeDefaultValueOnIsVerified1560422912373\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1560422912373-change_default_value_on_is_verified.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560422912373-change_default_value_on_is_verified.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560422912373-change_default_value_on_is_verified.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class changeDefaultValueOnIsVerified1560422912373 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `user` CHANGE `isVerified` `isVerified` tinyint NOT NULL DEFAULT 0\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `user` CHANGE `isVerified` `isVerified` tinyint NOT NULL\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/daily-balance/daily-balance.controller.ts\n            \n            controller\n            DailyBalanceController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/daily-balance/daily-balance.entity.ts\n            \n            class\n            DailyBalance\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/daily-balance/daily-balance.service.ts\n            \n            injectable\n            DailyBalanceService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/daily-balance/dto/create-daily-balance.dto.ts\n            \n            class\n            CreateDailyBalanceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            getConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/me/me.controller.ts\n            \n            controller\n            MeController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/me/me.service.ts\n            \n            injectable\n            MeService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1560421973676-create_user_column.ts\n            \n            class\n            createUserColumn1560421973676\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1560422912373-change_default_value_on_is_verified.ts\n            \n            class\n            changeDefaultValueOnIsVerified1560422912373\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1560545960045-create_oauth.ts\n            \n            class\n            createOauth1560545960045\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561015030859-create_account_verification_table.ts\n            \n            class\n            createAccountVerificationTable1561015030859\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561019799282-user_for_account_verification.ts\n            \n            class\n            userForAccountVerification1561019799282\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561200781531-create_oauth2_middleware.ts\n            \n            class\n            createOauth2Middleware1561200781531\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561358492040-create_daily_balance_relationship.ts\n            \n            class\n            createDailyBalanceRelationship1561358492040\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migration/1561539612695-create_daily_balance_index.ts\n            \n            class\n            createDailyBalanceIndex1561539612695\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/oauth2/access-token.decorator.ts\n            \n            variable\n            AccessToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/oauth2/access-token.entity.ts\n            \n            class\n            AccessToken\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/oauth2/client.entity.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/oauth2/dto/request-token.dto.ts\n            \n            class\n            RequestTokenDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/oauth2/oauth2.middleware.ts\n            \n            injectable\n            Oauth2Middleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/oauth2/oauth2.service.ts\n            \n            injectable\n            Oauth2Service\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/oauth2/password.controller.ts\n            \n            controller\n            PasswordController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ormconfig.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/account-verification.entity.ts\n            \n            class\n            AccountVerification\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createAccountVerificationTable1561015030859.html":{"url":"classes/createAccountVerificationTable1561015030859.html","title":"class - createAccountVerificationTable1561015030859","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createAccountVerificationTable1561015030859\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561015030859-create_account_verification_table.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561015030859-create_account_verification_table.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561015030859-create_account_verification_table.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createAccountVerificationTable1561015030859 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE TABLE `account_verification` (`id` int NOT NULL AUTO_INCREMENT, `code` text NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP TABLE `account_verification`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createDailyBalanceIndex1561539612695.html":{"url":"classes/createDailyBalanceIndex1561539612695.html","title":"class - createDailyBalanceIndex1561539612695","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createDailyBalanceIndex1561539612695\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561539612695-create_daily_balance_index.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561539612695-create_daily_balance_index.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561539612695-create_daily_balance_index.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createDailyBalanceIndex1561539612695 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE INDEX `IDX_d6250a4222f475016bba5944e1` ON `daily_balance` (`date`)\");\n        await queryRunner.query(\"CREATE INDEX `IDX_91e75ed61bb07ebda3912510f2` ON `daily_balance` (`userId`)\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP INDEX `IDX_91e75ed61bb07ebda3912510f2` ON `daily_balance`\");\n        await queryRunner.query(\"DROP INDEX `IDX_d6250a4222f475016bba5944e1` ON `daily_balance`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createDailyBalanceRelationship1561358492040.html":{"url":"classes/createDailyBalanceRelationship1561358492040.html","title":"class - createDailyBalanceRelationship1561358492040","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createDailyBalanceRelationship1561358492040\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561358492040-create_daily_balance_relationship.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561358492040-create_daily_balance_relationship.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561358492040-create_daily_balance_relationship.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createDailyBalanceRelationship1561358492040 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `daily_balance` ADD `userId` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `daily_balance` ADD CONSTRAINT `FK_91e75ed61bb07ebda3912510f24` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `daily_balance` DROP FOREIGN KEY `FK_91e75ed61bb07ebda3912510f24`\");\n        await queryRunner.query(\"ALTER TABLE `daily_balance` DROP COLUMN `userId`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createOauth1560545960045.html":{"url":"classes/createOauth1560545960045.html","title":"class - createOauth1560545960045","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createOauth1560545960045\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1560545960045-create_oauth.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560545960045-create_oauth.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560545960045-create_oauth.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createOauth1560545960045 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP FOREIGN KEY `FK_9949557d0e1b2c19e5344c171e9`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP FOREIGN KEY `FK_c425901c1f66598550020494008`\");\n        await queryRunner.query(\"DROP INDEX `IDX_6ed9067942d7537ce359e172ff` ON `client`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `token`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `expirationDate`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `userId`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `clientId`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `name`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `clientId`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `clientSecret`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `trusted`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `access_token` text NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `user_id` int NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `client_id` varchar(255) NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD UNIQUE INDEX `IDX_7510ce0a84bde51dbff978b4b4` (`client_id`)\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `client_secret` text NOT NULL\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `client_secret`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP INDEX `IDX_7510ce0a84bde51dbff978b4b4`\");\n        await queryRunner.query(\"ALTER TABLE `client` DROP COLUMN `client_id`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `user_id`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP COLUMN `access_token`\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `trusted` tinyint NOT NULL DEFAULT '0'\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `clientSecret` text CHARACTER SET \\\"latin1\\\" COLLATE \\\"latin1_swedish_ci\\\" NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `clientId` varchar(200) CHARACTER SET \\\"latin1\\\" COLLATE \\\"latin1_swedish_ci\\\" NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `client` ADD `name` text CHARACTER SET \\\"latin1\\\" COLLATE \\\"latin1_swedish_ci\\\" NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `clientId` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `userId` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `expirationDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD `token` text CHARACTER SET \\\"latin1\\\" COLLATE \\\"latin1_swedish_ci\\\" NOT NULL\");\n        await queryRunner.query(\"CREATE UNIQUE INDEX `IDX_6ed9067942d7537ce359e172ff` ON `client` (`clientId`)\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD CONSTRAINT `FK_c425901c1f66598550020494008` FOREIGN KEY (`clientId`) REFERENCES `client`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD CONSTRAINT `FK_9949557d0e1b2c19e5344c171e9` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createOauth2Middleware1561200781531.html":{"url":"classes/createOauth2Middleware1561200781531.html","title":"class - createOauth2Middleware1561200781531","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createOauth2Middleware1561200781531\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561200781531-create_oauth2_middleware.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561200781531-create_oauth2_middleware.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561200781531-create_oauth2_middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createOauth2Middleware1561200781531 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP INDEX `IDX_9949557d0e1b2c19e5344c171e` ON `access_token`\");\n        await queryRunner.query(\"ALTER TABLE `access_token` ADD CONSTRAINT `FK_9949557d0e1b2c19e5344c171e9` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `access_token` DROP FOREIGN KEY `FK_9949557d0e1b2c19e5344c171e9`\");\n        await queryRunner.query(\"CREATE UNIQUE INDEX `IDX_9949557d0e1b2c19e5344c171e` ON `access_token` (`userId`)\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createUserColumn1560421973676.html":{"url":"classes/createUserColumn1560421973676.html","title":"class - createUserColumn1560421973676","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createUserColumn1560421973676\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1560421973676-create_user_column.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560421973676-create_user_column.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1560421973676-create_user_column.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class createUserColumn1560421973676 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE TABLE IF NOT EXISTS `user` (`id` int NOT NULL AUTO_INCREMENT, `name` text NOT NULL, `email` text NOT NULL, `phone` text NULL, `password` text NOT NULL, `isVerified` tinyint NOT NULL, `dateCreated` timestamp NULL, `dateUpdated` timestamp NULL, `dateDeleted` timestamp NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP TABLE `user`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-modules/mailer : ^1.1.3\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/platform-fastify : ^6.3.1\n        \n            @nestjs/swagger : ^3.0.2\n        \n            @nestjs/typeorm : ^6.1.2\n        \n            @types/bcrypt : ^3.0.0\n        \n            bcrypt : ^3.0.6\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.9.1\n        \n            dotenv : ^8.0.0\n        \n            fastify-swagger : ^2.4.0\n        \n            mysql : ^2.17.1\n        \n            nestjs-config : ^1.4.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typeorm : ^0.2.18\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BalanceType   (src/.../daily-balance.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/daily-balance/daily-balance.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        BalanceType\n                    \n                \n                        \n                            \n                                 DEBIT\n                            \n                        \n                        \n                            \n                                Value : debit\n                            \n                        \n                        \n                            \n                                 CREDIT\n                            \n                        \n                        \n                            \n                                Value : credit\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getConfig   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DailyBalanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Oauth2Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_DailyBalanceModule\n\n\n\ncluster_DailyBalanceModule_providers\n\n\n\ncluster_MeModule\n\n\n\ncluster_MeModule_providers\n\n\n\ncluster_Oauth2Module\n\n\n\ncluster_Oauth2Module_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDailyBalanceModule\n\nDailyBalanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDailyBalanceModule->AppModule\n\n\n\n\n\nMeModule\n\nMeModule\n\nAppModule -->\n\nMeModule->AppModule\n\n\n\n\n\nOauth2Module\n\nOauth2Module\n\nAppModule -->\n\nOauth2Module->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nDailyBalanceService\n\nDailyBalanceService\n\nDailyBalanceModule -->\n\nDailyBalanceService->DailyBalanceModule\n\n\n\n\n\nMeService\n\nMeService\n\nMeModule -->\n\nMeService->MeModule\n\n\n\n\n\nOauth2Service\n\nOauth2Service\n\nOauth2Module -->\n\nOauth2Service->Oauth2Module\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userForAccountVerification1561019799282.html":{"url":"classes/userForAccountVerification1561019799282.html","title":"class - userForAccountVerification1561019799282","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userForAccountVerification1561019799282\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1561019799282-user_for_account_verification.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561019799282-user_for_account_verification.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1561019799282-user_for_account_verification.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class userForAccountVerification1561019799282 implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `account_verification` ADD `userId` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `account_verification` ADD UNIQUE INDEX `IDX_2d4eff3e8d902988754fde5be0` (`userId`)\");\n        await queryRunner.query(\"CREATE UNIQUE INDEX `REL_2d4eff3e8d902988754fde5be0` ON `account_verification` (`userId`)\");\n        await queryRunner.query(\"ALTER TABLE `account_verification` ADD CONSTRAINT `FK_2d4eff3e8d902988754fde5be03` FOREIGN KEY (`userId`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `account_verification` DROP FOREIGN KEY `FK_2d4eff3e8d902988754fde5be03`\");\n        await queryRunner.query(\"DROP INDEX `REL_2d4eff3e8d902988754fde5be0` ON `account_verification`\");\n        await queryRunner.query(\"ALTER TABLE `account_verification` DROP INDEX `IDX_2d4eff3e8d902988754fde5be0`\");\n        await queryRunner.query(\"ALTER TABLE `account_verification` DROP COLUMN `userId`\");\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessToken   (src/.../access-token.decorator.ts)\n                        \n                        \n                            config   (src/.../ormconfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/oauth2/access-token.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AccessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => {\n  return req.raw.accessToken;\n})\n                        \n                    \n\n\n            \n        \n\n    src/ormconfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConnectionOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'mysql',\n  host: '0.0.0.0',\n  port: 3306,\n  username: 'usernameall',\n  password: 'asdzxcfv123',\n  database: 'yuso_dev',\n  entities: [__dirname + '/**/*.entity{.ts,.js}'],\n\n  // We are using migrations, synchronize should be set to false.\n  synchronize: false,\n\n  // Run migrations automatically,\n  // you can disable this if you prefer running migration manually.\n  migrationsRun: true,\n  logging: true,\n  logger: 'file',\n\n  // allow both start:prod and start:dev to use migrations\n  // __dirname is either dist or src folder, meaning either\n  // the compiled js in prod or the ts in dev\n  migrations: [__dirname + '/migration/**/*{.ts,.js}'],\n  cli: {\n    migrationsDir: 'migration',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
